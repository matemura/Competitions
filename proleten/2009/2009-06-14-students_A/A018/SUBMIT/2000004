/*
user: A018
pass: 5r41ot
*/
#include <iostream>
#include <fstream>
#include <sstream>
#include <iomanip>
#include <cstring>
#include <ctime>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <algorithm>
#include <utility>
#include <numeric>
#include <functional>
#include <set>
#include <vector>
#include <bitset>
#include <queue>
#include <map>

using namespace std;

#define F(i,n) for (int i=0;i<n;i++)
#define Repi(n) F(i,n)
#define Repj(n) F(j,n)
#define Repk(n) F(k,n)
#define PI pair<int,int>
#define LL long long
#define PD pair<double,double>
#define PQ priority_queue
#define sqr(x) ((x)*(x))
#define VI vector<int>
#define MP make_pair
#define SZ size()
#define x first
#define y second
#define PB push_back

#define Time (double)clock()/CLOCKS_PER_SEC
#define ABS(x) (((x)>0)?(x):(-(x)))
#define MAX(a,b) ((a)>(b)?(a):(b))
#define MIN(a,b) ((a)<(b)?(a):(b))
#define sign(a) (((a)>0)-((a)<0))

const int precompute[81]=
{
1,1,2,3,5,7,11,15,22,30,
41,55,75,97,129,166,213,272,343,430,
536,664,822,1008,1230,1495,1808,2178,2616,3122,
3720,4416,5221,6164,7249,8497,9941,11593,13481,15665,
18150,20971,24184,27827,31974,36650,41944,47930,54670,62256,
70786,80369,91112,103154,116602,131678,148498,167233,188134,211415,
237274,266013,297967,333355,372567,416029,464134,517244,575923,640708,
712174,790933,877625,973112,1078082,1193425,1320094,1459178,1611738,1778922,
1962030};

set<PI> dp[82];
int N;

int main()
{
	scanf("%d",&N);
	printf("%d\n",precompute[N]);
	
	/*
	freopen("w.txt","w",stdout);
	
	dp[0].insert(MP(0,1));
	for (int i=1;i<=N;i++)
	 {
	 	//cout<<"\n\n"<<i<<"\n";
	 	for (int j=0;j<i;j++)
	 	 {
	 	      //cout<<"   from "<<j<<"\n";
	 	      for (set<PI>::iterator it=dp[j].begin(); it!=dp[j].end(); it++)
	 	       {
	 	       		int a=it->x,b=it->y;
	 	       		//cout<<"          "<<a<<"/"<<b<<" + 1/"<<i-j<<"\n";
	 	       		int c=a*(i-j)+b;
	 	       		int d=b*(i-j);
	 	       		int g=__gcd(c,d); c/=g; d/=g;
	 	       		//cout<<"                              = "<<c<<"/"<<d<<"\n";
	 	       		dp[i].insert(MP(c,d));
	 	       }
	 	 }
	 	fprintf(stderr,"%d = %d\n",i,dp[i].SZ);
	 	cout<<dp[i].SZ<<",";
	 	if ((i+1)%10==0) cout<<"\n";
	 	fflush(stdout);
	 }
	*/
	return 0;
}
