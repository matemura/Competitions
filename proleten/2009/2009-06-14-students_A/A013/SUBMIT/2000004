#include <cstdio>
#include <algorithm>

const int MAXN = 1 << 17;

int n;
int f[MAXN], s[MAXN];

void print (int x[]) {
    for (int i = 0; i < n; ++i) printf("%d ", x[i]);
    puts("");
}

int main () {
    scanf("%d", &n);

    int i;
    for (i = 0; i < n; ++i) scanf("%d", f+i);
    std::sort(f,f+n);
    //print(f);

    if (2 == n) { printf("%d\n", f[0]+f[1]); return 0; }
    if (3 == n) { printf("%d\n", 2*f[0]+2*f[1]+f[2]); return 0; }
    if (4 == n) { printf("%d\n", 2*(f[0]+f[1]+f[2]+f[3])); return 0; }

    s[0] = f[0]; s[n-1] = f[n-1];
    s[1] = s[0]+f[1]; s[n-2] = f[n-2]+s[n-1];
    int l = 2, r = n-3, tmp;
    while (l <= r) {
        //print(s); printf("l=%d r=%d\n", l, r);
        if (s[l-1] <= s[r+1]) { s[l] = s[l-1]+s[l-2]+f[l]+f[l-1]; l++; }
        else { s[r] = s[r+1]+s[r+2]+f[r]+f[r+1]; r--; }
    }
    l ^= r; r ^= l; l ^= r;
    //print(s); printf("l=%d r=%d\n", l, r);
    s[l] = s[l-1]+f[l]+f[r]+s[r+1]+s[r]+s[l];
    //print(s);
    printf("%d\n", s[l]);

    return 0;
}
