// slow n^3
#include <cstdio>
#include <cstdlib>
#define maxN 2048

int cmp(const void *a, const void *b)
{return *(int*)b-*(int*)a;}

int n;
long long F[maxN][maxN];
int list[maxN];
//int A[maxN][maxN];

int main()
{
    int i,j,k,t;
    scanf("%d",&n);
    for (i=1;i<=n;++i) scanf("%d",&list[i]);
    qsort(&list[1],n,sizeof(int),cmp);
    //for (i=1;i<=n;++i) printf("%d ",list[i]);
    //printf("\n");
    //for (i=1;i<=n;++i) F[i][0] = list[i];
    for (i=1;i<=n;++i) list[i] += list[i-1];

    for (j=1;j<=n;++j) {
        for (i=1;i<=n-j;++i) {
            F[i][j] = -1;
            for (k=0;k<=j;++k) {
                t = F[i][k]-list[i-1] + F[i+k+1][j-k-1]+list[i+j];
                //printf("t=%d ",t);
                if (t < F[i][j] || F[i][j] == -1) {F[i][j] = t;/*A[i][j]=i+k;*/}
                }
            //printf("\n");
            }
        }
    /*for (i=1;i<=n;++i) {
        for (j=0;j<n;++j) printf("%4d",F[i][j]);
        printf("\n");
        }*/
    printf("%lld\n",F[1][n-1]);
    /*for (i=1;i<=n;++i) {
        for (j=0;j<n;++j) printf("%4d",A[i][j]);
        printf("\n");
        }*/
    return 0;
}
