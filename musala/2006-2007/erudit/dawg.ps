%!PS-Adobe-2.0
%%Creator: dvipsk 5.58f Copyright 1986, 1994 Radical Eye Software
%%Title: verin3.dvi
%%Pages: 20
%%PageOrder: Ascend
%%BoundingBox: 0 0 596 842
%%EndComments
%DVIPSCommandLine: dvips verin3
%DVIPSParameters: dpi=600, compressed, comments removed
%DVIPSSource:  TeX output 1997.03.26:1429
%%BeginProcSet: texc.pro
/TeXDict 250 dict def TeXDict begin /N{def}def /B{bind def}N /S{exch}N
/X{S N}B /TR{translate}N /isls false N /vsize 11 72 mul N /hsize 8.5 72
mul N /landplus90{false}def /@rigin{isls{[0 landplus90{1 -1}{-1 1}
ifelse 0 0 0]concat}if 72 Resolution div 72 VResolution div neg scale
isls{landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div
hsize mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul
TR matrix currentmatrix dup dup 4 get round 4 exch put dup dup 5 get
round 5 exch put setmatrix}N /@landscape{/isls true N}B /@manualfeed{
statusdict /manualfeed true put}B /@copies{/#copies X}B /FMat[1 0 0 -1 0
0]N /FBB[0 0 0 0]N /nn 0 N /IE 0 N /ctr 0 N /df-tail{/nn 8 dict N nn
begin /FontType 3 N /FontMatrix fntrx N /FontBBox FBB N string /base X
array /BitMaps X /BuildChar{CharBuilder}N /Encoding IE N end dup{/foo
setfont}2 array copy cvx N load 0 nn put /ctr 0 N[}B /df{/sf 1 N /fntrx
FMat N df-tail}B /dfs{div /sf X /fntrx[sf 0 0 sf neg 0 0]N df-tail}B /E{
pop nn dup definefont setfont}B /ch-width{ch-data dup length 5 sub get}
B /ch-height{ch-data dup length 4 sub get}B /ch-xoff{128 ch-data dup
length 3 sub get sub}B /ch-yoff{ch-data dup length 2 sub get 127 sub}B
/ch-dx{ch-data dup length 1 sub get}B /ch-image{ch-data dup type
/stringtype ne{ctr get /ctr ctr 1 add N}if}B /id 0 N /rw 0 N /rc 0 N /gp
0 N /cp 0 N /G 0 N /sf 0 N /CharBuilder{save 3 1 roll S dup /base get 2
index get S /BitMaps get S get /ch-data X pop /ctr 0 N ch-dx 0 ch-xoff
ch-yoff ch-height sub ch-xoff ch-width add ch-yoff setcachedevice
ch-width ch-height true[1 0 0 -1 -.1 ch-xoff sub ch-yoff .1 add]/id
ch-image N /rw ch-width 7 add 8 idiv string N /rc 0 N /gp 0 N /cp 0 N{
rc 0 ne{rc 1 sub /rc X rw}{G}ifelse}imagemask restore}B /G{{id gp get
/gp gp 1 add N dup 18 mod S 18 idiv pl S get exec}loop}B /adv{cp add /cp
X}B /chg{rw cp id gp 4 index getinterval putinterval dup gp add /gp X
adv}B /nd{/cp 0 N rw exit}B /lsh{rw cp 2 copy get dup 0 eq{pop 1}{dup
255 eq{pop 254}{dup dup add 255 and S 1 and or}ifelse}ifelse put 1 adv}
B /rsh{rw cp 2 copy get dup 0 eq{pop 128}{dup 255 eq{pop 127}{dup 2 idiv
S 128 and or}ifelse}ifelse put 1 adv}B /clr{rw cp 2 index string
putinterval adv}B /set{rw cp fillstr 0 4 index getinterval putinterval
adv}B /fillstr 18 string 0 1 17{2 copy 255 put pop}for N /pl[{adv 1 chg}
{adv 1 chg nd}{1 add chg}{1 add chg nd}{adv lsh}{adv lsh nd}{adv rsh}{
adv rsh nd}{1 add adv}{/rc X nd}{1 add set}{1 add clr}{adv 2 chg}{adv 2
chg nd}{pop nd}]dup{bind pop}forall N /D{/cc X dup type /stringtype ne{]
}if nn /base get cc ctr put nn /BitMaps get S ctr S sf 1 ne{dup dup
length 1 sub dup 2 index S get sf div put}if put /ctr ctr 1 add N}B /I{
cc 1 add D}B /bop{userdict /bop-hook known{bop-hook}if /SI save N @rigin
0 0 moveto /V matrix currentmatrix dup 1 get dup mul exch 0 get dup mul
add .99 lt{/QV}{/RV}ifelse load def pop pop}N /eop{SI restore showpage
userdict /eop-hook known{eop-hook}if}N /@start{userdict /start-hook
known{start-hook}if pop /VResolution X /Resolution X 1000 div /DVImag X
/IE 256 array N 0 1 255{IE S 1 string dup 0 3 index put cvn put}for
65781.76 div /vsize X 65781.76 div /hsize X}N /p{show}N /RMat[1 0 0 -1 0
0]N /BDot 260 string N /rulex 0 N /ruley 0 N /v{/ruley X /rulex X V}B /V
{}B /RV statusdict begin /product where{pop product dup length 7 ge{0 7
getinterval dup(Display)eq exch 0 4 getinterval(NeXT)eq or}{pop false}
ifelse}{false}ifelse end{{gsave TR -.1 -.1 TR 1 1 scale rulex ruley
false RMat{BDot}imagemask grestore}}{{gsave TR -.1 -.1 TR rulex ruley
scale 1 1 false RMat{BDot}imagemask grestore}}ifelse B /QV{gsave
transform round exch round exch itransform moveto rulex 0 rlineto 0
ruley neg rlineto rulex neg 0 rlineto fill grestore}B /a{moveto}B /delta
0 N /tail{dup /delta X 0 rmoveto}B /M{S p delta add tail}B /b{S p tail}
B /c{-4 M}B /d{-3 M}B /e{-2 M}B /f{-1 M}B /g{0 M}B /h{1 M}B /i{2 M}B /j{
3 M}B /k{4 M}B /w{0 rmoveto}B /l{p -4 w}B /m{p -3 w}B /n{p -2 w}B /o{p
-1 w}B /q{p 1 w}B /r{p 2 w}B /s{p 3 w}B /t{p 4 w}B /x{0 S rmoveto}B /y{
3 2 roll p a}B /bos{/SS save N}B /eos{SS restore}B end
%%EndProcSet
%%BeginProcSet: pstricks.pro
% PostScript prologue for pstricks.tex.
% Created 1993/3/12. Source file was pstricks.doc
% Version 0.93a, 93/03/12.
% For use with Rokicki's dvips.
/tx@Dict 200 dict def tx@Dict begin
/ADict 25 dict def
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/Atan { /atan load stopped { pop pop 0 } if } def
/Div { dup 0 eq { pop } { div } ifelse } def
/NET { neg exch neg exch T } def
/Pyth { dup mul exch dup mul add sqrt } def
/PtoC { 2 copy cos mul 3 1 roll sin mul } def
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def }
def
/PathLength { flattenpath /z 0 def { /y1 ED /x1 ED /y2 y1 def /x2 x1 def
} { /y ED /x ED PathLength@ } {} { /y y2 def /x x2 def PathLength@ }
pathforall z } def
/STP { .996264 dup scale } def
/STV { SDict begin normalscale end STP  } def
/DashLine { dup 0 gt { /a .5 def PathLength exch div } { pop /a 1 def
PathLength } ifelse /b ED /x ED /y ED /z y x add def b a .5 sub 2 mul y
mul sub z Div round z mul a .5 sub 2 mul y mul add b exch Div dup y mul
/y ED x mul /x ED x 0 eq y 0 eq and { /x 1 def /y 1 def } if [ y x ] 1 a
sub y mul setdash stroke } def
/DotLine { /b PathLength def /a ED /z ED /y CLW def /z y z add def a 0 gt
{ /b b a div def } { a 0 eq { /b b y sub def } { a -3 eq { /b b y add
def } if } ifelse } ifelse [ 0 b b z Div round Div dup 0 le { pop 1 } if
] a 0 gt { 0 } { y 2 div a -2 gt { neg } if } ifelse setdash 1
setlinecap stroke } def
/LineFill { abs CLW add /a ED gsave clip pathbbox a Div ceiling /y2 ED
/x2 ED a Div floor /y1 ED /x1 ED /n y2 y1 sub 1 add cvi def /y1 a y1 mul
def newpath 2 setlinecap n { currentstrokeadjust == x1 y1 moveto x2 y1 L
stroke /y1 y1 a add def } repeat grestore } def
/LineFill { abs CLW add /a ED gsave clip pathbbox a Div ceiling /y2 ED
/x2 ED a Div floor /y1 ED /x1 ED /n y2 y1 sub 1 add cvi def /y1 a y1 mul
def newpath 2 setlinecap systemdict /currentstrokeadjust known {
currentstrokeadjust } { false } ifelse { /t { } def } { /t { transform
0.25 sub round 0.25 add exch 0.25 sub round 0.25 add exch itransform }
bind def } ifelse n { x1 y1 t moveto x2 y1 t L stroke /y1 y1 a add def }
repeat grestore } def
/BeginArrow { ADict begin /@mtrx CM def gsave 2 copy T 2 index sub neg
exch 3 index sub exch Atan rotate newpath } def
/EndArrow { @mtrx setmatrix CP grestore end } def
/Arrow { CLW mul add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1
scale } if w neg h moveto 0 0 L w h L w neg a neg rlineto gsave fill
grestore } def
/Tbar { CLW mul add /z ED z -2 div CLW 2 div moveto z 0 rlineto stroke 0
CLW moveto } def
/Bracket { CLW mul add dup CLW sub 2 div /x ED mul CLW add /y ED /z CLW 2
div def x neg y moveto x neg CLW 2 div L x CLW 2 div L x y L stroke 0
CLW moveto } def
/RoundBracket { CLW mul add dup 2 div /x ED mul /y ED /mtrx CM def 0 CLW
2 div T x y mul 0 ne { x y scale } if 1 1 moveto .85 .5 .35 0 0 0
curveto -.35 0 -.85 .5 -1 1 curveto mtrx setmatrix stroke 0 CLW moveto }
def
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
/closepath load } pathforall ] cvx newpath 3 1 roll T exec } def
/SD { 0 360 arc fill } def
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore }
def
/NArray { aload length 2 div dup dup cvi eq not { exch pop } if /n exch
cvi def } def
/NArray { /f ED counttomark 2 div dup cvi /n ED n eq not { exch pop } if
f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse } def
/Line { NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub
def n { Lineto } repeat CP 4 2 roll ArrowB L pop pop } if } def
/Arcto { /a [ 6 -2 roll ] cvx def a r /arcto load stopped { 5 } { 4 }
ifelse { pop } repeat a } def
/CheckClosed { dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
and { pop pop /n n 1 sub def } if } def
/Polygon { NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n { pop pop }
repeat } { n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED /x0 ED /y1
ED /x1 ED x1 y1 /x1 x0 x1 add 2 div def /y1 y0 y1 add 2 div def x1 y1
moveto /n n 2 sub def n { Lineto } repeat x1 y1 x0 y0 6 4 roll Lineto
Lineto pop pop closepath } ifelse } def
/CCA { /y ED /x ED 2 copy y sub /dy1 ED x sub /dx1 ED /l1 dx1 dy1 Pyth
def } def
/CCA { /y ED /x ED 2 copy y sub /dy1 ED x sub /dx1 ED /l1 dx1 dy1 Pyth
def } def
/CC { /l0 l1 def /x1 x dx sub def /y1 y dy sub def /dx0 dx1 def /dy0 dy1
def CCA /dx dx0 l1 c exp mul dx1 l0 c exp mul add def /dy dy0 l1 c exp
mul dy1 l0 c exp mul add def /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos
abs b exp a mul dx dy Pyth Div 2 div def /x2 x l0 dx mul m mul sub def
/y2 y l0 dy mul m mul sub def /dx l1 dx mul m mul neg def /dy l1 dy mul
m mul neg def } def
/IC { /c c 1 add def c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if }
ifelse /a a 2 mul 3 div 45 cos b exp div def CCA /dx 0 def /dy 0 def }
def
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
/OpenCurve { NArray n 3 lt { n { pop pop } repeat } { BOC /n n 3 sub def
n { NC } repeat EOC } ifelse } def
/AltCurve { { false NArray n 2 mul 2 roll [ n 2 mul 3 sub 1 roll ] aload
/Points ED n 2 mul -2 roll } { false NArray } ifelse n 4 lt { n { pop
pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse } def
/ClosedCurve { NArray n 3 lt { n { pop pop } repeat } { n 3 gt {
CheckClosed } if 6 copy n 2 mul 6 add 6 roll IC CC x y moveto n { NC }
repeat closepath pop pop } ifelse } def
/EndDot { { /z DS def } { /z 0 def } ifelse /b ED 0 z DS SD b { 0 z DS
CLW sub SD } if 0 DS z add CLW 4 div sub moveto } def
/Rect { x1 y1 y2 add 2 div moveto x1 y2 lineto x2 y2 lineto x2 y1 lineto
x1 y1 lineto closepath } def
/OvalFrame { x1 x2 eq y1 y2 eq or { pop pop x1 y1 moveto x2 y2 L } { y1
y2 sub abs x1 x2 sub abs 2 copy gt { exch pop } { pop } ifelse 2 div
exch { dup 3 1 roll mul exch } if 2 copy lt { pop } { exch pop } ifelse
/b ED x1 y1 y2 add 2 div moveto x1 y2 x2 y2 b arcto x2 y2 x2 y1 b arcto
x2 y1 x1 y1 b arcto x1 y1 x1 y2 b arcto 16 { pop } repeat closepath }
ifelse } def
/Frame { CLW mul /a ED 3 -1 roll 2 copy gt { exch } if a sub /y2 ED a add
/y1 ED 2 copy gt { exch } if a sub /x2 ED a add /x1 ED 1 index 0 eq {
pop pop Rect } { OvalFrame } ifelse } def
/Parab { /y0 exch def /x0 exch def /y1 exch def /x1 exch def /dx x0 x1
sub 3 div def /dy y0 y1 sub 3 div def x0 dx sub y0 dy add x1 y1 ArrowA
x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB curveto /Points [ x1 y1 x0
y0 x0 2 mul x1 sub y1 ] def } def
/Grid { /a 4 string def /b ED /d ED /n ED cvi dup 1 lt { pop 1 } if /c ED
c div dup 0 eq { pop 1 } if /cy ED c div dup 0 eq { pop 1 } if /cx ED cy
div cvi /y ED cx div cvi /x ED cy div cvi /y2 ED cx div cvi /x2 ED cy
div cvi /y1 ED cx div cvi /x1 ED /h y2 y1 sub 0 gt { 1 } { -1 } ifelse
def /w x2 x1 sub 0 gt { 1 } { -1 } ifelse def b 0 gt { /z1 b 4 div CLW 2
div add def /Helvetica findfont b scalefont setfont /b b .95 mul CLW 2
div add def } if gsave n 0 gt { 1 setlinecap [ 0 cy n div ] 0 setdash }
{ 2 setlinecap } ifelse /c x1 def /i 500 w mul x1 add def /e y cy mul
def /f y1 cy mul def /g y2 cy mul def x1 cx mul 0 T { newpath 0 e moveto
b 0 gt { gsave d c a cvs dup stringwidth pop /z2 ED w 0 gt {z1} {z1 z2
add neg} ifelse h 0 gt {b neg} {z1} ifelse rmoveto show grestore } if 0
f moveto 0 g L stroke cx w mul 0 T c x2 eq c i eq or {exit} if /c c w
add def } loop grestore gsave n 0 gt { 1 setlinecap [ 0 cx n div ] 0
setdash } { 2 setlinecap } ifelse /c y1 def /i 500 h mul y1 add def /e x
cx mul def /f x1 cx mul def /g x2 cx mul def 0 y1 cy mul T { newpath e 0
moveto b 0 gt { gsave d c a cvs dup stringwidth pop /z2 ED w 0 gt {z1 z2
add neg} {z1} ifelse h 0 gt {z1} {b neg} ifelse rmoveto show grestore }
if f 0 moveto g 0 L stroke 0 cy h mul T c y2 eq c i eq or {exit} if /c c
h add def } loop grestore } def
/ArcArrow { /d ED /b ED /a ED gsave newpath 0 -1000 moveto clip newpath 0
1 0 0 b grestore c mul /e ED pop pop pop r a e d PtoC y add exch x add
exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
mul neg d } def
/Ellipse { /mtrx CM def T scale 0 0 1 5 3 roll arc mtrx setmatrix } def
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /lmtrx [ tx@Dict /lmtrx known { lmtrx aload pop } if CM ] def
CP 4 2 roll T moveto } def
/PutEnd { CP /lmtrx [ lmtrx aload pop setmatrix ] def moveto } def
/Uput { /a ED add 2 div /h ED 2 div /w ED /s a sin def /c a cos def /b s
abs c abs 2 copy gt dup /q ED { pop } { exch pop } ifelse def /w1 c b
div w mul def /h1 s b div h mul def q { w1 abs w sub dup c mul abs } {
h1 abs h sub dup s mul abs } ifelse } def
/UUput { /z ED abs /y ED /x ED q { x s div c mul abs y gt } { x c div s
mul abs y gt } ifelse { x x mul y y mul sub z z mul add sqrt z add } { q
{ x s div } { x c div } ifelse abs } ifelse a PtoC h1 add exch w1 add
exch } def
/BeginOL { dup (all) eq exch TheOL eq or { IfVisible not { CP OLUnit T
moveto /IfVisible true def } if } { IfVisible { CP OLUnit NET moveto
/IfVisible false def } if } ifelse } def
/InitOL { /OLUnit [ gsave CM STV 2890.79999 dup moveto setmatrix CP
grestore ] cvx def /BOL { BeginOL } def /IfVisible true def } def
end
%%EndProcSet
%%BeginProcSet: pst-node.pro
% PostScript prologue for pst-node.tex.
% Created 1993/3/12. Source file was pst-node.doc
% Version 0.93a, 93/03/12.
% For use with Rokicki's dvips.
/tx@NodeDict 200 dict def tx@NodeDict begin
/NewNode { gsave /next ED dict dup 3 -1 roll ED begin tx@Dict begin STV
CP T exec end /NodeMtrx CM def next end grestore } def
/InitPnode { /Y ED /X ED /NodePos { Nodesep Cos mul Nodesep Sin mul } def
} def
/InitCnode { /r ED /Y ED /X ED /NodePos { Nodesep r add dup Cos mul exch
Sin mul } def } def
/GetRnodePos { Cos 0 gt { /dx r Nodesep add def } { /dx l Nodesep sub def
} ifelse Sin 0 gt { /dy u Nodesep add def } { /dy d Nodesep sub def }
ifelse dx Sin mul abs dy Cos mul abs gt { dy Cos mul Sin div dy } { dx
dup Sin mul Cos Div } ifelse } def
/InitRnode { /r ED r mul neg /l ED /r r l add def /X l neg def { neg /d
ED /u ED /Y 0 def } { neg /Y ED Y sub /u ED u mul neg /d ED /u u d add
def /Y Y d sub def } ifelse /NodePos { GetRnodePos } def } def
/InitRNode { /Y ED /X ED /r ED /X r 2 div X add def /r r X sub def /l X
neg def Y add neg /d ED Y sub /u ED /NodePos { GetRnodePos } def } def
/GetOnodePos { /ww w Nodesep add def /hh h Nodesep add def Sin ww mul Cos
hh mul Atan dup cos ww mul exch sin hh mul } def
/GetCenter { begin X Y NodeMtrx transform CM itransform end } def
/GetAngle { nodeA GetCenter nodeB GetCenter 3 -1 roll sub 3 1 roll sub
neg Atan  } def
/GetEdge { begin /Nodesep ED dup 1 0 NodeMtrx dtransform CM idtransform
exch atan sub dup sin /Sin ED cos /Cos ED NodePos Y add exch X add exch
NodeMtrx transform CM itransform end 4 2 roll 1 index 0 eq { pop pop } {
2 copy 5 2 roll cos mul add 4 1 roll sin mul sub exch } ifelse } def
/GetPos { OffsetA AngleA NodesepA nodeA GetEdge /y1 ED /x1 ED OffsetB
AngleB NodesepB nodeB GetEdge /y2 ED /x2 ED } def
/InitNC { /nodeB ED /nodeA ED /NodesepB ED /NodesepA ED /OffsetB ED
/OffsetA ED tx@NodeDict nodeA known tx@NodeDict nodeB known and dup {
/nodeA nodeA load def /nodeB nodeB load def } if } def
/LineMP { 4 copy 1 t sub mul exch t mul add 3 1 roll 1 t sub mul exch t
mul add exch 6 2 roll sub 3 1 roll sub Atan  } def
/NCCoor { GetAngle /AngleA ED /AngleB AngleA 180 add def GetPos /LPutVar
[ x2 x1 y2 y1 ] cvx def /LPutPos { LPutVar LineMP } def x1 y1 x2 y2 }
def
/NCLine { NCCoor tx@Dict begin ArrowB 4 2 roll ArrowA lineto end } def
/BezierMidpoint { /y3 ED /x3 ED /y2 ED /x2 ED /y1 ED /x1 ED /y0 ED /x0 ED
/t ED /cx x1 x0 sub 3 mul def /cy y1 y0 sub 3 mul def /bx x2 x1 sub 3
mul cx sub def /by y2 y1 sub 3 mul cy sub def /ax x3 x0 sub cx sub bx
sub def /ay y3 y0 sub cy sub by sub def ax t 3 exp mul bx t t mul mul
add cx t mul add x0 add ay t 3 exp mul by t t mul mul add cy t mul add
y0 add 3 ay t t mul mul mul 2 by t mul mul add cy add 3 ax t t mul mul
mul 2 bx t mul mul add cx add atan } def
/GetArms { /x1a armA AngleA cos mul x1 add def /y1a armA AngleA sin mul
y1 add def /x2a armB AngleB cos mul x2 add def /y2a armB AngleB sin mul
y2 add def } def
/NCCurve { GetPos x1 x2 sub y1 y2 sub Pyth 2 div dup 3 -1 roll mul /armA
ED mul /armB ED GetArms x1a y1a x1 y1 tx@Dict begin ArrowA end x2a y2a
x2 y2 tx@Dict begin ArrowB end curveto /LPutVar [ x1 y1 x1a y1a x2a y2a
x2 y2 ] cvx def /LPutPos { t LPutVar BezierMidpoint } def } def
/AnglesMP { LPutVar t 3 gt { /t t 3 sub def } { t 2 gt { /t t 2 sub def
10 -2 roll } { t 1 gt { /t t 1 sub def 10 -4 roll } { 10 4 roll } ifelse
} ifelse } ifelse 6 { pop } repeat 3 -1 roll exch LineMP  } def
/NCAngles { GetPos GetArms /mtrx AngleA matrix rotate def x1a y1a mtrx
transform pop x2a y2a mtrx transform exch pop mtrx itransform /y0 ED /x0
ED mark armB 0 ne { x2 y2 } if x2a y2a x0 y0 x1a y1a armA 0 ne { x1 y1 }
if tx@Dict begin false Line end /LPutVar [ x2 y2 x2a y2a x0 y0 x1a y1a
x1 y1 ] cvx def /LPutPos { AnglesMP } def } def
/NCAngle { GetPos /x2a armB AngleB cos mul x2 add def /y2a armB AngleB
sin mul y2 add def /mtrx AngleA matrix rotate def x2a y2a mtrx transform
pop x1 y1 mtrx transform exch pop mtrx itransform /y0 ED /x0 ED mark
armB 0 ne { x2 y2 } if x2a y2a x0 y0 x1 y1 tx@Dict begin false Line end
/LPutVar [ x2 y2 x2 y2 x2a y2a x0 y0 x1 y1 ] cvx def /LPutPos { AnglesMP
} def } def
/NCBar { GetPos GetArms /mtrx AngleA matrix rotate def x1a y1a mtrx
transform pop x2a y2a mtrx transform pop sub dup 0 mtrx itransform 3 -1
roll 0 gt { /y2a exch y2a add def /x2a exch x2a add def } { /y1a exch
neg y1a add def /x2a exch neg x2a add def } ifelse mark x2 y2 x2a y2a
x1a y1a x1 y1 tx@Dict begin false Line end /LPutVar [ x2 y2 x2 y2 x2a
y2a x1a y1a x1 y1 ] cvx def /LPutPos { LPutVar AnglesMP } def } def
/NCDiag { GetPos GetArms mark x2 y2 x2a y2a x1a y1a x1 y1 tx@Dict begin
false Line end /LPutVar [ x2 y2 x2 y2 x2a y2a x1a y1a x1 y1 ] cvx def
/LPutPos { AnglesMP } def } def
/NCDiagg { OffsetA AngleA NodesepA nodeA GetEdge /y1 ED /x1 ED /x1a armA
AngleA cos mul x1 add def /y1a armA AngleA sin mul y1 add def nodeB
GetCenter y1a sub exch x1a sub Atan 180 add /AngleB ED OffsetB AngleB
NodesepB nodeB GetEdge /y2 ED /x2 ED mark x2 y2 x1a y1a x1 y1 tx@Dict
begin false Line end /LPutVar [ x2 y2 x2 y2 x2 y2 x1a y1a x1 y1] cvx def
/LPutPos { AnglesMP } def } def
/LoopMP { /t t abs def [ LPutVar ] length 2 div 1 sub dup t lt { /t ED }
{ pop } ifelse mark LPutVar t cvi { /t t 1 sub def pop pop } repeat
counttomark 1 add 4 roll cleartomark 3 -1 roll exch LineMP  } def
/NCLoop { GetPos GetArms /mtrx AngleA matrix rotate def x1a y1a mtrx
transform loopsize add /y1b ED /x1b ED /x2b x2a y2a mtrx transform pop
def x2b y1b mtrx itransform /y2b ED /x2b ED x1b y1b mtrx itransform /y1b
ED /x1b ED mark armB 0 ne { x2 y2 } if x2a y2a x2b y2b x1b y1b x1a y1a
armA 0 ne { x1 y1 } if tx@Dict begin false Line end /LPutVar [ x2 y2 x2a
y2a x2b y2b x1b y1b x1a y1a x1 y1 ] cvx def /LPutPos { LoopMP } def }
def
/NCCircle { nodeA GetCenter 0 0 NodesepA nodeA GetEdge pop 3 1 roll /Y ED
/X ED X sub 2 div dup 2 exp r r mul sub abs sqrt atan 2 mul /a ED r
AngleA 90 add PtoC Y add exch X add exch 2 copy /LPutVar [ 4 2 roll r a
] def /LPutPos { LPutVar aload pop t 360 mul add dup 5 1 roll 90 sub
PtoC 3 -1 roll add 3 1 roll add exch 3 -1 roll } def r AngleA 90 sub a
add AngleA 270 add a sub tx@Dict begin /angleB ED /angleA ED /r ED /c
57.2957 r Div def /y ED /x ED } def
/LPutCoor { tx@NodeDict /LPutPos known { gsave LPutPos tx@Dict begin
/langle ED CM 3 1 roll STV CP 3 -1 roll sub neg 3 1 roll sub exch moveto
setmatrix CP end grestore } { 0 0 tx@Dict /langle 0 def end } ifelse }
def
end
%%EndProcSet
%%BeginProcSet: special.pro
TeXDict begin /SDict 200 dict N SDict begin /@SpecialDefaults{/hs 612 N
/vs 792 N /ho 0 N /vo 0 N /hsc 1 N /vsc 1 N /ang 0 N /CLIP 0 N /rwiSeen
false N /rhiSeen false N /letter{}N /note{}N /a4{}N /legal{}N}B
/@scaleunit 100 N /@hscale{@scaleunit div /hsc X}B /@vscale{@scaleunit
div /vsc X}B /@hsize{/hs X /CLIP 1 N}B /@vsize{/vs X /CLIP 1 N}B /@clip{
/CLIP 2 N}B /@hoffset{/ho X}B /@voffset{/vo X}B /@angle{/ang X}B /@rwi{
10 div /rwi X /rwiSeen true N}B /@rhi{10 div /rhi X /rhiSeen true N}B
/@llx{/llx X}B /@lly{/lly X}B /@urx{/urx X}B /@ury{/ury X}B /magscale
true def end /@MacSetUp{userdict /md known{userdict /md get type
/dicttype eq{userdict begin md length 10 add md maxlength ge{/md md dup
length 20 add dict copy def}if end md begin /letter{}N /note{}N /legal{}
N /od{txpose 1 0 mtx defaultmatrix dtransform S atan/pa X newpath
clippath mark{transform{itransform moveto}}{transform{itransform lineto}
}{6 -2 roll transform 6 -2 roll transform 6 -2 roll transform{
itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll curveto}}{{
closepath}}pathforall newpath counttomark array astore /gc xdf pop ct 39
0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}if}N
/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1 -1
scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3 get
ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip yflip
not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub neg 0
TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{noflips{TR
pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop 90 rotate 1
-1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg
TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr 1 get neg
sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr 2 get ppr
0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4 -1 roll add
2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S TR}if}N /cp
{pop pop showpage pm restore}N end}if}if}N /normalscale{Resolution 72
div VResolution 72 div neg scale magscale{DVImag dup scale}if 0 setgray}
N /psfts{S 65781.76 div N}N /startTexFig{/psf$SavedState save N userdict
maxlength dict begin /magscale true def normalscale currentpoint TR
/psf$ury psfts /psf$urx psfts /psf$lly psfts /psf$llx psfts /psf$y psfts
/psf$x psfts currentpoint /psf$cy X /psf$cx X /psf$sx psf$x psf$urx
psf$llx sub div N /psf$sy psf$y psf$ury psf$lly sub div N psf$sx psf$sy
scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub TR
/showpage{}N /erasepage{}N /copypage{}N /p 3 def @MacSetUp}N /doclip{
psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2
roll moveto 6 -1 roll S lineto S lineto S lineto closepath clip newpath
moveto}N /endTexFig{end psf$SavedState restore}N /@beginspecial{SDict
begin /SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count /ocount X /dcount countdictstack N}N /@setspecial
{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto
closepath clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx
sub div rhiSeen{rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR
}{rhiSeen{rhi ury lly sub div dup scale llx neg lly neg TR}if}ifelse
CLIP 2 eq{newpath llx lly moveto urx lly lineto urx ury lineto llx ury
lineto closepath clip}if /showpage{}N /erasepage{}N /copypage{}N newpath
}N /@endspecial{count ocount sub{pop}repeat countdictstack dcount sub{
end}repeat grestore SpecialSave restore end}N /@defspecial{SDict begin}
N /@fedspecial{end}B /li{lineto}B /rl{rlineto}B /rc{rcurveto}B /np{
/SaveX currentpoint /SaveY X N 1 setlinecap newpath}N /st{stroke SaveX
SaveY moveto}N /fil{fill SaveX SaveY moveto}N /ellipse{/endangle X
/startangle X /yrad X /xrad X /savematrix matrix currentmatrix N TR xrad
yrad scale 0 0 1 startangle endangle arc savematrix setmatrix}N end
%%EndProcSet
TeXDict begin 39158280 55380996 1000 600 600 (verin3.dvi)
@start /Fa 1 121 df<DA3F80EB3F80DAFFE0EBFFE00103D9F80313F8903B0FC0FC07C0
FC903B1F007E0F001E013CD93F1E137E4991389C01FF49ECBC0349EB1FF800014B5A485A
4902E013FE120790C7003FEB03FC489238C000F0000E1700A2001E147FA2C85BA215FF93
C8FCA35C5DA314035DA314074B1470A3020F15F0000F17E0D83FC0491301007F17C0021F
140300FF1780023F1407EF0F00D9807B141E90260073F85B00FC01F1147C277801E0FC13
F03B3E07C07E07E06CB4486CB45A270FFE000F90C7FCD801F8EB03F838357CB343>120
D E /Fb 4 119 df<91380FC00391383FF0079138F83C0F903903E00E1E90390FC0063E
90381F800790393F00037E4914FC01FE1301485AA2484814F812075B000F140316F0485A
A2003F14074914E0A3007F140F4914C0A3151F90C713805AA2153F6C1500A2127E5D007F
14FE6C1301A214036C6C485A000F131E3807C0383803E0F13901FFC1F838003F01130014
035DA314075DA3140F5DA2141FA2143F011FB51280A21600283F7DAB2B>113
D<01F8EB0FC0D803FEEB7FF0D8070FEBF038000E903883C07C3A0C07C701FC001C13CE00
18EBDC03003813D8003013F8D90FF013F800709038E000E0006015005C12E0EAC01F5C12
00A2133F91C8FCA35B137EA313FE5BA312015BA312035BA312075BA3120F5BEA0380262D
7DAB2C>I<EC0FF0EC7FFE903901F00F809039078001C049C712E0011E14605BED01F049
1307A201F8EB0FE05B7FED03806D90C7FC7F7F14F86DB47E15E06D13F86D7F01077F1300
EC07FF140081ED3F80151F120E003FEC0F00487EA25D48C7121EA200FC5C12605D00705C
6C495A6CEB07C0260F803FC7FC3803FFFC38007FE0242D7BAB2E>I<013E140ED9FF80EB
3F802603C3C0137F380703E0380601F0120E121CD81803143F0038151F0030150FA2D870
07140700605BA2D8E00F150000C0497FEA001F4A5B1606133F91C7FC160E49140C137EA2
161C01FE14185B1638163016704848146016E05E150100005D15036D49C7FC1506017C13
0E017E5B6D137890380F81E06DB45AD900FEC8FC292D7DAB2F>118
D E /Fc 1 1 df<B712C0A322037A8D30>0 D E /Fd 2 121 df<1338137CA213781370
1300A7EA0780EA1FC0EA38E01230EA60F0EAC1E0A3EA03C0A3EA0780A2EA0F0013041306
EA1E0CA21318121CEA1E70EA0FE0EA07800F237DA116>105 D<3801F01E3907FC7F8039
0E1CE1C038180F8100301383007013071260EC0380D8001EC7FCA45BA21580003014C039
7878018012F8EC030038F0FC0638E19C1C387F0FF8381E03E01A177D9523>120
D E /Fe 8 66 df<13FF000313C0380781E0380F00F0001E137848133CA248131EA400F8
131FAD0078131EA2007C133E003C133CA26C13786C13F0380781E03803FFC0C613001822
7DA01E>48 D<13E01201120712FF12F91201B3A7487EB512C0A212217AA01E>I<EA01FC
3807FF80381C0FC0383003E0386001F0EB00F812F86C13FCA2147C1278003013FCC7FC14
F8A2EB01F0EB03E014C0EB0780EB0F00131E13385B5B3801C00CEA0380380600185A5A38
3FFFF85AB512F0A216217CA01E>I<13FF000313C0380F03E0381C00F014F8003E13FC14
7CA2001E13FC120CC712F8A2EB01F0EB03E0EB0FC03801FF00A2380003E0EB00F0147814
7C143E143F1230127812FCA2143E48137E0060137C003813F8381E03F0380FFFC0000113
0018227DA01E>I<14E01301A213031307A2130D131D13391331136113E113C1EA018112
03EA07011206120C121C12181230127012E0B6FCA2380001E0A6EB03F0EB3FFFA218227D
A11E>I<00101330381E01F0381FFFE014C01480EBFE00EA1BF00018C7FCA513FE381BFF
80381F03C0381C01E0381800F014F8C71278A2147CA21230127812F8A214784813F80060
13F0387001E01238381E07803807FF00EA01F816227CA01E>I<EB0FC0EB7FF03801F038
3803C0183807803C380F007C121E001C1338003C1300A2127C1278EB7FC038F9FFE038FB
80F038FE0038143C48131EA248131FA41278A36C131EA2001C133C001E13386C13703807
81E03801FFC038007F0018227DA01E>I<1438A2147CA314FEA2497E149FA29038030F80
A201067F1407010E7FEB0C03A2496C7EA201387FEB3000A249137C90387FFFFC90B57E90
38C0003EA248487FA20003158090C7120F5A16C0D81F8014E0D8FFE0EB7FFEA227247DA3
2D>65 D E /Ff 5 107 df<14E080A213015CA213035C1307495AA249CCFC133E137E5B
485A485AEA0FE0003FBA12E0BB12F0A2003F19E0D80FE0CCFCEA03F06C7E6C7E137E133E
7F6D7EA26D7E1303801301A2801300A25C44287CA64D>32 D<91383FFFF849B512FC1307
011F14F8D93FE0C7FC01FFC8FCEA01FCEA03F0485A485A5B48C9FC5A123E5AA21278A212
F8A25AB712F816FCA216F800F0C9FC7EA21278A2127CA27E123F7E6C7E7F6C7E6C7EEA01
FC6CB4FCEB3FE06DB512F8010714FC1301D9003F13F8262E7AA933>50
D<1630167816F8A2ED01F0A2ED03E0A2ED07C0A2ED0F80A2ED1F00A2153EA25DA25DA24A
5AA24A5AA24A5AA24A5AA24AC7FCA2143EA25CA25CA2495AA2495AA2495AA2495AA249C8
FCA2133EA25BA25BA2485AA2485AA2485AA2485AA248C9FCA2123EA25AA25AA25A126025
4675B500>54 D<17075F173F5FA35FA25EA25E8316071606160E160C161C161816381630
167004E07FA2ED01C016800303133FED0700A2150E5DA25D157815705D14015D4A5ADA07
BFB57E5D4AB6FC5C023CC7121F1438147800204981383001E0EA7003387807C0267E1F80
140FB5C87F19E049EEFBC06C48EEFF8049923807FE006C485E6C48ED03E0D8078092C8FC
3B3A7EB53D>65 D<126012F0B3B3B3B31260044B78B715>106 D
E /Fg 17 121 df<147F903803FFE090380FC0F890383F007C017C017E1360497F484815
E0484890381F80C0120748481481EEC1804848130F003F15C390C7140016C74815C6007E
15CE16DC16D816F8485D5E5E127CA3151F6C143F037713C06C903801E7E03A0F800783E1
3B07C07E03E3803B01FFF801FF003A007F80007C2B227EA031>11
D<ED07F0ED1FFEED781F913901E00F809139038007C0DA070013E0020E13035C5C5C4A13
075C13015C0103140F91C713C05B0106EC1F80A2010EEC3F00010C147E913801FE7C9039
1C03FFF89039180703F0EDFFF8913801FE7C0138C77E1330163F8213701360A301E05C5B
A300015D167E5B16FE00035D7F4B5A4B5A486C5CD80660495A0170495A6D49C7FCD80E1C
137E390C0F01F8903803FFE0010090C8FC001C90C9FC1218A312381230A312701260A312
E0A22B447FB42B>I<EB1FC0D97FF0130348486C1307486D1306486D130E486D130C261F
C03F131C3A3E000F8018003C0107133848903803C03000700101137048010013604814E0
16E0C8EA60C01561ED718015331600A215371536A2153E153CA21538A31530A21570A315
6015E0A44A5AA44A5AA44AC7FCA328327FA028>I<EC7FE0903801FFFC903803C7FEEB07
01EB0600153C010E1300130FA26D7EA280A2806D7E801301806D7E8080903803FF80010F
13C0EB3F3FEB7C1F01F813E0EA01F03803E00F1207390FC007F01380121F123F010013E0
A25A127EA315C05A140FA2007C1480141F1500A26C133E5C6C13786C6C5A3807C1E03801
FFC0D8007EC7FC1F367EB422>I<1660A216E05EA315015EA3150393C7FCA35D1506A315
0E01F0010C1370D803FC15F8D8071EEC01FCD80E1F131C001C1418003801801300003016
7C013F0138133C0070EB00300060161C5BD8E07E0170131800401460EA00FE4915380001
02E01330495B177017600003130101F04913E0EE01C01780020313039238000700160E5E
6C6C485B02065BD800FC495A017EEB038090261FCE1FC7FC903807FFFC9038007FE0020C
C8FC141C1418A314381430A314701460A314E05C2E447EB332>32
D<14FF010713E0011F13F8017F13FC3801FE00D803E0133CD80780131890C8FC120E120C
A4380E03C038073FF83803FC3CEBFFF8486C5A000EC8FC5A5A5A1260A212E05AA26C14E0
15C0007013010078EB0380003FEB1F00381FFFFE6C5B000313F0C613801E247EA124>34
D<123C127EB4FCA21380A2127F123D1201A412031300A25A1206120E120C121C5A5A1260
09177A8715>59 D<010FB712FEA218FC903A003FC000031700187C4B143CA2027F151C18
1892C8FCA25CA24A1303A201014A1338040613304A1500160E13035E4A137C91B512FC5B
5EECF0001638130F16305C1860011F027013E0046013C04A140104001380133F17034A15
005F017F150EA291C8121E5F49157C5F4914030001ED1FF0B8FCA25F37337DB239>69
D<0107B512E05BA29039001FF0005DA25DA2143FA25DA2147FA292C7FCA25CA25CA21301
A25CA21303A25CA21307A25CA2130FA25CA2131FA25CA2133FA25CA2137FA291C8FC5B00
7F13FEB5FCA223337EB222>73 D<EB01F8EB07FE90381F071C90387C03FEEBF801EA01F0
0003130048485B5B120F381F80015DEA3F00A21403485C127EA2140700FE5C5A1640020F
1360EDC0E016C0127CEC1FC1023F1380003CEB7F81003EEBEF833A1E01C7C300390F0787
C73907FE03FE3900F800F823227EA029>97 D<EB01C0EB07E014F0130F14E01307EB0380
90C7FCAA13F0EA03FCEA071EEA0E1F121C123800301380EB3F00127012605BEAE07EEA40
FE12005B12015BA212035B12071420EBE070000F136013C014E014C0EA1F80EA0F81EB83
80EB8700EA078EEA03FCEA00F014337EB11A>105 D<011F131F90397FC07FE09039E3E1
E0F09039C3E380783A01C1F7007CD981FE133CD983FC133E00035BEB03F0163FEA070712
0600025B1200010F147F167E5CA2011F14FE16FC5CA2013FEB01F8A291380003F016E049
1307ED0FC002801380ED1F009038FFC03E9038FEE0F89038FC7FE0EC1F80000190C8FCA2
5BA21203A25BA21207A25BB57EA3283083A027>112 D<903801F803903807FE0790381F
071F90387C03BF9038F801BED801F013FE00031300485A4913FC120F485A1401D83F0013
F8A3481303007E14F0A300FE13074814E0A3140F15C0127C141F143F003CEB7F80003E13
FF381E01DF380F07BF3907FE3F00EA00F813005C147EA314FE5CA21301A25C90387FFFE0
90B5FCA220307EA022>I<3903E003E0390FF81FF8391C7C3C1C0018EB703E39383EE0FE
38303FC0EB7F800070EB00FCEA607E157000E01400EAC0FEEA40FC1200A212015BA31203
5BA312075BA3120F5BA3121F5B0007C8FC1F227EA023>I<EB01FCEB0FFF90383E03C090
387800E04913603901E001E014030003130713C013E0EC03806DC7FC13FF14F014FC6C7F
6C7F6D1380130F9038007FC0141F140F007E130700FE1480A3EC0F005A00C0131E6C5B00
705B383C01F0380FFFC0D803FEC7FC1B227CA024>I<01F0130ED803FC131FD8071EEB3F
80EA0E1F121C0038EB801F0030140F013F130700701300006014035BD8E07E14001240EA
00FE495B000114065BA2150E0003140C5B151C15181538491330157015606D13E04A5A00
01495A6D48C7FC3800FC1EEB3FF8EB07E021227EA025>118 D<90391F801F8090397FE0
7FE09039E0F0E0703A01C0F9C0F83903807D833807007F000E1403000C15F0001C137E00
18EC01C002FEC7FC00385B1210C7FC13015CA31303A25C1640010714E016C0001C5B007E
1401010F148000FE1403011FEB0700011B130E39F839F01C397070F878393FE07FE0390F
801F8025227EA02C>120 D E /Fh 1 46 df<7E12E012FCB4FC13C013F013FCEBFF8014
E014FC14FF15E015FCEDFF8016F816FF17F017FFA217F0170016F8168003FCC7FC15E092
C8FC14FC14E0148001FCC9FC13F013C090CAFC12FC12E0128030245F9153>45
D E /Fi 20 121 df<DBFF80EB3FE0020F9039F001FFFC913B3F807C0FF01F913CFC000E
3F800380D903F86D48486C7E4948D90FFC804948D93FF8130F4948017F4A7E49485C49C7
5BA25B494B6D5A041F6E5A96C8FCACF107F0BBFCA3C648C7391FC0001F190F1907B3B048
6C4A6C497E007FD9FC0FB50083B512E0A34B467EC551>14 D<16C04B7EA34B7EA34B7EA3
4B7EA3ED19FEA3ED30FFA203707FED607FA203E07FEDC03FA2020180ED801FA2DA03007F
160FA20206801607A24A6D7EA34A6D7EA34A6D7EA20270810260147FA202E08191B7FCA2
49820280C7121FA249C87F170FA20106821707A2496F7EA3496F7EA3496F7EA201788313
F8486C83D80FFF03037FB500E0027FEBFFC0A342477DC649>65 D<DB0FFE146092B500C0
13E0020314F0913A0FFC01FC0191393FC0003E02FFC7EA0F83D903FCEC03C74948EC01E7
4948EC00FF4948157F4948153F4948151F49C9120F485A491607120348481603A2484816
01A248481600A2123FA2491760127FA31900485AAE6C7EA21960A2123F7FA2001F18E07F
000F18C0A26C6C160119806C6C160312016DEE07006C6C16066D6C150E6D6C5D6D6C5D6D
6C15786D6C5D6D6C4A5AD900FFEC0780DA3FC0011FC7FCDA0FFC13FC0203B512F0020014
C0DB0FFEC8FC3B487BC546>67 D<B8FC17F017FC00019039C00007FF6C499038007FC001
7FED1FE0EF07F0EF03FC717E717E84727E727E727EA2727E85180385A2180185A38584A3
1A80AD1A00A36061A361180361180761180F614E5A183F614EC7FC18FEEF03FC4D5AEF1F
E001FFED7FC0486DD907FFC8FCB812FC17F094C9FC41447CC34B>I<DB0FFE146092B500
C013E0020314F0913A0FFC01FC0191393FC0003E02FFC7EA0F83D903FCEC03C74948EC01
E74948EC00FF4948157F4948153F4948151F49C9120F485A491607120348481603A24848
1601A248481600A2123FA2491760127FA396C7FC485AAD4CB612C06C7EA293C7387FF000
725A003F171F7FA2121F7F120FA26C7EA26C7E6C7EA26C7E6D7E6D6C153F6D7E6D6C157F
6D6C15E7D903FEEC01C7D900FFEC0383DA3FE0EB0F01DA0FFCEBFE000203B500F8136002
0002E090C7FCDB0FFEC9FC42487BC54D>71 D<B612F0A3C6EBF0006D5A6D5AB3B3B3A449
7E497EB612F0A31C447DC323>73 D<49B41303010FEBE007013F13F89039FE00FE0FD801
F8131FD807E0EB079F49EB03DF48486DB4FC48C8FC4881003E81127E82127C00FC81A282
A37E82A27EA26C6C91C7FC7F7FEA3FF813FE381FFFE06C13FE6CEBFFE06C14FC6C14FF6C
15C0013F14F0010F80010180D9001F7F14019138001FFF03031380816F13C0167F163F16
1F17E000C0150FA31607A37EA36C16C0160F7E17806C151F6C16006C5D6D147ED8FBC05C
D8F9F0495AD8F07C495A90393FC00FE0D8E00FB51280010149C7FC39C0003FF02B487BC5
36>83 D<003FB912F8A3903BF0001FF8001F01806D481303003EC7150048187C0078183C
A20070181CA30060180CA5481806A5C81600B3B3A54B7EED7FFE49B77EA33F447DC346>
I<B60107B500F890380FFFFEA3000301E0D9001F90C813F06C0180DA0FFCED3FC091C86C
48ED1F006C871C0E6D6C6E7E1C0CA26D6C6F5DA36EDA06FF1538011F1A30A26E020E6D14
70010FDB0C7F1560A26E021C7F0107DB183F5DA2856D6CDA301F4A5AA36D6C4A6C6C49C7
FCA36D6C4A6C6C1306A3DB80016E130E027FDA8003140CA2DBC00380023FDA00015CA203
E081021F01066D5CA36E6C486E6C5AA36E6C486E6C5AA36F48EC1FE1020360A2DBFE7015
F302010160020F90C8FCA2DBFFE015FB6E49EC07FEA36F486E5AA36FC86C5AA3031E6F5A
A4030C16605F467EC364>87 D<EB07FC90383FFF809038F80FE03903C003F048C66C7E00
0E6D7ED80FC0137E486C137F6D6D7EA36F7EA26C5AEA0380C8FCA4EC0FFF49B5FC90380F
FE1FEB3FC0EBFF00EA03FC485A485A485A485A127F5B176048C7FCA3153FA36D137F007F
14EF6D9038C7E0C0003F13013A1FE00783F13B07F81E03FF802701FFFC0113003A001FE0
007C2B2E7CAC31>97 D<EC7F80903803FFF090380FC07C90383F000F01FCEB03804848EB
01C00003140F4848EB1FE049133F120F485AA2485AED1FC0007FEC070092C7FCA290C9FC
5AAB7E7FA2123F16307F001F15706C6C146016E06C6C14C06C6C13010001EC03806C6CEB
0700013F131E90381FC078903807FFF001001380242E7DAC2B>99
D<EB01FE903807FFC090381F03F090387E00FC49137E48487F485A4848EB1F80000F15C0
49130F121F484814E01507A2007F15F090C7FCA25AA390B6FCA290C9FCA67EA27FA2123F
16306C7E1670000F15606D14E06C6C14C0000314016C6CEB03806C6CEB0700013E131E90
381F80F8903803FFE0010090C7FC242E7DAC2B>101 D<EA01E0EA07F8A2487EA46C5AA2
EA01E0C8FCADEA01FC12FFA3120712031201B3B0487EB512F8A315437DC21C>105
D<D801FC01FFEC1FE000FF010701E0EBFFFC913B0F03F801E07F913C3C01FC07803F8000
07903C7000FE0E001FC0000349D97E1C130F2601FDC0D97F38804A143001FFDA3FF06D7E
91C75BA2495DA3495DB3A8486C4A6C497EB5D8F81FB50003B512E0A34B2C7DAB52>109
D<EC7F80903803FFF090380FC0FC90383E001F496D7E496D7E48486D7E48486D7E48486D
7E000F81A24848147E003F157FA290C87E481680A44816C0AA6C1680A26D147F003F1600
A2001F157E6D14FE000F5D6D130100075D6C6C495A6C6C495A6C6C495A013E49C7FC9038
1FC0FE903807FFF89038007F802A2E7DAC31>111 D<3901FC03FC00FF90380FFF809138
3C07E091387001F83A07FDE000FE00010180137F01FFEC3F8091C7EA1FC04915E049140F
17F0160717F8160317FCA3EE01FEABEE03FCA3EE07F8A217F0160F6D15E0EE1FC06D143F
17806EEB7E00D9FDC05B9039FCF003F891383C0FE091381FFF80DA03FCC7FC91C9FCAE48
7EB512F8A32F3F7DAB36>I<3903F803F000FFEB1FFCEC3C3EEC707F0007EBE0FF3803F9
C000015B13FBEC007E153C01FF13005BA45BB3A748B4FCB512FEA3202C7DAB26>114
D<1306A5130EA4131EA3133E137EA213FE12011207001FB512F0B6FCA2C648C7FCB3A415
0CAA017E131C017F1318A26D133890381F8030ECC070903807E0E0903801FFC09038007F
001E3E7EBC26>116 D<D801FC147F00FFEC3FFFA300071401000380000181B3A85EA35D
A212006D5B017E9038077F80017F010E13C06D011C13FE90380FC078903803FFF0902600
7F8013002F2D7DAB36>I<B539F007FFFCA30003D9C00113C0C6496C1300017F14FC013F
5C6E13E06D7E010F495A6D6C485A02F890C7FC903803FC060101130E6E5A903800FF186E
5AEC3FF05D141F140F6E7E81140FEC0DFCEC19FEEC38FF4A7E9138603F8002C07F010113
1F49486C7E02007F01066D7E010E1303496D7E013C80017C80D801FC1580D80FFE4913C0
B5D8800F13FFA3302B7FAA33>120 D E /Fj 1 79 df<267FF870903801FFFED9FFF85B
6E7F000701DE9038000FE06C010EEC07C02601E78FEC03809038C3878014C39038C1E3C0
9038C0E1E06E7EEC7870EC3878EC3C3CEC1C1EEC1E0EEC0F0F91380707801583913803C3
C0913801C1E0EDE0F002001370EDF078ED783CED381CED3C1EED1E0F92380E0783ED0F03
030713C3EE81E3ED03C0030113F3EEE07B923800F03FEE701F1678EE380FEE3C07EE1E03
160E160FEE0783160317C3160117E3EE00F31773177B173F486C151F487E267FFFC0140F
B5FC6C1607CA12031701373B7DB832>78 D E /Fk 5 117 df<3801FFF0000713FE001F
6D7E15E048809038C01FF81407EC01FC381F80000006C77EC8127EA3ECFFFE131F90B5FC
1203120F48EB807E383FF800EA7FC090C7FC12FE5AA47E007F14FEEB8003383FE01F6CB6
12FC6C15FE6C14BF0001EBFE1F3A003FF007FC27247CA32C>97 D<EA7FF0487EA3127F12
01AAEC1FE0ECFFF801FB13FE90B6FC16809138F07FC09138801FE091380007F049EB03F8
5BED01FC491300A216FE167EA816FE6D14FCA2ED01F86D13036DEB07F0150F9138801FE0
9138E07FC091B51280160001FB5B01F813F83900F03FC027337FB22C>I<903803FFE001
1F13F8017F13FE48B5FC48804848C6FCEA0FF0485A49137E4848131890C9FC5A127EA25A
A8127EA2127F6C140F6DEB1F806C7E6D133F6C6CEB7F003907FE03FF6CB55A6C5C6C6C5B
011F13E0010390C7FC21247AA32C>I<ED03F8903907F80FFC90391FFE3FFE017FB6FC48
B7FC48ECFE7F9038FC0FF82607F003133E3A0FE001FC1CD9C0001300001F8049137EA66D
13FE000F5CEBE0016C6C485A3903FC0FF048B5FC5D481480D99FFEC7FCEB87F80180C8FC
A37F6C7E90B512F06C14FE48ECFF804815E04815F03A3FC0001FF848C7EA03FC007E1400
007C157C00FC157E48153EA46C157E007E15FCD87F801303D83FE0EB0FF8D81FFCEB7FF0
6CB612E0000315806C1500D8003F13F8010713C028387EA42C>103
D<131E133FA9007FB6FCB71280A36C1500D8003FC8FCB1ED03C0ED07E0A5EC800F011FEB
1FC0ECE07F6DB51280160001035B6D13F89038003FE0232E7EAD2C>116
D E /Fl 52 122 df<130E131F133F137E13FCEA01F8EA03F0EA07E0EA0F80EA1F00123E
5A5A5A100E67B327>19 D<EA0380EA0FE0121FA5EA0760120013E013C0A2120113801203
EA07001206120E5A5A5A5A5A0B177A8718>44 D<B51280A46C1300110579911B>I<121C
127F12FFA412FE12380808778718>I<EC01801403A21407140FEC1F005C14FF5BEB1FFE
EB7FBEEB7E7E1320EB007CA214FCA25CA21301A25CA21303A25CA21307A25CA2130FA25C
A2131FA291C7FCA25BA2133EA2137EA2137C13FCB512FCA3193277B127>49
D<150E151FA2153F153EA3157E157CA215FC15F8A2140115F0A2EC03E0A3EC07C0A2EC0F
80A2EC1F00A2143EA25C147814F85C1301903803E0E0ECC1F0EB0781EB0F83EC03E0131E
133CEB7C0701F813C0EA01F0EA03E03807C00FD80F801380EA1FFC383FFFCF48EBFF82D8
F00313FF3860003FC7EA1FF8EC3F00143EA3147E147CA314FC5CA4146020417DB127>52
D<010614C090380FC00F91B51280160015FC4913F015C0D91CFEC7FC91C8FC133C1338A3
13781370A313F0EBE0FE9038E3FF809038EF03C03901FC01E001F87FEBF000497F485A5B
C8FCA41401A4003C130300FC5CA34A5A5A00E0495AA24A5A4AC7FC6C137E00705B387801
F8383E07F0381FFFC06C90C8FCEA03F8223478B127>I<D9E0F81338EBE3FC2601EFFE13
7801FF14F048EC01E09038FE0E03D807F814C09039F0060F80390FC0071F90398003FF00
391F0001EF001EEB001E003E5C123C485C15F8485C4813015DC712034A5AA24A5AA2141F
92C7FC5C143E147EA25CA2495AA3495AA213075CA2130F5CA2131FA25C133FA391C8FCA2
131C253476B127>55 D<EC0FC0EC7FF0ECFFFC903803F07E903807C03E49487EEB1F0001
3E7F017E14805BA2485AA2485A151FA212075BA2ED3F00A2485A5DA2000714FEA2140114
0300035CEBE0070001130E3900F03DF8EB7FF1EB0FC190380003F0A24A5AA25D4A5A141F
003891C7FC007E133E00FE137E5C48485A48485A48485A38781F80D87FFFC8FCEA1FFCEA
07E0213478B127>57 D<161C163CA2167C16FCA21501821503A2ED077E150F150E151CA2
1538A2157015F015E0EC01C0A2913803807F82EC0700A2140E141E141C5CA25CA25C49B6
FCA25B913880003F49C7EA1F80A2130E131E131C133C13385B13F05B12011203D80FF0EC
3FC0D8FFFE903807FFFEA32F367BB539>65 D<0107B612C04915F017FC903A003F8000FE
177FEF3F8092C7121FA24A15C0A2147EA214FE18804A143FA20101ED7F00177E4A5C1601
0103EC03F04C5A4AEB1FC091B6C7FC495C9139F0007F804AEB0FC0707E010F6E7E834A13
01A2011F81A25CA2133F5F91C71203A2494A5AA2017E4A5A4C5A01FE4A5A4CC7FC49EB01
FE0001EC07FC007FB612F0B712C04BC8FC32337BB236>I<DB1FF013C09238FFFC010203
EBFF03913A0FF00F878091393F8003CF9139FE0001EF4948EB00FFD903F01500D90FE080
495A49488091C8123E137E13FE485A4848153CA2485AA248481538A2485A94C7FC123F5B
A3127F90CBFCA412FEA2EE03C0A25F127E160794C7FC5E160E007F151E6C5D5E6C6C1470
16F06C6C495A6C6CEB07C06C6C49C8FC6C6C133E6CB413FC90387FFFF0011F13C0D903FE
C9FC323775B437>I<0107B612C04915F017FC903A003F8001FEEE007FEF1F8092C7EA0F
C0EF07E05CEF03F0147E170102FE15F8A25CA21301A25CA2130317035CA2130718F04A14
07A2130F18E04A140F18C0011F151F18805CEF3F00133F177E91C85AA2494A5A4C5A017E
4A5A4C5A01FE4A5A047EC7FC49495A0001EC0FF8007FB612E0B7C8FC15F835337BB23A>
I<0107B712F05B18E0903A003F80001F1707170392C7FC17015C18C0147EA214FEA24A13
0EA20101EC1E03041C13804A91C7FC163C13035E9138F001F891B5FC5B5EECE001150013
0F5E5C1707011F01015BEEC00E0280141E92C7121C133F173C91C812381778495DA2017E
14014C5A01FE14074C5A49141F00014AB45A007FB7FCB8FC94C7FC34337CB234>I<0107
B712E05B18C0903A003F80003F170F170792C7FC17035C1880147EA214FEA25C161C0101
EC3C07043813004A91C7FCA20103147816704A13F0150349B5FCA25EECE003130F6F5A14
C0A2011F13035E1480A2013F90C9FCA291CAFCA25BA2137EA213FEA25B1201387FFFFCB5
FCA233337CB232>I<92391FE001809238FFF8030207EBFE07913A1FF01F0F0091393F80
079F9139FE0003DFD901F86DB4FCD907F05C49481300495A4948147E49C8127C137E13FE
485A48481578A2485AA248481570A2485A94C7FC123F5BA3127F90CBFCA400FE91383FFF
FCA25F9238003F8094C7FCA2007E5DA2167EA2007F15FE7E5E6C6C1301A26C6C495A6D13
076C6CEB0F786C6C133E3A00FF01FC3090387FFFF0011F01C0C8FCD903FEC9FC313775B4
3B>I<0107B548B512C0495CA2903C003FC0000FF0004B5CA292C75BA24A141F60147EA2
02FE143F95C7FC5CA201015D177E5CA2010315FE5F5C91B6FC5B5F9138E00001A2010F14
035F5CA2011F14075F5CA2013F140F5F91C7FCA249141F5F137EA201FE143F94C8FC5B00
015D3B7FFFF01FFFFCB55BA23A337BB239>I<010FB51280A216009038003FC05DA292C7
FCA25CA2147EA214FEA25CA21301A25CA21303A25CA21307A25CA2130FA25CA2131FA25C
A2133FA291C8FCA25BA2137EA213FEA25B1201B512F8A25C21337BB21E>I<91381FFFFE
5C16FC9138003F80A31600A25D157EA315FE5DA314015DA314035DA314075DA3140F5DA3
141F5DA3143F92C7FCA2121C007E5B00FE137EA214FE485BEAF80100E05B495A387007E0
38780FC06C48C8FCEA1FFCEA07F0273579B228>I<0107B512C05BA29026003FC0C7FC5D
A292C8FCA25CA2147EA214FEA25CA21301A25CA21303A25CA21307A25CA2130FA25C17E0
011F140117C05C1603013F1580160791C7FCEE0F005B5E017E143EA201FE5CED01FC4913
030001EC1FF8007FB6FCB7FC5E2B337CB230>76 D<902607FFC0ED7FFC4917FF81D9003F
4B1300611803023BED077CA2027BED0EFC610273151C1838DAF1F01439F071F014E118E1
0101ED01C36102C1EC0383EF070301031607050E5BEC80F8171C0107ED380F6102001470
A249EDE01FDC01C090C7FC130EEE0380011E017C5C933807003E011C140EA2013C4A137E
187C01385C5E017816FC6F485B1370ED3FC001F0EC80016000011500D807F81503277FFF
803E90B512C0B5EB3C01151C46337BB245>I<902607FF8090383FFFC0496D5BA2D9001F
913803F8004A6C6D5A6060EC3BF0027B140360EC71F8A202F11407DAF0FC91C7FC14E0A2
0101017E5B170E14C0810103151EEE801CEC801FA20107ECC03C030F1338140016E04901
0713781770010E14F01503011E15F0705A011C1301A2013C14FD03005B133816FF017814
7F5F0170143FA213F070C8FC1201EA07F8267FFF807FB5140EA23A337BB239>I<ED1FE0
913801FFFC913807E03F91391F800FC091393E0003E002F8EB01F0495A4948EB00F84948
14FC4948147C49C8127E133E017E153E49153F485AA2485A12075B120F5B121F177F5B12
3FA348C912FEA4EE01FC12FEEE03F8A217F0160717E0160F007E16C0EE1F80A2EE3F006C
157E5E5E6C6C495A000F4A5A6D495A0007EC1F806C6C013EC7FCD801F813FC39007E07F0
90383FFF80D907FCC8FC303775B43B>I<0107B612C04915F883903A003F8001FEEE003F
EF1F8092C713C0170F5C18E0147EA214FEEF1FC05CA201011680173F4A1500177E010315
FE5F4AEB03F8EE07E00107EC3FC091B6C7FC16F802E0C9FC130FA25CA2131FA25CA2133F
A291CAFCA25BA2137EA213FEA25B1201387FFFF0B5FCA233337CB234>I<0107B512FE49
ECFFC017F0903A003F8007F8EE01FCEE007E92C7127F835C1880147EA214FEEF7F005CA2
010115FE5F4A13015F01034A5AEE0FC04A495A04FEC7FC49B512F016C09138E003E0ED01
F8010F6D7E167C4A137EA2131FA25CA2013F14FEA291C7FCA24913015E137EEF01C001FE
150318805B00011607277FFFF0001400B5ECFE0EEE7E1CC9EA1FF8EE07E032357BB238>
82 D<913901FC018091380FFF03023F13C791387E07EF903A01F801FF0049487E4A7F49
5A4948133E131F91C7FC5B013E143CA3137E1638A293C7FC137FA26D7E14E014FE90381F
FFC06D13F86D7F01017F6D6C7E020F7F1400153F6F7E150FA4120EA2001E5D121CA2151F
003C92C7FCA2003E143E5D127E007F5C6D485A9038C007E039F3F80FC000F0B5C8FC38E0
3FFC38C00FF029377AB42B>I<0003B812C05A1880903AF800FC003F260FC001141F0180
150F01005B001EEE07001403121C003C4A5BA200380107140E127800705CA2020F141E00
F0161CC74990C7FCA2141FA25DA2143FA292C9FCA25CA2147EA214FEA25CA21301A25CA2
1303A25CA21307A25C497E001FB512F05AA2323374B237>I<3B3FFFF801FFFE485CA2D8
01FEC7EA1FC049EC0F80170049140EA2161E120349141CA2163C1207491438A21678120F
491470A216F0121F495CA21501123F90C75BA215035A007E5DA2150712FE4892C7FCA25D
150E48141E151C153C153815786C5C5D007C1301007E495A003EEB0F806C011EC8FC380F
C0FC6CB45A000113E06C6CC9FC2F3570B239>I<B53CC03FFFF003FFF8601480280FF000
01FCC7EA7F806C484AEC3E00193CA219386115036115074E5A030F140361031D4AC7FCA2
DB38FC130EA203705C15F06C6C01E05C140103C05CDA038014F060DA0700130160020E4A
5AA24A4AC8FCA24A140E147802705C5C5FD9F1C014781770D9F3805CA201F7C7EA7FC0A2
01FE5DA26C4892C9FCA249147E5B167C5B1678491470453570B24D>87
D<EB03F0EB0FF890383E1C6090387C0FF0EBF807EA01F0EA03E00007EB03E0EA0FC0A238
1F800715C0EA3F00A2140F481480127EA2141F00FE14005A1506EC3F07EC3E0F150E147E
007C141EECFE1CEB01FCD83C03133C393E07BE38391F0E1E783907FC0FF03901F003C020
2278A027>97 D<137EEA0FFE121F5B1200A35BA21201A25BA21203A25BA21207A2EBC3E0
EBCFF8380FDC3EEBF81F497E01E01380EA1FC0138015C013005AA2123EA2007E131F1580
127CA2143F00FC14005AA2147EA25CA2387801F85C495A6C485A495A6C48C7FCEA0FFCEA
03F01A3578B323>I<14FCEB07FF90381F078090383E03C0EBFC013801F8033803F00738
07E00F13C0120F391F80070091C7FC48C8FCA35A127EA312FE5AA4007C14C0EC01E0A2EC
03C06CEB0F80EC1F006C137C380F81F03803FFC0C648C7FC1B2278A023>I<ED0FC0EC03
FFA21680EC001FA31600A25DA2153EA2157EA2157CA215FCA2903803F0F8EB0FF8EB3E1D
EB7C0F496C5AEA01F0EA03E000071303D80FC05BA2381F8007A2D83F005BA2140F5A007E
5CA2141F12FE4891C7FC1506EC3F075DEC3E0E147E007C141EECFE1CEB01FCD83C03133C
393E07BE38391F0E1E783907FC0FF03901F003C0223578B327>I<EB03F8EB0FFEEB3E0F
9038F807803801F003EA03E0EA07C0120FEA1F801407D83F0013005C007E133EEB03F838
7FFFE04848C7FC00FCC8FCA45AA4EC0180EC03C0A2007CEB0780EC1F00003C133E6C13F8
380F03E03807FF80D801FCC7FC1A2277A023>I<151FED7FC0EDF0E0020113F0EC03E3A2
EC07C316E0EDC1C091380FC0005DA4141F92C7FCA45C143E90381FFFFEA3D9007EC7FC14
7CA414FC5CA513015CA413035CA413075CA3130FA25CA3131F91C8FCA35B133E1238EA7E
3CA2EAFE7812FC485AEA78E0EA3FC0000FC9FC244582B418>I<143FECFF80903803E1E6
903807C0FF90380F807FEB1F00133E017E133F49133EA24848137EA24848137CA215FC12
074913F8A21401A2D80FC013F0A21403120715E01407140F141F3903E03FC00001137FEB
F0FF38007FCF90381F0F801300141FA21500A25C143E1238007E137E5C00FE5B48485A38
7803E0387C0F80D81FFFC7FCEA07F820317CA023>I<EB0FC0EA03FFA25CEA001FA391C8
FCA25BA2133EA2137EA2137CA213FCA29038F83F80ECFFE03901FBE0F09038FF80F8EC00
7849137C485A5B5BA2484813FC5D5BA2000F13015D1380A2001F13035DEB0007EDC0C048
ECC1E0020F13C0003E1481A2007E1483ED0380007C1407160000FC140E151E48EB07F800
70EB01F023357BB327>I<EB0180EB07E0A2130FEB07C0EB038090C7FCABEA01F0EA03FC
EA0F1E120E121C123C1238EA783E1270A2137EEAF07CEA60FCC65AA212015BA212035BA2
000713C0EBC1E0000F13C01381A21383EB038013071400130E131EEA07F8EA01F013337A
B118>I<EB0FC0EA01FF5A5CEA001FA391C7FCA25BA2133EA2137EA2137CA213FCA24913
78EC01FE0001EB078FEC0E0F9038F01C3F143800031370ECE03E9038E1C01C9038E38000
D807E7C7FC13EE5B13F8120F13FFEB9FC0EB83F0EA1F81EB80F81300150C48141E151C12
3EA2007E143C1538127C157800FCEB787015E048EB3FC00070EB0F8020357BB323>107
D<133FEA07FF5A13FEEA007EA3137CA213FCA213F8A21201A213F0A21203A213E0A21207
A213C0A2120FA21380A2121FA21300A25AA2123EA2127EA2127C1318EAFC1C133CEAF838
A21378137012F013F0EAF8E01279EA3FC0EA0F00103579B314>I<2703C003F8137F3C0F
F00FFE01FFC03C1E783C1F07C1E03C1C7CF00F8F01F03B3C3DE0079E0026383FC001FC7F
D97F805B007001005B5E137ED8F0FC90380FC00100E05FD860F8148012000001021F1303
60491400A200034A13076049013E130FF081800007027EEC83C0051F138049017C1403A2
000F02FC1407053E130049495CEF1E0E001F01015D183C010049EB0FF0000E6D48EB03E0
3A227AA03F>I<3903C007F0390FF01FFC391E787C1E391C7CF01F393C3DE00F26383FC0
1380EB7F8000781300EA707EA2D8F0FC131F00E01500EA60F8120000015C153E5BA20003
147E157C4913FCEDF8180007153C0201133801C013F0A2000F1578EDE070018014F016E0
001FECE1C015E390C7EAFF00000E143E26227AA02B>I<14FCEB07FF90381F07C090383E
03E09038FC01F0EA01F83903F000F8485A5B120F484813FCA248C7FCA214014814F8127E
A2140300FE14F05AA2EC07E0A2007CEB0FC01580141FEC3F006C137E5C381F01F0380F83
E03803FF80D800FCC7FC1E2278A027>I<011E137C90387F81FF9039F3C387C09039E3EF
03E03901E1FE01D9C1FC13F0EBC3F8000313F0018314F814E0EA07871307000313C01200
010F130316F01480A2011F130716E01400A249EB0FC0A2013EEB1F80A2017EEB3F00017F
133E5D5D9038FF81F09038FDC3E09038F8FF80027EC7FC000190C8FCA25BA21203A25BA2
1207A25BB5FCA325307FA027>I<3903C00FC0390FF03FF0391E78F078391C7DE03C393C
3FC0FC00381380EB7F00007814F8D8707E13701500EAF0FC12E0EA60F812001201A25BA2
1203A25BA21207A25BA2120FA25BA2121FA290C8FC120E1E227AA020>114
D<EB03F0EB1FFCEB3C1EEB780FEBF007EA01E0140F0003131F13C0A2EBE00414007FEBFF
8014E06C13F06C13F8EB7FFC1307EB00FE147E143E123800FC133CA3147C00F013784813
F0EAF001387803E0383C0F80381FFE00EA03F818227AA01F>I<1303EB0F80A3131FA214
00A25BA2133EA2137EA2137C387FFFF8A2B5FC3800F800A21201A25BA21203A25BA21207
A25BA2120FA25B1460001F13F014E01300130114C01303001E1380EB07005BEA0F1EEA07
F8EA01E015307AAE19>I<EA01F0D803FC1307D80F1E5B000E5C121C123C00385CD8783E
133E1270A2017E137ED8F07C137CEA60FCC65A15FC00015C5BA2140100035C13E0166002
031370EDE0F0D807C014E0A20003EB07E116C09038E00FC1EC1FC3000190383FE3809038
F071E73A007FE0FF0090381F803C24227AA029>I<01F01338D803FC13FCEA0F1E120E12
1C123C0038147CEA783E0070143CA2137ED8F07C1338EA60FCC65A1578000114705BA215
F0000314E05BA2EC01C0A2EBC003158014071500EBE00EA26C6C5A3800F878EB7FE0EB1F
801E227AA023>I<D801F01538D803FC010E13FCD80F1E131E000E143E121C123C003802
7E137CD8783E137C0070163CA2017E13FCD8F07C491338EA60FCC65A0201147800014A13
7013F0A2020314F0000316E001E05BA2160117C001C013C00207EB0380A29039E00FE007
1700021F130E3A01F03DF01E3A00F878F83C90393FF03FF090390FC00FC02E227AA033>
I<011F137C90387FC1FF3A01E1E787803A03C0F703C0903880FE0FEA07004813FC000E15
80001E9038F80700001C91C7FC1301003C5B1218120013035CA31307A25C1506010F130F
150E14800038141ED87C1F131C00FC143C1538013F5B39F07FC0E03970F3C3C0393FE1FF
80260F807EC7FC22227CA023>I<13F0D803FC1307D80F1E130F000E141F121C123C0038
143FD8783E133E1270A2017E137ED8F07C137CEA60FCC65A15FC000114F85BA214010003
14F013E0A2140315E0EA07C0A20003130715C0EBE00F141F0001133F9038F07F8038007F
EFEB1F8FEB001F1500A25C003E133E007E137E147C5C007C5BEA7001495A38380780D83C
1FC7FCEA0FFCEA07F020317AA025>I E /Fm 47 123 df<913803FFC0027F13F00103B5
12FC010FEB00FED93FF8133FD97FE0EBFF8049485A5A1480484A13C04A6C1380A36F1300
167E93C7FCA592383FFFC0B8FCA4000390C7FCB3ABB5D8FC3F13FFA4303A7EB935>12
D<912603FFC0EB7FF8027F9039F00FFFFE49B5D8FC7F6D7E010F903B007FFFE01FC0D91F
F8011F90380007E0D97FE0D97FFCEB1FF049484948133F485C02805C484E7E02004A6D5A
A281735A047F6E5A96C8FCA5953807FFF8BBFCA4000390C7397FE0001FB3ABB5D8FC1FB5
0087B512E0A44B3A7EB950>14 D<EA0F80EA3FE0EA7FF0A2EAFFF8A213FCA3127FA2123F
EA0F9CEA001C133C1338A31378137013F0EA01E0A2EA03C0EA0780EA0F005A121C12180E
1D798C1B>44 D<EA0F80EA3FE0EA7FF0A2EAFFF8A5EA7FF0A2EA3FE0EA0F800D0D798C1B
>46 D<49B4FC010F13E0017F13FC9038FF83FE4848C67E4848EB7F804848EB3FC04848EB
1FE0A2001F15F0A24848EB0FF8A3007F15FCA500FF15FEB3007F15FCA4003F15F8A26D13
1F001F15F0A2000F15E06D133F000715C06C6CEB7F806C6CEBFF003900FF83FE6DB45A01
1F13F0010190C7FC27387CB630>48 D<141E143E14FE1307133FB5FCA313CFEA000FB3B3
A6007FB61280A4213779B630>I<EB0FFC90387FFFC048B512F0000714FC390FF03FFF26
1F800F1380263F000313C05AD9C00113E0486C6C13F07FA2ED7FF8A46C5A6C5A000FC7FC
C8FCEDFFF0A216E05C16C04A138016004A5A5D4A5A4A5A4A5AEC7F8092C7FC14FEEB01F8
49481378495A495A495A013EC712F84914F05B4848130148B6FCA25A5A5A5A4815E0B7FC
A425377BB630>I<EB03FF011F13F0017F13FC3901FC07FF2603F003138048486C13C049
6C13E0EA0FF001FC14F0121F7FA56C4814E0A23803F001C714C04A138016004A5A4A5AEC
3FF090380FFFC092C7FC15F090380007FE913801FF806E13C016E0ED7FF016F816FC153F
A216FEEA1FC0487E487E487EA416FCA249EB7FF8127F01C0EBFFF06C4814E06C6C4813C0
260FFC0713806CB61200000114FC6C6C13F0010790C7FC27387CB630>I<ED07C0150FA2
151F153F157F15FFA25C5C5C5CA2141E5C147C5C5C495A495A1307495A5C131E5B137C5B
5B485A485A1207485A90C7FC121E5A127C5AB81280A4C70001EBC000AA0103B61280A429
377DB630>I<001C15C0D81F80130701F8137F90B61280A216005D5D15F05D15804AC7FC
14F090C9FCA8EB07FE90383FFFE090B512F89038FC07FC9038E003FFD98001138090C713
C0120EC813E0157F16F0A216F8A21206EA3F80EA7FE012FF7FA44914F0A26C4813FF90C7
13E0007C15C06C5B6C491380D9C0071300390FF01FFE6CB512F8000114E06C6C1380D90F
F8C7FC25387BB630>I<EC0FF8ECFFFE0103EBFF8090390FF80FC090393FE003E090397F
C001F09038FF000F48EC1FF84848133F485A120F5B121FA2003FEC1FF0ED0FE04990C7FC
127FA21408EC7FF039FFF1FFFC01F313FFD9F78013809039FF007FC049EB3FE04914F0ED
1FF85B16FCA34914FEA5127FA5123F16FCA26C7E16F8000F143F6C6C14F0ED7FE06C6C14
C03A01FF81FF806C90B51200013F13FC010F13F00101138027387CB630>I<123C123EEA
3FE090B71280A41700485D5E5E5EA25E007CC7EA0FC000784A5A4BC7FC00F8147E48147C
15FC4A5A4A5AC7485A5D140F4A5A143F92C8FC5C147E14FE1301A2495AA31307A2130F5C
A2131FA5133FA96D5A6D5A6D5A293A7BB830>I<49B47E010F13F0013F13FC9038FE01FF
3A01F8007F804848EB3FC04848EB1FE0150F485AED07F0121FA27FA27F7F01FEEB0FE0EB
FF809138E01FC06CEBF03F02FC13809138FF7F006C14FC6C5C7E6C14FE6D7F6D14C04914
E048B612F0EA07F848486C13F8261FE01F13FC383FC007EB8001007F6D13FE90C7123F48
140F48140715031501A21500A216FC7E6C14016D14F86C6CEB03F06D13076C6CEB0FE0D8
0FFEEB7FC00003B61200C614FC013F13F00103138027387CB630>I<EB03FF011F13E001
7F13F83901FF03FE4848C67E4848EB7F80484814C0001FEC3FE0123F49EB1FF0127F16F8
A212FF16FCA516FEA5007F143FA3123F157F6C7E000F14FF6C6C5A3903FE03DF6CB5129F
6C6C131FD91FFC13FCEB00201400A216F8D80FE0133F487E486C14F0A216E0157F16C0ED
FF80495A6C4848130090388007FE390FE01FF86CB55A6C14C0C691C7FCEB1FF027387CB6
30>I<ED03E04B7EA24B7EA34B7EA24B7EA34B7EA292B57EA34A8015F302038015E1A202
078015C0020F80ED807FA2021F80ED003F4A80023E131FA2027E80027C7F02FC814A7FA2
0101824A7F49B77EA3498202C0C7FC010F824A147FA2011F8291C8123F4982013E151FA2
017E82017C8101FE83B500F80107B61280A4413A7DB948>65 D<DB3FFCEB01C00203B5EA
C003021FECF00791B6EAFC0F01039039FC00FF3F4901C0EB1FFFD91FFEC77E49481403D9
7FF080494880485B48177F4849153F4890C9FC181F485A180F123F5B1807127FA24993C7
FC12FFAD127F7FF003C0123FA27F001F1707A26C6C1780180F6C6D16006C6D5D6C173E6C
6D157ED97FF85D6D6C4A5A6DB44A5A010701C0EB0FE06D01FCEBFF80010090B548C7FC02
1F14F8020314E09126003FFEC8FC3A3B7BB945>67 D<B87E17F817FF18C028007FF80007
13F09338007FF8EF1FFE717E050313807113C0A27113E0F07FF0A2F03FF8A219FC181FA2
19FEA419FFAC19FEA419FC183FA219F8187F19F0F0FFE0A24D13C04D13804D1300EF1FFE
EF7FFC933807FFF0B912C095C7FC17FC178040397DB849>I<B912C0A43A007FF8000393
38007FE0171F170F1707A21703A21701A318F0EE7800A41800A216F8A21501150791B5FC
A4ECF80715011500A21678A693C8FCADB7FCA434397DB83C>70 D<DB3FFCEB01C00203B5
EAC003021FECF00791B6EAFC0F01039039FC00FF3F4901C0EB1FFFD91FFEC77E49481403
D97FF080494880485B48177F4849153F4890C9FC181F485A180F123F5B1807127FA24993
C8FC12FFAB043FB61280A2127F7FDC0003EBC000123FA27F121FA26C7EA26C7F6C7F6C7F
7ED97FF85C6D7E6DB45C010701C05B6D01FCEBFF3F010090B5EAFE0F021FECF8030203EC
E0009126003FFEC9FC413B7BB94B>I<B612FCA439007FF800B3B3ADB612FCA41E397DB8
24>73 D<B7FCA426007FF8C9FCB3ACEF0780A5170F1800A35FA25FA25F5F5E5EEE0FFE16
7FB8FCA431397DB839>76 D<B8FC17F017FEEFFF8028007FF8000F13C0040113E07013F0
EF7FF8EF3FFCA2EF1FFEA218FFA818FEA2EF3FFCA2EF7FF8EFFFF04C13E0040F13C091B7
120017FC17E002F8C9FCB3A4B612FCA438397DB841>80 D<D907FF130E013FEBE01E90B5
EAF83E0003ECFE7E3A07FC01FFFE390FF0001F4848130F48481303491301007F140090C8
FC167E5A163EA27F161E7F7F6D91C7FC13FC387FFFE014FEECFFF06C14FE6F7E6C816C15
F06C816C81C681133F010F801301D9000F1480EC007F030F13C01503818100F0157FA316
3FA27E17807E167F6C16007E6D14FE01E0495A01F813039039FF801FF800FC90B512E0D8
F83F5CD8F00749C7FC39E0007FF02A3B7BB935>83 D<003FB91280A4D9F800EBF003D87F
C09238007FC049161F007EC7150FA2007C1707A200781703A400F818E0481701A4C892C7
FCB3AE010FB7FCA43B387DB742>I<B6D8E01FB500FC90383FFFFCA4000101F0C7D83FFC
C8EA7E006C71153C171F6E197C017F701578836E7014F8013F6F5E6E1801011F4B6D5CA2
6E18036D4B6D5CA26D6D496D495A173C6F170F6D037C6D91C7FCEF787F6F5F6D4B6C6C13
1E816D02016E5BEFE01F03F8177C027F01036E13784D7E03FCEE80F8023F49486C5C15FE
021F010FEDC1E04D7E03FF16C36E49EDE3C0041E7F049E15F76E01BC6D5C04FC15FF6E95
C8FC4C80A26E5F4C143F6E5F4C141FA2037F5E4C140FA26F486E5AA2031F5E93C812036F
5E5E3A7EB863>87 D<EB3FFE0003B512E0000F14F8391FF00FFE003FEB03FF6D6C7F6E7F
A26F7EA26C5A6C5AEA0380C8FCA2EC3FFF010FB5FC137F3901FFF87F00071380380FFE00
EA3FF85B485A12FF5BA415FF6D5A127F263FF00713F83B1FFC1FBFFFC0390FFFFE1F0003
EBF80F39003FE0032A257DA42E>97 D<13FFB5FCA412077EAF4AB47E020F13F0023F13FC
9138FE03FFDAF00013804AEB7FC00280EB3FE091C713F0EE1FF8A217FC160FA217FEAA17
FCA3EE1FF8A217F06E133F6EEB7FE06E14C0903AFDF001FF80903AF8FC07FE009039F03F
FFF8D9E00F13E0D9C00390C7FC2F3A7EB935>I<903801FFC0010F13FC017F13FFD9FF80
13802603FE0013C048485AEA0FF8121F13F0123F6E13804848EB7F00151C92C7FC12FFA9
127FA27F123FED01E06C7E15036C6CEB07C06C6C14806C6C131FC69038C07E006DB45A01
0F13F00101138023257DA42A>I<EE7F80ED7FFFA4150381AF903801FF81010F13F1013F
13FD9038FFC07F0003EB001FD807FC1307000F8048487F5B123FA2485AA312FFAA127FA2
7F123FA26C6C5B000F5C6C6C5B6C6C4913C02701FF80FD13FE39007FFFF9011F13E10103
13012F3A7DB935>I<903803FF80011F13F0017F13FC3901FF83FE3A03FE007F80484813
3F484814C0001FEC1FE05B003FEC0FF0A2485A16F8150712FFA290B6FCA301E0C8FCA412
7FA36C7E1678121F6C6C14F86D14F000071403D801FFEB0FE06C9038C07FC06DB5120001
0F13FC010113E025257DA42C>I<EC1FF0903801FFFC010713FF90391FF87F8090383FE0
FFD9FFC113C0A2481381A24813016E1380A2ED3E0092C7FCA8B6FCA4000390C8FCB3ABB5
12FEA4223A7DB91D>I<161FD907FEEBFFC090387FFFE348B6EAEFE02607FE07138F260F
F801131F48486C138F003F15CF4990387FC7C0EEC000007F81A6003F5DA26D13FF001F5D
6C6C4890C7FC3907FE07FE48B512F86D13E0261E07FEC8FC90CAFCA2123E123F7F6C7E90
B512F8EDFF8016E06C15F86C816C815A001F81393FC0000F48C8138048157F5A163FA36C
157F6C16006D5C6C6C495AD81FF0EB07FCD807FEEB3FF00001B612C06C6C91C7FC010713
F02B377DA530>I<13FFB5FCA412077EAFED7FC0913803FFF8020F13FE91381F03FFDA3C
01138014784A7E4A14C05CA25CA291C7FCB3A3B5D8FC3F13FFA4303A7DB935>I<EA01F0
EA07FC487EA2487EA56C5AA26C5AEA01F0C8FCA913FF127FA412077EB3A9B512F8A4153B
7DBA1B>I<13FFB5FCA412077EAF92380FFFE0A4923803FC0016F0ED0FE0ED1F804BC7FC
157E5DEC03F8EC07E04A5A141FEC7FE04A7E8181A2ECCFFEEC0FFF496C7F806E7F6E7F82
157F6F7E6F7E82150F82B5D8F83F13F8A42D3A7EB932>107 D<13FFB5FCA412077EB3B3
ACB512FCA4163A7DB91B>I<01FED97FE0EB0FFC00FF902601FFFC90383FFF80020701FF
90B512E0DA1F81903983F03FF0DA3C00903887801F000749DACF007F00034914DE6D48D9
7FFC6D7E4A5CA24A5CA291C75BB3A3B5D8FC1FB50083B512F0A44C257DA451>I<01FEEB
7FC000FF903803FFF8020F13FE91381F03FFDA3C011380000713780003497E6D4814C05C
A25CA291C7FCB3A3B5D8FC3F13FFA430257DA435>I<903801FFC0010F13F8017F13FFD9
FF807F3A03FE003FE048486D7E48486D7E48486D7EA2003F81491303007F81A300FF1680
A9007F1600A3003F5D6D1307001F5DA26C6C495A6C6C495A6C6C495A6C6C6CB45A6C6CB5
C7FC011F13FC010113C029257DA430>I<9039FF01FF80B5000F13F0023F13FC9138FE07
FFDAF00113800003496C13C00280EB7FE091C713F0EE3FF8A2EE1FFCA3EE0FFEAA17FC16
1FA217F8163F17F06E137F6E14E06EEBFFC0DAF00313809139FC07FE0091383FFFF8020F
13E0020390C7FC91C9FCACB512FCA42F357EA435>I<9038FE03F000FFEB0FFEEC3FFF91
387C7F809138F8FFC000075B6C6C5A5CA29138807F80ED3F00150C92C7FC91C8FCB3A2B5
12FEA422257EA427>114 D<90383FF0383903FFFEF8000F13FF381FC00F383F0003007E
1301007C130012FC15787E7E6D130013FCEBFFE06C13FCECFF806C14C06C14F06C14F812
03C614FC131F9038007FFE140700F0130114007E157E7E157C6C14FC6C14F8EB80019038
F007F090B512C000F8140038E01FF81F257DA426>I<130FA55BA45BA25B5BA25A120700
1FEBFFE0B6FCA3000390C7FCB21578A815F86CEB80F014816CEBC3E090383FFFC06D1380
903803FE001D357EB425>I<01FFEC3FC0B5EB3FFFA4000714016C80B3A35DA25DA26C5C
6E4813E06CD9C03E13FF90387FFFFC011F13F00103138030257DA435>I<B539F01FFFF0
A4000390398003F8006C01C013E06C1407D97FE05B6D6C485A6E48C7FC90381FFC3E010F
5B903807FEFC6D6C5A5D6D5B6D5B6E7E6E7E814A7EA24A7E903801F3FFD903E37FD907C1
7FEB0FC049486C7E4A6C7E013E80496D7E49130F00016E7EB590383FFFF8A42D257EA432
>120 D<B539F001FFF8A4000390C7EA3F00161E6E133E6C153C6E137C6C15786E13F801
7F5CECF001013F5C14F8011F495AA2ECFC07010F5CECFE0F010791C7FC6E5A6D131E15BE
6D13BC15FC6D5BA36E5AA26E5AA26E5AA26E5AA292C8FCA25C141E003F133E387F803C38
FFC07C147814F8EBC1F0EBC3E06C485A387D1F80D83FFFC9FCEA1FFCEA07F02D357EA432
>I<003FB612C0A3D9F0031380EB800749481300003E5C003C495A007C133F5D0078495A
14FF5D495B5BC6485B92C7FC495A131F5C495A017FEB03C0EBFFF014E04813C05AEC8007
4813005A49EB0F80485A003F141F4848133F9038F001FFB7FCA322257DA42A>I
E /Fn 11 74 df<1306130C13181330136013E0EA01C0EA0380A2EA07005A120E121EA2
121C123CA35AA512F85AAB7E1278A57EA3121C121EA2120E120F7EEA0380A2EA01C0EA00
E0136013301318130C13060F3B7AAB1A>40 D<12C012607E7E7E120E7EEA0380A2EA01C0
13E0120013F0A213701378A3133CA5133E131EAB133E133CA51378A3137013F0A213E012
0113C0EA0380A2EA0700120E120C5A5A5A5A0F3B7DAB1A>I<140EB3A2B812E0A3C7000E
C8FCB3A22B2B7DA333>43 D<EB3F803801FFF03803E0F83807803C48487E001E7F003E14
80A2003C1307007C14C0A400FC14E0AE007C14C0A36CEB0F80A36CEB1F006C131E6C6C5A
3803E0F86CB45A38003F801B277EA521>48 D<13381378EA01F8121F12FE12E01200B3AB
487EB512F8A215267BA521>I<13FF000313E0380E03F0381800F848137C48137E00787F
12FC6CEB1F80A4127CC7FC15005C143E147E147C5C495A495A5C495A010EC7FC5B5B9038
70018013E0EA0180390300030012065A001FB5FC5A485BB5FCA219267DA521>I<13FF00
0313E0380F01F8381C007C0030137E003C133E007E133FA4123CC7123E147E147C5C495A
EB07E03801FF8091C7FC380001E06D7E147C80143F801580A21238127C12FEA21500485B
0078133E00705B6C5B381F01F03807FFC0C690C7FC19277DA521>I<1438A2147814F813
01A2130313071306130C131C131813301370136013C012011380EA03005A120E120C121C
5A12305A12E0B612E0A2C7EAF800A7497E90383FFFE0A21B277EA621>I<0018130C001F
137CEBFFF85C5C1480D819FCC7FC0018C8FCA7137F3819FFE0381F81F0381E0078001C7F
0018133EC7FC80A21580A21230127C12FCA3150012F00060133E127000305B001C5B380F
03E03803FFC0C648C7FC19277DA521>I<B712C0A23907F0001F0003EC03E015011500A2
1660A31630A215C01600A31401A2140790B5FCA2EBF0071401A21400A492C7FCA9487EB5
12E0A224287EA72B>70 D<B512C0A23807F8006C5AB3B0487EB512C0A212287EA718>73
D E /Fo 15 121 df<1238127C12FEA3127C123807077A8614>58
D<D93FFC903801FFF88001019138001F006E141E170C902603BF80131C1718EC1FC0A249
6C6C1338173090380607F0A290260E03F81370176090380C01FCA290261C00FE13E05F01
18137FA20138EB3F81031F5B013014C1150F017014E3030790C7FC016014F3150301E014
FF6F5A5B15001201167C5B486C143C1207D8FFFC1418A235287DA735>78
D<91381FE0089138FFFC18903903E01E3890390780077090390E0003F049130149130001
7814E0137013F0A2000115C0A216007F7F6CB47E14F86DB47E6D13F06D7F01077F01007F
1407EC00FF153F81A3001880A20038141E12300038141C153C00781438007C5C007E5C00
77EB03C026E3E00FC7FC38C0FFFE38801FF0252A7CA829>83 D<EB1F80EB7FC0EBF0E738
03C03FEA078048487EA2121E003E133E123C127CA2485BA4485B1530A3903801F060A2EA
7803010E13C0393C1CF980381FF07F3907C01E001C1B7C9924>97
D<EA01F0123FA2EA03E0A21207A25BA2120FA25BA2121F139FEB3FC0EBE0E0383FC0F0EB
0078A2123E007E137CA2127CA212FC14F85AA338F001F0A214E0130314C0EB078038700F
00EA781E6C5AEA1FF0EA07C016297CA71D>I<EB0FC0EB7FF0EBF0383803C01CEA0780EA
0F005A121E003E1338481370EB07E0387FFF8038FFFC0000F8C7FCA45AA214040078130C
141800381330003C13E0381E07C0380FFF00EA03F8161B7C991F>101
D<133EEA07FEA2EA007CA213FCA25BA21201A25BA2120314FCEBE3FF9038EF0780D807FC
13C0EBF00313E0A2EA0FC014071380A2121FEC0F801300A248EB1F00A2003E1406143E12
7EEC7C0C127C151800FCEB3C30157048EB1FE00070EB0F801F297CA727>104
D<130E131F5BA2133E131C90C7FCA7EA03E0487EEA0C78EA187C1230A212605B12C0A2EA
01F0A3485AA2485AA2EBC180EA0F81A2381F0300A213066C5A131CEA07F06C5A11287DA6
17>I<1407EC0F80141FA21500140E91C7FCA7EB03E0EB07F8EB0C3C1318EB303E136013
C0A248485AA2C7FCA25CA4495AA4495AA4495AA4495AA21238D87C1FC7FC12FC133E485A
EA70F8EA7FE0EA1F80193380A61B>I<3907801FC0390FE07FF03918F0E0F83930F1807C
EBFB00D860FE133C5B5B00C1147C5B1201A248485BA34A5AEA07C01660EC03E0A23A0F80
07C0C0A2EDC180913803C300D81F0013C7EC01FE000EEB00F8231B7D9929>110
D<EB0FE0EB3FF8EBF83C3801E00E3803C00F3907800780EA0F00121E123E003C14C0127C
158048130FA31500485BA2143E143C5C12785C383C03C0381E0F80D80FFEC7FCEA03F81A
1B7C9921>I<3807803E390FE0FF803818F3C13930F703C0EBFE073860FC0F13F8158039
C1F0070091C7FC1201A2485AA4485AA4485AA448C8FCA2120E1A1B7D991F>114
D<EB0FE0EB7FF8EBF03C3801C00E0003131E3807803EA2143C000F1318EBE0006CB4FC14
C06C13E06C13F06C13F813071301EA3C00007E1378A24813F05A387001E0EB03C0383C0F
80381FFE00EA07F8171B7C991F>I<131C133EA25BA45BA4485AB512E0A23801F000485A
A4485AA4485AA448C7FC1460A214C0123EEB0180EB0300EA1E06EA1F1CEA0FF8EA03E013
267EA419>I<90387C03C03901FF0FF03907079C30390E03B078000CEBF0F8001813E112
3015F0396007C0E015001200A2495AA449C7FC15301238007C1460EAFC3E15C0EAF87E39
F06F03803970C70700383F83FE381F01F81D1B7D9926>120 D E
/Fp 3 107 df<B712FEA327037A8F34>0 D<1338A50060130C00F8133E00FC137E00FE13
FE383FBBF83807FFC000011300EA007C48B4FC000713C0383FBBF838FE38FE00FC137E00
F8133E0060130C00001300A517197B9A22>3 D<12E0B3B3B3A5033B78AB14>106
D E /Fq 15 107 df<007FB81280B912C0A26C17803204799641>0
D<0060150600F8150F6C151F007E153F6C157E6C6C14FC6C6CEB01F86C6CEB03F06C6CEB
07E06C6CEB0FC06C6CEB1F80017EEB3F006D137E6D6C5A90380FC1F8903807E3F0903803
F7E06DB45A6D5B6EC7FCA24A7E497F903803F7E0903807E3F090380FC1F890381F80FC90
383F007E017E7F49EB1F804848EB0FC04848EB07E04848EB03F04848EB01F84848EB00FC
48C8127E007E153F48151F48150F00601506282874A841>2 D<007FB812F8B912FCA26C
17F8CCFCAD007FB812F8B912FCA26C17F8CCFCAD007FB812F8B912FCA26C17F836267BA7
41>17 D<EF0380EF0FC0173FEFFF80933803FE00EE0FF8EE3FE0EEFF80DB03FEC7FCED0F
F8ED3FE0EDFF80DA03FEC8FCEC0FF8EC3FE0ECFF80D903FEC9FCEB0FF8EB3FE0EBFF80D8
03FECAFCEA0FF8EA3FE0EAFF8048CBFC6C7EEA7FE0EA0FF8EA03FEC66C7EEB3FE0EB0FF8
EB03FE903800FF80EC3FE0EC0FF8EC03FE913800FF80ED3FE0ED0FF8ED03FE923800FF80
EE3FE0EE0FF8EE03FE933800FF80EF3FC0170FEF038094C7FCAD007FB81280B912C0A26C
1780324279B441>20 D<127012FCB4FCEA7FC0EA1FF0EA07FCEA01FF38007FC0EB1FF0EB
07FCEB01FF9038007FC0EC1FF0EC07FCEC01FF9138007FC0ED1FF0ED07FCED01FF923800
7FC0EE1FF0EE07FCEE01FF9338007FC0171F177F933801FF80933807FC00EE1FF0EE7FC0
4B48C7FCED07FCED1FF0ED7FC04A48C8FCEC07FCEC1FF0EC7FC04948C9FCEB07FCEB1FF0
EB7FC04848CAFCEA07FCEA1FF0EA7FC048CBFC12FC1270CCFCAD007FB81280B912C0A26C
1780324279B441>I<181EA4181F84A285180785727EA2727E727E85197E85F11F80F10F
C0F107F0007FBA12FCBCFCA26C19FCCCEA07F0F10FC0F11F80F13F00197E61614E5A4E5A
A24E5A61180F96C7FCA260181EA4482C7BAA53>33 D<153CA2157C157815F84A5A5D1403
4A5A4A5A4ACBFC5C4AB812FE91BAFC5B5BD907C0CBFCEB1F80017FCCFC13FCEA07F8EA1F
E0EAFF80A2EA1FE0EA07F8C67E137FEB1F80EB07C06DBAFC7F7F6E17FE6ECBFC806E7E6E
7E6E7E1401816E7E1578157C153CA2482E7BAB53>40 D<173CA2173E171E171F717E1707
84717E717E717E84007FB87EBAFC8585CBEA03E0F001F8F000FE193FF11FE0F107F8F101
FFA2F107F8F11FE0F13F0019FEF001F8F003E0BA5A6196C7FC6C5FCB5A604D5A4D5A4D5A
60170F4DC8FC171E173E173CA2482E7BAB53>I<91381FFFFE91B6FC1303010F14FED91F
F0C7FCEB7F8001FEC8FCEA01F8485A485A485A5B48C9FCA2123EA25AA2127812F8A25AA2
B712FE16FFA216FE00F0C9FCA27EA21278127CA27EA27EA26C7E7F6C7E6C7E6C7EEA00FE
EB7F80EB1FF06DB512FE010314FF1300021F13FE283279AD37>50
D<EE0180EE03C01607A2EE0F80A2EE1F00A2163EA25EA25EA24B5AA24B5AA24B5A150F5E
4BC7FCA2153EA25DA25DA24A5AA24A5AA24A5AA24A5AA24AC8FCA2143EA25CA25CA2495A
A2495AA2495AA2495AA249C9FCA2133EA25B13FC5B485AA2485AA2485AA2485AA248CAFC
A2123EA25AA25AA25A12602A4E75BB00>54 D<18F017011707A3170FA2171F60173F1737
177F176F17EF17CF04017F178F1603170FEE0707160EA2161C161816381630167016E0A2
ED01C016801503ED0700A2150E5DA25D157815705D02018103CFB5FCEC03BF4AB6FCA202
0EC71203141E5C143802788100205B386001E0EAF0036C4848140126FE1F8081B5C8FC19
0C49EEFF3C496F13F06C4817E06C4817806C48EE7E00D8078093C7FC3E407DBB42>65
D<0370EBFF80912601E00713E0912603C01F13F891260F007F7F021E9038F03FFE913A78
03C00FFF9139F0078003494848486C1380902603C01E7F902607803EEC7FC049485A011E
49143F013E17E0494848141FEBF8035D2601F007150F00035CEBE00F00075CD9C01EC8FC
000F131C49C9FC121FA248CA13C0A348171F1980127EA2183F00FE1800A2183E187E187C
18FC6017016C5F4D5A6017076C6C4B5A4DC7FC171E6D5D6C6C5D5F6D4A5A6C6CEC03806C
6C020FC8FC01FF143E6C01C013F86C9038F807E06C90B512806C6C49C9FC011F13F00103
13803B3D7BBA42>79 D<EC01F8140FEC3F80ECFC00495A495A495AA2130F5CB3A7131F5C
133F49C7FC13FEEA03F8EA7FE048C8FCEA7FE0EA03F8EA00FE137F6D7E131F80130FB3A7
801307A26D7E6D7E6D7EEC3F80EC0FF814011D537ABD2A>102 D<12FCEAFFC0EA07F0EA
01FCEA007E7F80131F80130FB3A7801307806D7E6D7EEB007EEC1FF0EC07F8EC1FF0EC7E
00495A495A495A5C130F5CB3A7131F5C133F91C7FC137E485AEA07F0EAFFC000FCC8FC1D
537ABD2A>I<126012F0B3B3B3B3A91260045377BD17>106 D E /Fr
41 123 df<0103B812F8A34AC8127F010116076EED01F0A26D160081027F167081143F81
021F1660A281140F8114076F1500140381A21401818082157FA36FC9FC153E15385D5D4A
5A4A5A4AC8120C021E151C023815185C4A1538494815304948157049C9FC010E5E013C15
0101704B5A4915074848150F48484B5A48C9127F000EED0FFF003FB8C7FC5AB9FC5F3D39
7BB841>6 D<EC3FC0ECFFF8903807E07C90380F801FD93F00EB800C017E130F49903807
C01C4848ECE018485A484801031338000FEDF0305B001F16704848156017E0007F16C090
C713F1178016F34816004815F716FE5EA2485D5EA4007E1407150F003E91381DF818003F
14796C02E11338270F8007C013303B07E03F007CF02601FFF8EB3FC026003FC0EB0F802E
267DA435>11 D<ED01FC923807FF8092381E07C092387801E003E013F0913901C000F84A
5A4AC7FC020E14FC5C5C143002701301026014F814E05C010114034A14F0130391C7EA07
E017C049140F0106EC1F809238FFBF00D90E0113FC90390C0381F8EDFFFE0200131F011C
010013800118140F17C0A213380130EC07E0A2160F13701360A301E0141F4915C0A30001
153F1780A2EE7F00120316FE5E6D495AD80760495AD80670495A6D495A6D495AD80E0E49
C7FC390C0780FC903801FFF09038007F80001C90C9FC1218A312381230A312701260A312
E05AA22E4B7EBA2F>I<EB07F0D91FFC1430D97FFE147090B5146000036E13E0486E13C0
D9F01F1301270F8007E01380261F00011303001CD900F0130048EC7007160648EC300E00
60EC380CED181C00E01518C8121CED0C3816301670166016E05EA2150D5EA2150F93C7FC
A2150EA3150CA3151CA215181538A45DA45DA44A5AA35D2C377FA42B>I<1403EC3FF891
387FFF80D901E313C014800103133F9138001F80ED070092C7FC80A280A2808013018080
130080147F81143F8149B47E130790380F8FF0EB3E0F496C7E13F83801F003D803E07F12
07380FC0011380121FEA3F0014005A127EA212FE5D481301A35DA24813035D6C13075D12
7C4A5A6C91C7FC5C6C133E6C6C5A3807C0F03801FFE0D8003FC8FC223D7DBB25>I<160C
161C1618A316381630A316701660A316E05EA315015EA301F80103130FD803FE9138001F
80D8070F153F000E018015C0001C5C001814060038161F0030160FD8701F010E13070060
140C1703D8E03F168000C0EB001C491318EA007E180001FE13384913305F000116064913
700360130E5F000316184901E013384B133017705F0201495AD801F849485A4CC7FC160E
2600FC035B017EEB0078013FEB01E090390FE30F80902603FFFEC8FC9038003FF00206C9
FCA2140E140CA3141C1418A314381430A314701460324B7EB936>32
D<EC3FE0903801FFFC010713FF011F148090397F801FC09038F80007D801E01303484890
C7FC48C9FCA21206A5000713F038039FFF3801FF0F14FF38039FFE48C9FC120E5A5A1230
12701260A212E0A215080060141C00701418007814386C14F0391F8007E06CB55A6C91C7
FC000113FC38003FE022287FA527>34 D<121C127FEAFF80A5EA7F00121C0909798817>
58 D<121C127FEAFF80A213C0A3127F121C1200A412011380A2120313005A1206120E5A
5A5A12600A19798817>I<EF0180EF07C0171F177F933801FF00EE07FCEE1FF0EE7FC04B
48C7FCED07FCED1FF0ED7FC04A48C8FCEC07FCEC1FF0EC7FC04948C9FCEB07FCEB1FF0EB
7FC04848CAFCEA07FCEA1FF0EA7FC048CBFCA2EA7FC0EA1FF0EA07FCEA01FF38007FC0EB
1FF0EB07FCEB01FF9038007FC0EC1FF0EC07FCEC01FF9138007FC0ED1FF0ED07FCED01FF
9238007FC0EE1FF0EE07FCEE01FF9338007FC0171F1707EF0180323279AD41>I<150C15
1E153EA2153C157CA2157815F8A215F01401A215E01403A215C01407A21580140FA21500
5CA2141E143EA2143C147CA2147814F8A25C1301A25C1303A2495AA25C130FA291C7FC5B
A2131E133EA2133C137CA2137813F8A25B1201A25B1203A25B1207A25B120FA290C8FC5A
A2121E123EA2123C127CA2127812F8A25A12601F537BBD2A>I<124012F812FE6C7EEA3F
E0EA0FF8EA03FEC66C7EEB3FE0EB0FF8EB03FE903800FF80EC3FE0EC0FF8EC03FE913800
FF80ED3FE0ED0FF8ED03FE923800FF80EE3FE0EE0FF8EE03FE933800FF80EF3FC0A2EFFF
80933803FE00EE0FF8EE3FE0EEFF80DB03FEC7FCED0FF8ED3FE0EDFF80DA03FEC8FCEC0F
F8EC3FE0ECFF80D903FEC9FCEB0FF8EB3FE0EBFF80D803FECAFCEA0FF8EA3FE0EAFF8048
CBFC12F81260323279AD41>I<9339FF8001C0030F13E0037F9038F80380913A01FF807E
07913A07F8000F0FDA1FE0EB079FDA3F80903803BF0002FFC76CB4FCD901FC80495A4948
157E495A495A4948153E017F163C49C9FC5B1201484816385B1207485A1830121F4993C7
FCA2485AA3127F5BA312FF90CCFCA41703A25F1706A26C160E170C171C5F6C7E5F001F5E
6D4A5A6C6C4A5A16076C6C020EC8FC6C6C143C6C6C5C6CB4495A90393FE00FC0010FB5C9
FC010313FC9038007FC03A3D7CBA3B>67 D<0103B812E05BA290260007F8C7123F4B140F
F003C0140F18015DA2141FA25D1980143FA25D1760027F14E095C7FC92C75AA24A1301A2
4A495A16070101141F91B6FC94C8FCA2903903FC001F824A130EA21307A24A130CA2010F
141CA24A90C9FCA2131FA25CA2133FA25CA2137FA291CBFC497EB612C0A33B397DB835>
70 D<92391FE00380DBFFFC130002036D5A91390FE01F8F91393F0007DF027EEB01FE02
F81300495A4948147E177C4948143C495AA2011F153891C8FCA3491530A28094C7FC8080
6D7E14FEECFFE06D13FE6DEBFFC06D14F06D806D80021F7F02037FEC003F03037F150016
7F163F161FA3120C160FA2001C151F94C7FCA3003C153EA25E003E5D127E007F4A5A6D49
5A6DEB0FC0D8F9F0495AD8F0FE01FEC8FC39E03FFFF8010F13E0D8C00190C9FC313D7CBA
33>83 D<0003B812FEA25A903AF8003FC00101C0913880007E4848163C90C7007F141C12
1E001C92C7FCA2485CA200305C007017180060130112E0485CA21403C716005DA21407A2
5DA2140FA25DA2141FA25DA2143FA25DA2147FA292C9FCA25CA25CA21301A25CA21303A2
5CEB0FFC003FB6FC5AA237397EB831>I<1578EC01FEEC07C6EC0F861507EC1E03143E14
7C1507ECF806A2EB01F00103130EECE00C1307A2ECC01C010F1318153890381F80301570
156090383F00E015C01401017F1380EB7E03EC07001406EBFE0E495A5C14300001137049
5AEBF9C0EBFB8001FFC7FC5B5B485AA25BA4485A120F121DEA39F0127100E1140C008014
3C0000147015E090387801C0EC078090383C1E00EB1FF8EB07E0203C7FBA23>96
D<147E903803FF8090390FC1C38090391F00EFC0017E137F49133F485A4848EB1F801207
5B000F143F48481400A2485A5D007F147E90C7FCA215FE485C5AA214015D48150CA21403
EDF01C16181407007C1538007E010F1330003E131F027B13706C01E113E03A0F83C0F9C0
3A03FF007F80D800FCEB1F0026267DA42C>I<133FEA1FFFA3C67E137EA313FE5BA31201
5BA312035BA31207EBE0FCEBE3FF9038E707C0390FFE03E09038F801F001F013F8EBE000
485A15FC5BA2123F90C7FCA214015A127EA2140312FE4814F8A2140715F05AEC0FE0A215
C0EC1F80143F00781400007C137E5C383C01F86C485A380F07C06CB4C7FCEA01FC1E3B7C
B924>I<EC3FC0903801FFF0903807E03C90380F800E90383F0007017E131F49137F4848
13FF485A485A120F4913FE001F143848481300A2127F90C8FCA35A5AA45AA31503150700
7E1406150E003E143C003F14706C14E0390F8007C03907C03F003801FFF838003FC02026
7DA424>I<163FED1FFFA3ED007F167EA216FEA216FCA21501A216F8A21503A216F0A215
07A2027E13E0903803FF8790380FC1CF90381F00EF017EEB7FC049133F485A4848131F00
0715805B000F143F485A1600485A5D127F90C7127EA215FE5A485CA21401A248ECF80CA2
1403161CEDF0181407007C1538007E010F1330003E131F027B13706C01E113E03A0F83C0
F9C03A03FF007F80D800FCEB1F00283B7DB92B>I<EC3FC0903801FFF0903807E0789038
1F801C90387E001E49130E485A485A1207485A49131E001F141C153C484813F8EC03E000
7FEB3FC09038FFFE0014E090C8FC5A5AA7007E140315071506003E140E153C6C14706C6C
13E0EC07C03903E03F003801FFF838003FC020267DA427>I<EC07E0EC1FF891387C1C38
903901F80EFC903803F007903807E003EB0FC090381F8001D93F0013F85B017E130313FE
16F0485A150712034914E0A2150F12074914C0A2151FA2491480A2153FA2160000035C6D
5B00015B4A5A3900F8077E90387C1EFEEB1FF8903807E0FC90C7FC1401A25DA21403001E
5C123F387F80075D00FF495A49485A4849C7FC007C137E383C01F8381FFFE0000390C8FC
26367FA428>103 D<EB03F0EA01FFA3EA00075CA3130F5CA3131F5CA3133F91C9FCA35B
90387E03F8EC0FFF91383C0F809039FEF007C0D9FDC07FEBFF80EC0003485A5BA2491307
12035BA2150F00075D5BA2151F000F5D5B153F93C7FC121F4990387F0180157EEDFE0300
3F02FC130090C7FC5EEDF80648150E007E150C161C5E00FEEC787048EC3FE00038EC0F80
293B7CB930>I<14E0EB03F8A21307A314F0EB01C090C7FCAB13F8EA03FEEA070F000E13
80121C121812381230EA701F1260133F00E0130012C05BEA007EA213FE5B1201A25B1203
5BA20007131813E01438000F133013C01470EB806014E014C01381EB838038078700EA03
FEEA00F815397EB71D>I<150FED3F80A2157FA31600151C92C7FCABEC0F80EC3FE0ECF0
F0903801C0F849487E14005B130E130C131CEB1801133801305BA2EB0003A25DA21407A2
5DA2140FA25DA2141FA25DA2143FA292C7FCA25CA2147EA214FEA25CA21301001E5B123F
387F83F0A238FF87E0495A00FE5BD87C1FC8FCEA707EEA3FF8EA0FC0214981B722>I<EB
03F0EA01FFA3EA00075CA3130F5CA3131F5CA3133F91C8FCA35B017EEB07C0ED1FF0ED78
3801FEEBE0F89039FC01C1FCEC0383EC07070001130ED9F81C13F891383803F091387001
E0000349C7FCEBF1C0EBF38001F7C8FCEA07FEA2EBFFE0EBE7F8380FE0FEEBC07F6E7E14
1F001F80D9800F1330A21670003F011F136001001380A216E04815C0007E1481020F1380
158300FE903807870048EB03FE0038EB00F8263B7CB92B>I<EB0FC0EA03FF5AA2EA001F
1480A2133FA21400A25BA2137EA213FEA25BA21201A25BA21203A25BA21207A25BA2120F
A25BA2121FA25BA2123FA290C7FCA25AA2EA7E03A2EAFE07130612FCA2130E130C131C13
18EA7C38EA3C70EA1FE0EA0780123B7DB919>I<D803E0137F3A07F801FFE03A0E3C0781
F03A1C3E1E00F826383F387F00305B4A137C00705B00605BA200E090C712FC485A137EA2
0000140101FE5C5BA2150300015D5B15075E120349010F133016C0031F13700007ED8060
5B17E0EE00C0000F15014915801603EE0700001FEC0F0E49EB07FC0007C7EA01F02C267E
A432>110 D<EC1FC0ECFFF8903807E07E90380F801F90393F000F80017E14C049130748
4814E0485A4848EB03F0120F5B121F48481307A2127F90C7FCA2150F5A4815E0A2151F16
C0A248EC3F8016005D157E007E5C4A5A003E495A003F495A6C495A6C6C48C7FC3807E07E
3801FFF038003F8024267DA428>I<90390F8003F090391FE00FFC903939F03C1F903A70
F8700F80903AE0FDE007C09038C0FF80030013E00001491303018015F05CEA038113015C
A2D800031407A25CA20107140FA24A14E0A2010F141F17C05CEE3F80131FEE7F004A137E
16FE013F5C6E485A4B5A6E485A90397F700F80DA383FC7FC90387E1FFCEC07E001FEC9FC
A25BA21201A25BA21203A25B1207B512C0A32C3583A42A>I<02FC13C0903803FF019038
0F838390383F01C790397E00EF8049137F485A4848133F000715005B485A001F5C157E48
5AA2007F14FE90C75AA3481301485CA31403485CA314075D140F127C141F007E495A003E
137F381F01EF380F839F3903FF1F80EA00FC1300143F92C7FCA35C147EA314FE5C130190
387FFFF0A322357DA425>I<3903E001F83907F807FE390E3C1E07391C3E381F3A183F70
3F800038EBE07F0030EBC0FF00705B00601500EC007E153CD8E07F90C7FCEAC07EA21200
13FE5BA312015BA312035BA312075BA3120F5BA3121F5B0007C9FC21267EA425>I<14FF
010313C090380F80F090383E00380178131C153C4913FC0001130113E0A33903F000F06D
13007F3801FFE014FC14FF6C14806D13C0011F13E013039038003FF014071403001E1301
127FA24814E0A348EB03C012F800E0EB07800070EB0F006C133E001E13F83807FFE00001
90C7FC1E267CA427>I<EB01C0497E1307A4130F5CA3131F5CA3133F91C7FC007FB51280
A2B6FCD8007EC7FCA313FE5BA312015BA312035BA312075BA3120FEBC006A2140E001F13
0CEB801C141814385C146014E0380F81C038078780D803FEC7FCEA00F819357EB31E>I<
13F8D803FE1438D8070F147C000E6D13FC121C1218003814011230D8701F5C12601503EA
E03F00C001005B5BD8007E1307A201FE5C5B150F1201495CA2151F120349EC80C0A2153F
1681EE0180A2ED7F0303FF130012014A5B3A00F8079F0E90397C0E0F1C90393FFC07F890
3907F001F02A267EA430>I<01F8EB03C0D803FEEB07E0D8070F130F000E018013F0121C
12180038140700301403D8701F130112601500D8E03F14E000C090C7FC5BEA007E16C013
FE5B1501000115805B150316001203495B1506150E150C151C151815385D00015C6D485A
6C6C485AD97E0FC7FCEB1FFEEB07F024267EA428>I<01F816F0D803FE9138E001F8D807
0F903801F003000ED9800314FC121C12180038020713010030EDE000D8701F167C126003
0F143CD8E03F163800C001005B5BD8007E131F183001FE5C5B033F1470000117604991C7
FCA218E000034A14C049137E17011880170318005F03FE1306170E000101015C01F801BF
5B3B00FC039F8070903A7E0F0FC0E0903A1FFC03FFC0902703F0007FC7FC36267EA43B>
I<903907E001F090391FF807FC9039783E0E0F9039E01F1C1FD801C09038383F803A0380
0FF07F0100EBE0FF5A000E4A1300000C157E021F133C001C4AC7FC1218A2C7123FA292C8
FCA25CA2147EA214FEA24A130CA20101141C001E1518003F5BD87F81143801835C00FF15
60010714E03AFE0E7C01C0D87C1C495A2778383E0FC7FC391FF00FFC3907C003F029267E
A42F>I<13F8D803FE1470D8070F14F8000EEB8001121C121800381403003015F0EA701F
1260013F130700E0010013E012C05BD8007E130F16C013FE5B151F000115805BA2153F00
0315005BA25D157EA315FE5D1401000113033800F80790387C1FF8EB3FF9EB0FE1EB0003
5DA2000E1307D83F805B007F495AA24A5A92C7FCEB003E007C5B00705B6C485A381E07C0
6CB4C8FCEA01FC25367EA429>I<D901E01360D90FF813E0496C13C090383FFE0190397F
FF038090B5EA07009038F81FFF3901E003FE9038C0001C495B5DC85A4A5A4A5A4AC7FC14
0E5C5C14F0495AEB038049C8FC130E5B4913035B495B484813064848130E48C75AD80FFC
137C391FFF81F8381E0FFFD838075B486C5B00605CD8E00190C7FC38C0007C23267DA427
>I E /Fs 46 123 df<04FFEB03F003039038E00FFC923A0FC0F01F1E923A3F00783E0F
923A7E01F87C3FDB7C03EBFC7F03FC14F8DA01F813F905F1137EDC01E1133C913B03F000
03F000A314074B130760A3140F4B130F60A3010FB812C0A3903C001F80001F8000A3023F
143F92C790C7FCA44A5C027E147EA402FE14FE4A5CA413014A13015FA313034A13035FA3
13074A495AA44948495AA44948495AA3001CD9038090C8FC007E90380FC03F013E143E00
FE011F5B133C017C5C3AF8780F01E0D878F0EB07C0273FE003FFC9FC390F8000FC404C82
BA33>11 D<DC7FC0EB1FFF922603FFF890B512E0923C0FC07C03F801F0923C1F001E0FC0
0078033E90267E1F80137C4BD9FE3FC712FC03FC027E13015D02014A5A057815F84A48D9
01F8EB00E01B00A302074A5A5DA31707020F5D5DA3010FBA12C0A21B80903D001F80000F
C0001FA21A3F023F021F150092C75BA2621A7E4A143F027E92C7FC1AFE62A25F02FE027E
13014A5FA305FE130301014B5C4A1870A219070401EDE0F001034B15E05CA2F2E1C00107
14034D14C34A933803E380F101E7963800FF00010F4A48143C4A94C7FCA34A495A131F5F
001CEB0380007E90380FC01F013F92CAFC26FE3E1F133E013C5C5E3AF8780F01F0D878F0
EB83E03A3FE003FF80270F8000FECBFC4E4C82BA49>14 D<150C151C153815F0EC01E0EC
03C0EC0780EC0F00141E5C147C5C5C495A1303495A5C130F49C7FCA2133EA25BA25BA248
5AA212035B12075BA2120F5BA2121FA290C8FCA25AA2123EA2127EA2127CA412FC5AAD12
78A57EA3121C121EA2120E7EA26C7E6C7EA212001E5274BD22>40
D<140C140E80EC0380A2EC01C015E0A2140015F0A21578A4157C153CAB157CA715FCA215
F8A21401A215F0A21403A215E0A21407A215C0140F1580A2141F1500A2143EA25CA25CA2
495AA2495A5C1307495A91C7FC5B133E133C5B5B485A12035B48C8FC120E5A12785A12C0
1E527FBD22>I<EA03C0EA07F0120F121F13F8A313F0EA07B0EA003013701360A213E013
C01201EA038013005A120E5A5A5A5A5A0D197A8819>44 D<387FFFF8A2B5FCA214F01505
79941E>I<120EEA3F80127F12FFA31300127E123C0909778819>I<EB0780EB0FC0EB1FE0
133FA314C01480EB0E0090C7FCB2EA03C0487E487E121FA45B1207EA006013E05BA21201
5B120390C7FC5A120E5A121812385A5A5A13347AA319>59 D<EE01C01603A21607160FA2
161F83163FA2167F16FF16EF150116CFED038FA2ED070FA2150E151E151C1538A203707F
A2EDE007A2EC01C014031580EC0700A2140EA25CA25C027FB5FCA291B6FC9139E00007F8
49481303A2495A130791C7FC5B130E5BA25B1378137013F0EA03F8486C4A7EB56C48B512
F0A3343C7BBB3E>65 D<0107B612FCEFFF8018C0903B000FF0001FF04BEB07F81703021F
15FC17014B14FEA2023F1400A24B1301A2147F18FC92C7120318F84A140718F04AEC0FE0
EF1FC00101ED3F80EF7F004AEB01FEEE07F849B612E05F9139F80007F0EE01FC01076E7E
177F4AEC3F80A2010F16C0171F5CA2131F173F5CA2133FEF7F805C1800017F5D4C5A91C7
485A5F49140FEE1FE0494A5A00014AB45AB748C7FC16F816C037397BB83A>I<DB03FE13
0E92393FFF801E92B5EAE03C913903FE01F0913A0FF000787CDA3FC0EB3CFC4AC7EA1FF8
02FE140FEB03FC49481407494815F049481403495A5C49C813E05B485A5B000317C0485A
A2485A1880485A94C7FCA2485AA3127F5BA312FF90CBFCA41738A217784816707E17F06C
5E16015F16036C6C4A5A94C7FC001F150E6D141E000F5D6D5C6C6C495A6C6CEB03C0D801
FEEB0F8027007F807EC8FC6DB45A010F13E0010090C9FC373D74BA3B>I<0103B612FEEF
FFC018F0903B0007F8000FF84BEB03FCEF00FE020F157FF03F804B141F19C0021F150F19
E05D1807143F19F05DA2147FA292C8FCA25C180F5CA2130119E04A151FA2130319C04A15
3FA201071780187F4A1600A2010F16FEA24A4A5A60011F15034D5A4A5D4D5A013F4B5A17
3F4A4AC7FC17FC017FEC03F84C5A91C7EA1FC04949B45A007F90B548C8FCB712F016803C
397CB83F>I<0107B8FCA3903A000FF000034BEB007F183E141F181E5DA2143FA25D181C
147FA29238000380A24A130718004A91C7FC5E13015E4A133E167E49B512FEA25EECF800
0107147C163C4A1338A2010F147818E04A13701701011F16C016004A14031880013F1507
18004A5CA2017F151E173E91C8123C177C4915FC4C5A4914070001ED7FF0B8FCA25F3839
7BB838>I<0107B712FEA3903A000FF000074B1300187C021F153CA25DA2143FA25D1838
147FA292C8FCEE03804A130718004A91C7FCA201015CA24A131E163E010314FE91B5FC5E
A2903807F800167C4A1378A2130FA24A1370A2011F14F0A24A90C8FCA2133FA25CA2137F
A291CAFCA25BA25B487EB6FCA337397BB836>I<DB03FE130E92393FFF801E92B5EAE03C
913903FE01F0913A0FF000787CDA3FC0EB3CFC4AC7EA1FF802FE140FEB03FC4948140749
4815F049481403495A5C49C813E05B485A5B000317C0485AA2485A1880485A94C7FCA248
5AA3127F5BA312FF90CBFC0307B512E0A392390007FC00705A16075FA36C150F5FA36C6C
141FA2001F5E6D143F6C7E167F6C6C4A5A6C6CEB03EFD801FEEB07C73A007FC03F079027
3FFFFC03C7FC010F01F0C8FC01001380373D74BA40>I<0103B512F8A390390007F8005D
A2140FA25DA2141FA25DA2143FA25DA2147FA292C7FCA25CA25CA21301A25CA21303A25C
A21307A25CA2130FA25CA2131FA25CA2133FA25CA2137FA291C8FC497EB6FCA25C25397C
B820>73 D<0107B612F817FF1880903B000FF0003FE04BEB0FF0EF03F8141FEF01FC5DA2
023F15FEA25DA2147FEF03FC92C7FCA24A15F817074A15F0EF0FE01301EF1FC04AEC3F80
EFFE0001034A5AEE0FF091B612C04CC7FCD907F8C9FCA25CA2130FA25CA2131FA25CA213
3FA25CA2137FA291CAFCA25BA25B1201B512FCA337397BB838>80
D<0103B612F017FEEFFF80903B0007F8003FC04BEB0FF01707020FEC03F8EF01FC5DA202
1F15FEA25DA2143FEF03FC5DA2027FEC07F818F092C7120F18E04AEC1FC0EF3F004A14FE
EE01F80101EC0FE091B6128004FCC7FC9138FC003F0103EC0F80834A6D7E8301071403A2
5C83010F14075F5CA2011F140FA25CA2133F161F4AECE007A2017F160F180E91C7FC4902
0F131C007F01FE153CB5913807F078040313F0CAEAFFE0EF3F80383B7CB83D>82
D<92383FC00E913901FFF01C020713FC91391FC07E3C91393F001F7C027CEB0FF84A1307
49481303495A4948EB01F0A2495AA2011F15E091C7FCA34915C0A36E90C7FCA2806D7E14
FCECFF806D13F015FE6D6D7E6D14E0010080023F7F14079138007FFC150F15031501A215
00A2167C120EA3001E15FC5EA3003E4A5AA24B5AA2007F4A5A4B5A6D49C7FC6D133ED8F9
F013FC39F8FC03F839F07FFFE0D8E01F138026C003FCC8FC2F3D7ABA2F>I<0007B812E0
A25AD9F800EB001F01C049EB07C0485AD900011403121E001C5C003C1780140312380078
5C00701607140700F01700485CA2140FC792C7FC5DA2141FA25DA2143FA25DA2147FA292
C9FCA25CA25CA21301A25CA21303A25CA21307A25CA2130FA25CEB3FF0007FB512F8B6FC
A2333971B83B>I<B5D8F80FB590381FFFF06102F018E0D807FEC7D87FE0903803FE00D8
03F8DA3F806D5AF100F0A24F5A621903621907047F92C7FC190E16FF4B5DA2DB03BF5C7F
0001DA073F5CA2030E5D83DB1C1F495A180303385D4EC8FC157003F0140E15E0DA01C05C
A2DA03805CA2DA07005CA2020E5D17C14A5DEFC3805C027802C7C9FC14704A14CE13FE6C
6C4814DCA24A14F8A291C75B160F495D5F5B5F5B4992CAFCA249140E4C3B6FB853>87
D<14F8EB07FE90381F871C90383E03FE137CEBF801120148486C5A485A120FEBC001001F
5CA2EA3F801403007F5C1300A21407485C5AA2140F5D48ECC1C0A2141F15831680143F15
87007C017F1300ECFF076C485B9038038F8E391F0F079E3907FE03FC3901F000F0222677
A42A>97 D<133FEA1FFFA3C67E137EA313FE5BA312015BA312035BA31207EBE0F8EBE7FE
9038EF0F80390FFC07C013F89038F003E013E0D81FC013F0A21380A2123F1300A214075A
127EA2140F12FE4814E0A2141F15C05AEC3F80A215005C147E5C387801F8007C5B383C03
E0383E07C0381E1F80D80FFEC7FCEA01F01C3B77B926>I<147F903803FFC090380FC1E0
90381F0070017E13784913383901F801F83803F003120713E0120FD81FC013F091C7FC48
5AA2127F90C8FCA35A5AA45AA3153015381578007C14F0007EEB01E0003EEB03C0EC0F80
6CEB3E00380F81F83803FFE0C690C7FC1D2677A426>I<ED01F815FFA3150316F0A21507
A216E0A2150FA216C0A2151FA21680A2153FA202F81300EB07FE90381F877F90383E03FF
017C5BEBF80112013803F00048485B120FEBC001121F5DEA3F801403127F01005BA21407
5A485CA2140FA248ECC1C0A2141F15C3ED8380143F1587007C017F1300ECFF076C485B90
38038F8E391F0F079E3907FE03FC3901F000F0253B77B92A>I<147F903803FFC090380F
C1E090383F00F0017E13785B485A485A485A120F4913F8001F14F0383F8001EC07E0EC1F
80397F81FF00EBFFF891C7FC90C8FC5A5AA55AA21530007C14381578007E14F0003EEB01
E0EC03C06CEB0F806CEB3E00380781F83803FFE0C690C7FC1D2677A426>I<ED07C0ED1F
F0ED3E38ED7C3CEDF8FC15F9140115F1020313F8EDF0F0160014075DA4140F5DA4141F5D
010FB512C05B16809039003F800092C7FCA45C147EA414FE5CA413015CA413035CA41307
5CA4130F5CA3131F5CA391C8FC5B121CEA7E3EA2EAFE3C137C1378EAF8F01278EA3FC0EA
0F80264C82BA19>I<EC07C0EC3FF09138FC38E0903901F01FF0EB03E0903807C00FEB0F
80011F1307D93F0013E05B017E130F13FE4914C01201151F1203491480A2153F12074914
00A25DA249137EA215FEA25D00031301140314076C6C485A0000131FEB787BEB3FF39038
0FC3F0EB00031407A25DA2140F5D121C007E131F5D00FE49C7FC147E5C387801F8387C07
E0381FFF80D803FEC8FC24367CA426>I<EB03F0EA01FFA3EA00075CA3130F5CA3131F5C
A3133F91C8FCA35B90387E07F0EC1FFCEC783E9038FFE01F02C01380EC800F1400485A16
C05B49EB1F8012035BA2153F000715005BA25D000F147E5B15FE5D121FD98001131C15F8
163C003F01031338010013F0A216704814E0007E15F016E0EDE1C000FE903801E3804890
3800FF000038143C263B7BB92A>I<EB01C0EB07E014F0130F14E01307EB038090C7FCAB
13F0EA03FCEA071EEA0E1F121CA212385B1270A25BEAF07E12E013FEC65AA212015B1203
A25B12075BA2000F13E013C013C1001F13C01381A2EB83801303EB0700A2130E6C5AEA07
F8EA01E0143879B619>I<150E153F157FA3157E151C1500ABEC1F80EC7FC0ECF1F0EB01
C090380380F813071401130F130E131EEB1C03133C013813F0A2EB0007A215E0A2140FA2
15C0A2141FA21580A2143FA21500A25CA2147EA214FEA25CA21301A25CA213035C121C38
7E07E0A238FE0FC05C49C7FCEAF83EEA787CEA3FF0EA0FC0204883B619>I<EB03F0EA01
FFA3EA00075CA3130F5CA3131F5CA3133F91C8FCA35B017EEB0F80ED3FE015F09039FE01
C1F09038FC0387EC0707140E0001011C13E0EBF83891383003800270C7FC00035BEBF1C0
EBF38001FFC8FCEA07FC7FEBFFC0EBE7F8380FE1FCEBC07E147F80001F809039801F81C0
A21583003F013F138001001303A21507481500007E133EEC1E0E151E00FE6D5A48EB07F8
0038EB01E0243B7BB926>I<EB0FC0EA07FFA3EA001F1480A2133FA21400A25BA2137EA2
13FEA25BA21201A25BA21203A25BA21207A25BA2120FA25BA2121FA25BA2123FA290C7FC
A25AA2EA7E0EA212FE131EEAFC1CA2133C133812F81378EA7870EA7CE0121FEA0F80123B
79B915>I<D801E001FEEB07F03C07F803FF801FFC3C0E3C0F07C0783E3C1E3E3C03E1E0
1F261C1F78D9F3C013803C383FF001F7800F02E01400007801C013FE007018C002805B4A
4848EB1F80EAF07FD8E07E5CA200000207143F01FE1700495CA2030F5C0001177E495C18
FE031F5C120349DA8001131C18F8033F153C00070403133849020013F0A24B1570000F17
E049017E15F019E003FEECE1C0001FEE01E34949903800FF000007C70038143C3E2679A4
44>I<D801E013FE3A07F803FF803A0E3C0F07C03A1E3E3C03E0261C1F787F39383FF001
14E0007813C000708114804A485AEAF07FEAE07EA20000140701FE5C5BA2150F00015D5B
151F5E12034990383F8380160316070007027F130049137EA2160E000F147C49141E161C
5E001FEC3C7849EB1FE00007C7EA0780292679A42F>I<147F903803FFC090380FC1F090
381F00F8017E137C5B4848137E4848133E0007143F5B120F485AA2485A157F127F90C7FC
A215FF5A4814FEA2140115FC5AEC03F8A2EC07F015E0140F007C14C0007EEB1F80003EEB
3F00147E6C13F8380F83F03803FFC0C648C7FC202677A42A>I<9039078007C090391FE0
3FF090393CF0787C903938F8E03E9038787FC00170497EECFF00D9F0FE148013E05CEA01
E113C15CA2D80003143FA25CA20107147FA24A1400A2010F5C5E5C4B5A131F5EEC80035E
013F495A6E485A5E6E48C7FC017F133EEC70FC90387E3FF0EC0F8001FEC9FCA25BA21201
A25BA21203A25B1207B512C0A3293580A42A>I<3903C003F0390FF01FFC391E783C0F38
1C7C703A3C3EE03F8038383FC0EB7F800078150000701300151CD8F07E90C7FCEAE0FE5B
A2120012015BA312035BA312075BA3120F5BA3121F5BA3123F90C9FC120E212679A423>
114 D<14FE903807FF8090380F83C090383E00E04913F00178137001F813F00001130313
F0A215E00003EB01C06DC7FC7FEBFFC06C13F814FE6C7F6D13807F010F13C01300143F14
1F140F123E127E00FE1480A348EB1F0012E06C133E00705B6C5B381E03E06CB45AD801FE
C7FC1C267AA422>I<EB0380EB07C0130FA4131F1480A3133F1400A35B137E007FB5FCA2
B6FC3800FC00A312015BA312035BA312075BA3120F5BA3121FEB801CA2143C003F1338EB
0078147014F014E0EB01C0EA3E03381F0780380F0F00EA07FCEA01F0183579B31C>I<13
F8D803FEEB01C0D8078FEB03E0390E0F8007121E121C0038140F131F007815C01270013F
131F00F0130000E015805BD8007E133FA201FE14005B5D120149137EA215FE120349EBFC
0EA20201131E161C15F813E0163CD9F003133814070001ECF07091381EF8F03A00F83C78
E090393FF03FC090390FC00F00272679A42D>I<01F0130ED803FC133FD8071EEB7F80EA
0E1F121C123C0038143F49131F0070140FA25BD8F07E140000E08013FEC6485B150E1201
5B151E0003141C5BA2153C000714385B5DA35DA24A5A140300035C6D48C7FC0001130E38
00F83CEB7FF8EB0FC0212679A426>I<01F01507D803FC903903801F80D8071E903907C0
3FC0D80E1F130F121C123C0038021F131F49EC800F00701607A249133FD8F07E168000E0
ED000313FEC64849130718000001147E5B03FE5B0003160E495BA2171E00070101141C01
E05B173C1738A217781770020314F05F0003010713016D486C485A000190391E7C078028
00FC3C3E0FC7FC90393FF81FFE90390FE003F0322679A437>I<903907E007C090391FF8
1FF89039787C383C9038F03E703A01E01EE0FE3803C01F018013C0D8070014FC48148000
0E1570023F1300001E91C7FC121CA2C75AA2147EA214FEA25CA21301A24A1370A2010314
F016E0001C5B007E1401010714C000FEEC0380010F1307010EEB0F0039781CF81E903838
7C3C393FF03FF03907C00FC027267CA427>I<13F0D803FCEB01C0D8071EEB03E0D80E1F
1307121C123C0038140F4914C01270A249131FD8F07E148012E013FEC648133F16001201
5B5D0003147E5BA215FE00075C5BA214015DA314035D14070003130FEBF01F3901F87FE0
38007FF7EB1FC7EB000F5DA2141F003F5C48133F92C7FC147E147C007E13FC387001F8EB
03E06C485A383C1F80D80FFEC8FCEA03F0233679A428>I<903903C0038090380FF007D9
1FF81300496C5A017F130E9038FFFE1E9038F83FFC3901F007F849C65A495B1401C7485A
4A5A4AC7FC141E5C5C5C495A495A495A49C8FC131E5B49131C5B4848133C484813384913
78000714F8390FF801F0391FFF07E0383E1FFFD83C0F5B00785CD8700790C7FC38F003FC
38E000F021267BA422>I E /Ft 30 122 df<ED0FFF4AB512C0020F14F0027F80903A01
FFF803FC499038C000FE010FEB00034948497E49485B5C495A4C138001FF6E13005CA370
5AEE01F893C8FCA74BB51280B9FCA5C69038E00003B3B0007FD9FFC1B6FCA538467EC53E
>12 D<EC03C01407141F147FEB03FF133FB6FCA413C3EA0003B3B3ADB712FCA5264177C0
38>49 D<ECFFE0010F13FE013F6D7E90B612E0000315F82607FC0313FE3A0FE0007FFFD8
1F806D138048C7000F13C0488001C015E001F07F00FF6E13F07F17F881A46C5A6C5A6C5A
C9FC17F05DA217E05D17C04B13804B1300A2ED1FFC4B5A5E4B5A4B5A4A90C7FC4A5A4A5A
EC0FF04A5AEC3F804AC7127814FE495A494814F8D907E014F0495A495A49C8FC017C1401
49140348B7FC4816E05A5A5A5A5AB8FC17C0A42D417BC038>I<ECFFF0010713FF011F14
C0017F14F049C66C7ED803F8EB3FFED807E06D7E81D80FF86D138013FE001F16C07FA66C
5A6C4815806C485BC814005D5E4B5A4B5A4B5A4A5B020F1380902607FFFEC7FC15F815FF
16C090C713F0ED3FFCED0FFEEEFF80816F13C017E0A26F13F0A217F8A3EA0FC0EA3FF048
7EA2487EA217F0A25D17E06C5A494913C05BD83F80491380D81FF0491300D80FFEEBFFFE
6CB612F800015D6C6C14C0011F49C7FC010113E02D427BC038>I<163FA25E5E5D5DA25D
5D5D5DA25D92B5FCEC01F7EC03E7140715C7EC0F87EC1F07143E147E147C14F8EB01F0EB
03E0130714C0EB0F80EB1F00133E5BA25B485A485A485A120F5B48C7FC123E5A12FCB912
80A5C8000F90C7FCAC027FB61280A531417DC038>I<0007150301E0143F01FFEB07FF91
B6FC5E5E5E5E5E16804BC7FC5D15E092C8FC01C0C9FCAAEC3FF001C1B5FC01C714C001DF
14F09039FFE03FFC9138000FFE01FC6D7E01F06D13804915C0497F6C4815E0C8FC6F13F0
A317F8A4EA0F80EA3FE0487E12FF7FA317F05B5D6C4815E05B007EC74813C0123E003F4A
1380D81FC0491300D80FF0495AD807FEEBFFFC6CB612F0C65D013F1480010F01FCC7FC01
0113C02D427BC038>I<EE1F80A24C7EA24C7EA34C7EA24B7FA34B7FA24B7FA34B7F169F
031F80161F82033F80ED3E07037E80157C8203FC804B7E02018115F0820203814B137F02
07815D173F020F814B7F021F8292C77EA24A82023E80027E82027FB7FCA291B87EA24983
02F0C8FCA20103834A157F0107834A153FA249488284011F8491C97E4984133E017E82B6
020FB612F0A54C457CC455>65 D<DCFFF01470031F01FF14F04AB6EAE0010207EDF80302
3FEDFE0791B539E001FF0F4949C7EA3F9F010701F0EC0FFF4901C0804990C87E49488149
48814948167F4849163F4849161F5A4A160F485B19074890CAFC19035A5BA2007F1801A3
4994C7FC12FFAE127F7F1AF0A2123FA27F6C18011AE06C7F19036C6D17C06E16077E6C6D
EE0F806C6DEE1F006D6C5E6D6C167E6D6C6C5D6D6D4A5A6D01F0EC07F0010101FEEC1FE0
6D903AFFF001FF80023F90B6C7FC020715FC020115F0DA001F1480030001F8C8FC44467A
C451>67 D<B9FC18F018FE727E19E026003FFEC7001F13F805017F9438003FFF060F7F72
7F727F727F84737E737EA2737EA2737EA21B80A2851BC0A51BE0AD1BC0A51B8061A21B00
6162193F624F5A19FF624E5B06075B4E5B063F90C7FC4DB45A050F13F8BA5A19C04EC8FC
18F095C9FC4B447CC356>I<DCFFF01470031F01FF14F04AB6EAE0010207EDF803023FED
FE0791B539E001FF0F4949C7EA3F9F010701F0EC0FFF4901C0804990C87E494881494881
4948167F4849163F4849161F5A4A160F485B19074890CAFC19035A5BA2007F1801A34994
C8FC12FFAD057FB612F0127F7FA3003FDC0001EBF000A27F7EA26C7FA26C7F807E6C7F6C
7F6D7E6D6C5D6D6C7E6D6D5C6D01F05C010101FE143F6D903AFFF001FF9F023F90B6120F
0207EDFC030201EDF000DA001F02C01330030001FCC9FC4C467AC458>71
D<B712E0A5D8001F90C7FCB3B3B3A4B712E0A523447DC32A>73 D<B812F8EFFFC018F818
FE727ED8001F90C7003F13E005037F05007F727E727E727EA28684A286A762A24E90C7FC
A24E5A61187F943801FFF005075B053F138092B7C8FC18F818E018F892C77FEF3FFF050F
7F717F717FA2717FA2717FA785A61B0F85A2187F73131F72141EB700E06DEB803E72EBE0
FC72EBFFF8060114F0726C13E0CC0007138050457DC354>82 D<B600FE017FB691B512FE
A526007FFCC8D83FFEC9EA7C006E82013F701778807415F86D705F6F7014016D705FA26F
7014036D64814E6D14076D646F70140F6D041E94C7FCA26F023E6D5C6DDC3C7F151E8102
7F037C6D5CF0783F6F70147C023F4B6C1578A26F01016F13F86E4B6C5D16806E02036F48
5A4E7E04C0EEE0036E4A486C5DA2DCE00FEDF0076E4B6C5D16F06E4A6F48C8FC051E7F04
F8705A6E4A027F131EA2DCFC7CEDFE3E037F0178023F133C04FE16FF033F01F85E4D8004
FF17F86F496E5BA36F496E5BA26F604D80A26F90C86C5BA36F486F90C9FCA26F48167EA3
0478163C6F457EC374>87 D<903801FFE0011F13FE017F6D7E48B612E03A03FE007FF848
48EB1FFC6D6D7E486C6D7EA26F7FA36F7F6C5A6C5AEA00F090C7FCA40203B5FC91B6FC13
07013F13F19038FFFC01000313E0000F1380381FFE00485A5B127F5B12FF5BA35DA26D5B
6C6C5B4B13F0D83FFE013EEBFFC03A1FFF80FC7F0007EBFFF86CECE01FC66CEB8007D90F
FCC9FC322F7DAD36>97 D<EC3FFC49B512C0010F14F0013F14FC90397FF003FE9039FFC0
01FF0003495A48494813805B120F485AA2485A6F1300007F6E5AED00784991C7FCA212FF
AC6C7EA3123F6DEC03C0A26C6C1407000F16806D140F6C6DEB1F006C6D133E6C01F05B3A
007FFC03F86DB55A010F14C0010391C7FC9038003FF82A2F7CAD32>99
D<EE03FEED07FFA5ED001F160FB1EC3FE0903803FFFC010FEBFF8F013F14CF9039FFF807
FF48EBC00148903880007F4890C7123F4848141F49140F121F485AA3127F5BA212FFAC12
7FA37F123FA26C6C141FA26C6C143F0007157F6C6C91B5FC6CD9C00314FC6C9038F01FEF
6DB5128F011FEBFE0F010713F89026007FC0EBF80036467CC43E>I<EC3FF80103B57E01
0F14E0013F8090397FF83FF89039FFC007FC48496C7E48496C7E48486D1380485A001FED
7FC05B003FED3FE0A2127F5B17F0161F12FFA290B7FCA401F0C9FCA5127FA27FA2123F17
F06C7E16016C6C15E06C6C14036C6DEB07C06C6DEB0F806C01F0EB3F0090397FFE01FE01
1FB55A010714F0010114C09026001FFEC7FC2C2F7DAD33>I<EDFF80020F13E0027F13F0
49B512F849EB8FFC90390FFE0FFE90381FFC1F14F8133FEB7FF0A2ED0FFCEBFFE0ED03F0
ED00C01600ABB612F8A5C601E0C7FCB3B0007FEBFFE0A527467DC522>I<EB7FC0B5FCA5
12037EB1ED07FE92383FFF8092B512E002C114F89139C7F03FFC9138CF801F9139DF000F
FE14DE14FC4A6D7E5CA25CA35CB3A7B60083B512FEA537457CC43E>104
D<137C48B4FC4813804813C0A24813E0A56C13C0A26C13806C1300EA007C90C7FCAAEB7F
C0EA7FFFA512037EB3AFB6FCA518467CC520>I<EB7FC0B5FCA512037EB3B3B3A3B61280
A519457CC420>108 D<90277F8007FEEC0FFCB590263FFFC090387FFF8092B5D8F001B5
12E002816E4880913D87F01FFC0FE03FF8913D8FC00FFE1F801FFC0003D99F009026FF3E
007F6C019E6D013C130F02BC5D02F86D496D7EA24A5D4A5DA34A5DB3A7B60081B60003B5
12FEA5572D7CAC5E>I<90397F8007FEB590383FFF8092B512E0028114F8913987F03FFC
91388F801F000390399F000FFE6C139E14BC02F86D7E5CA25CA35CB3A7B60083B512FEA5
372D7CAC3E>I<EC1FFC49B512C0010714F0011F14FC90397FF80FFF9026FFC0017F4849
6C7F4848C7EA3FE000078248486E7E49140F001F82A2003F82491407007F82A400FF1780
AA007F1700A46C6C4A5AA2001F5E6D141F000F5E6C6C4A5AA26C6C6CEBFFE06C6D485B27
007FF80F90C7FC6DB55A010F14F8010114C09026001FFCC8FC312F7DAD38>I<90397FC0
0FF8B590B57E02C314E002CF14F89139DFC03FFC9139FF001FFE000301FCEB07FF6C496D
13804A15C04A6D13E05C7013F0A2EF7FF8A4EF3FFCACEF7FF8A318F017FFA24C13E06E15
C06E5B6E4913806E4913006E495A9139DFC07FFC02CFB512F002C314C002C091C7FCED1F
F092C9FCADB67EA536407DAC3E>I<90387F807FB53881FFE0028313F0028F13F8ED8FFC
91389F1FFE000313BE6C13BC14F8A214F0ED0FFC9138E007F8ED01E092C7FCA35CB3A5B6
12E0A5272D7DAC2E>114 D<90391FFC038090B51287000314FF120F381FF003383FC000
49133F48C7121F127E00FE140FA215077EA27F01E090C7FC13FE387FFFF014FF6C14C015
F06C14FC6C800003806C15806C7E010F14C0EB003F020313E0140000F0143FA26C141F15
0FA27EA26C15C06C141FA26DEB3F8001E0EB7F009038F803FE90B55A00FC5CD8F03F13E0
26E007FEC7FC232F7CAD2C>I<EB01E0A51303A41307A2130FA2131FA2133F137F13FF12
03000F90B51280B7FCA4C601E0C7FCB3A3ED01E0A9150302F013C0137F150790393FF80F
8090391FFC1F006DB5FC6D13FC01015B9038003FE023407EBE2C>I<D97FC049B4FCB501
03B5FCA50003EC000F6C81B3A85EA25EA25E7E6E491380017FD901F713FE9138F807E76D
B512C7010F1407010313FE9026007FF0EBFC00372E7CAC3E>I<B6903803FFFCA5000101
E09038003E006C163C80017F5D8017F8013F5D6E1301011F5D6E1303010F5D6E13076D5D
ED800F6D92C7FC15C05E6DEBE01E163E6D143CEDF07C027F1378EDF8F8023F5B15FD021F
5B15FF6E5BA36E5BA26E90C8FCA26E5AA26E5AA21578A215F85D14015D001F1303D83F80
5B387FC007D8FFE05B140F92C9FC5C143E495A387FC1F8EB07F06CB45A6C5B000790CAFC
EA01FC36407EAB3B>121 D E /Fu 29 122 df<120FEA3FC0EA7FE0EAFFF0A6EA7FE0EA
3FC0EA0F000C0C7A8B19>46 D<ED1F80A24B7EA24B7EA34B7EA24A7FA34A7FA24A7F15CF
A2020F7F1587021F801503023F80EC3E01A2027E80EC7C0002FC804A137FA20101814A13
3F0103814A131FA249B67EA24981A290271F8000077F91C77EA24982013E80017E82017C
80A201FC8249157FB500F0013FB512F0A43C347DB343>65 D<B712FCEEFFC017F817FEC6
9039E0003FFF040313C004007F717EEF1FF8717E841707848319808319C0A419E0AB19C0
A419805FA219004D5A170F604D5A4D5AEFFFE004035B041F5BB848C7FC17F817C004FCC8
FC3B337DB244>68 D<B812FEA4C69038E0000FEE01FF82838383A283A3DB01E013801707
A4030390C7FCA21507151F91B5FCA4ECE01F1507150318F01501A2EF01E0A392C7FCA217
03A2EF07C0A2170F171F173F17FF1607B91280A434337DB23A>I<B812FCA4C69038E000
1FEE03FE16011600177E173EA2171EA3923803C01F170FA403071300A2150F153F91B5FC
A4ECE03F150F1507A21503A592C8FCABB612F8A430337DB238>I<B612E0A4C6EBE000B3
B3A7B612E0A41B337DB221>73 D<B612F8A4C601E0C8FCB3A81778A417F817F0A31601A2
1603A21607160F161F167F923803FFE0B8FCA42D337DB235>76 D<B712F8EEFF8017E017
F8C69039E0007FFCEE0FFE707E701380A27013C0A218E0A718C0A24C1380A24C13004C5A
EE7FFC91B612F017C04CC7FC02E0C9FCB3B612E0A433337DB23C>80
D<B712E016FEEEFFC017F0C6D9E00013FCEE1FFEEE07FF707FA2707FA284A660A24C5B95
C7FC4C5AEE1FFCEEFFF891B612C094C8FC83DAE0037F03007FEE3FF083707EA2707EA583
A4193CA2188082F0C07CB6D8E003147870EBE1F070EBFFE0053F13C0CA000313803E347D
B242>82 D<003FB812F8A4D9F003EB801FD87F80ED03FC01001501007E1600007C177CA2
0078173CA400F8173E48171EA4C71600B3A9011FB612F0A437327DB13E>84
D<B66CB639800FFFFCA400019026C0000101C0C7EA1F001B1E6E6F143E6C6F163CA26E6E
6C147C017F19786E4A6C14F8013F61A26E496D1301011F616E497F010F03CF4A5AA26E01
076D13076D03875DA29226800F03EB800F6D96C7FCDBC01F6E5A6DDA1E01141EA2DBE03E
ECE03E6DDA3C00143CDBF07C14F0027F0178017F5BA2DBF8F8ECF8F8023F49013F5BA2DB
FDE0EB1FFD021F5F03FF15FF6E496D5BA36E496D5BA26E90C76C90C8FCA36E486E5AA24B
140002005EA20378157856347EB25B>87 D<EB7FFE0003B512E04814F8390FF00FFC391F
F803FF806E138016C0157F6C5A6C5AEA0180C8FCEC7FFF010FB5FC90B6FC0003EBF07F00
0F1300EA1FF8485A485A485A5BA315FF7F007F5B6D4813E03A3FF80FBFFF000FB5121F00
03EBFC0F39007FE00728217EA02B>97 D<EA01FC12FFA4120F1207ADEC07FC91387FFF80
01FDB512E09039FFF00FF89138C007FC91380003FE496D7E496D1380A217C0167FA217E0
A917C0A216FF1780A26D4913006D495A9138C007FC9039F3F01FF801E1B512E0D9C07F13
809026800FF8C7FC2B347EB331>I<903807FF80013F13F090B512FC3903FE01FE484848
7EEA0FF8EA1FF0EA3FE0A2007F6D5A496C5A153000FF91C7FCA9127F7FA2003FEC07807F
6C6C130F000FEC1F00D807FE133E3903FF80FCC6EBFFF8013F13E0010790C7FC21217DA0
27>I<ED01FC15FFA4150F1507ADEB07FE90383FFFC790B512F70003EB01FF3907FC003F
4848131F4848130F48481307A2127F5BA212FFA9127FA27F123F150F6C6C131F6C6C133F
6C6C497E2603FE03B512E0C6B512E7013F1387903807FC072B347DB331>I<903803FF80
013F13F090B512FC48EB03FE3907FC007F4848EB3F804848EB1FC05B003FEC0FE0127F5B
16F012FF150790B6FCA301C0C8FCA4127F7F123F16F06C7E000F14016C6CEB03E0D803FE
EB0FC03A01FF807F806C6CB51200011F13FC010313E024217EA029>I<EC3FE0903803FF
F8010F13FC90383FF1FE90387FC3FFEBFF83481303A2EA03FEEC01FEA2EC00781500A7B5
12FEA4D803FEC7FCB3A7387FFFF8A420347EB31B>I<16F890390FFC07FE90387FFF9F48
B6127F3907FC0FFC380FF003001F14FED9E001133E003FECFF1C1600A6001F5CEBF00300
0F5C3907FC0FF890B512E0486C1380D90FFCC7FC48C9FCA37F7F90B512F015FE6CECFF80
16E06C15F06C15F84815FC121F393F80001F48C7EA03FE481401481400A46C14016C6CEB
03FC6C6CEB07F86C6CEB0FF0D80FFCEB7FE00003B61280C6ECFE00010F13E028327EA12C
>I<EA01FC12FFA4120F1207ADEC03FF020F13C0023F13F09138FC0FF89039FDE007FCEB
FFC04A6C7E1400A25BA25BB2B539E07FFFF0A42C347DB331>I<EA03F0487E487E487EA6
6C5A6C5A6C5AC8FCA8EA01FC12FFA4120F1207B3A5B512C0A412357DB418>I<EA01FC12
FFA4120F1207B3B3A6B512E0A413347DB318>108 D<2703F803FEEB03FE00FF903B1FFF
C01FFFC0027FD9E07F7F913BF81FF0F81FF0903CF9E00FF9E00FF8260FFBC0EBFBC06CB4
486CB4486C7E02001400495CA3495CB2B500E0B500E0B512E0A443217CA04A>I<3901F8
03FF00FF010F13C0023F13F09138FC0FF89039F9E007FC380FFBC06CB4486C7E1400A25B
A25BB2B539E07FFFF0A42C217DA031>I<903803FF80011F13F090B512FE48EB01FF3A07
FC007FC0D80FF0EB1FE0001F15F049130F003F15F8491307007F15FCA300FF15FEA8007F
15FCA26D130F003F15F8001F15F06D131F6C6CEB3FE06C6CEB7FC03A01FF01FF006CEBFF
FE013F13F80103138027217EA02C>I<3901F81F8000FFEB7FF0ECFFF89038F9E3FC9038
FBC7FE380FFF876C1307A213FEEC03FCEC01F8EC0060491300B1B512F0A41F217EA024>
114 D<9038FFE1C0000713FF5A383F803F387E000F14075A14037EA26C6CC7FC13FCEBFF
E06C13FC806CEBFF80000F14C06C14E0C6FC010F13F0EB007F140F00F0130714037EA26C
14E06C13076CEB0FC09038C01F8090B5120000F913FC38E03FE01C217DA023>I<133CA5
137CA313FCA21201A212031207001FB51280B6FCA3D807FCC7FCB0EC03C0A79038FE0780
12033901FF0F006C13FEEB3FFCEB0FF01A2F7EAE22>I<D801FC14FE00FF147FA4000F14
0700071403B21507A2150F151F6C6C497E6C6C01FB13F06CEBFFF3013F13C3903807FE03
2C217DA031>I<B539C007FFC0A4D807FEC7EAF80000035D6D13016C5D14806C4A5AA2EC
C007017F5CECE00F013F91C7FC6E5A011F131EECF83E010F133CECFC7C01071378ECFEF8
01035B14FF6D5BA26D5BA26E5AA26EC8FCA2141EA25CA2147C003E1378007F13F8486C5A
1381EB83E0EB87C0495AD87F3FC9FCEA3FFEEA1FF8EA07E02A307EA02F>121
D E /Fv 22 120 df<007FB512F8B612FCA46C14F81E067C9927>45
D<121EEA7F80A2EAFFC0A4EA7F80A2EA1E000A0A728927>I<1538157C15FCA2140115F8
140315F0140715E0140F15C0141F1580143F1500A25C147E14FE5C13015C13035C13075C
130F5CA2131F5C133F91C7FC5B137E13FE5B12015B12035BA212075B120F5B121F5B123F
90C8FC5A127E12FE5AA25A12781E3A7CB327>I<121EEA7F80A2EAFFC0A4EA7F80A2EA1E
00C7FCAC121EEA7F80A2EAFFC0A4EA7F80A2EA1E000A20729F27>58
D<3803FFC0000F13F04813FC4813FF811380EC1FC0381F000F000480C71207A2EB0FFF13
7F0003B5FC120F5A383FFC07EA7FC0130012FE5AA46C130F007F131FEBC0FF6CB612806C
15C07E000313F1C69038807F8022207C9F27>97 D<EA7FE0487EA3127F1203A914FF01F3
13C090B512F08181EC81FE49C67E49EB3F8049131F16C049130FA216E01507A6150F16C0
7F151F6DEB3F80157F6DEBFF009038FF83FEECFFFC5D5D01F313C02601E0FEC7FC232E7F
AD27>I<EB0FFF017F13C048B512E04814F05A380FF807EA1FE0393FC003E09038800080
48C8FC127EA212FE5AA67E127EA2007F14F0393F8001F813C0381FE003390FF80FF06CB5
FC6C14E06C14C06C6C1300EB0FF81D207B9F27>I<EC3FF04A7EA3143F1401A9EB0FE1EB
7FFD48B5FC5A5A380FF83F381FE00F383FC007EB8003EA7F00007E1301A212FE5AA67E00
7E1303A2127F6C1307EB800F381FE01F380FF03F6CB612C06C15E06C13FD38007FF9D91F
E013C0232E7EAD27>I<EB0FF8EB3FFE90B51280000314C04814E0390FFC0FF0391FE003
F8EBC001D83F8013FC48C7FC127E157E12FEB612FEA415FC00FCC8FC7E127E127F6C143C
6D137E6C7E01F013FE390FFC07FC6CB5FC000114F86C14F0013F13C0903807FE001F207D
9F27>I<EC1FF0ECFFF84913FC4913FE5BEB0FF014C0011F137CEC8000A6007FB512F0B6
12F8A36C14F039001F8000B3A4003FB512C04814E0A36C14C01F2E7EAD27>I<153F9039
1FC0FF80D97FF313C048B612E05A4814EF390FF07F873A1FC01FC3C0EDC000EB800F4848
6C7EA66C6C485AEBC01FA2390FF07F8090B5C7FC5C485BEB7FF0EB1FC090C9FCA27F6CB5
FC15E015F84814FE4880EB8001007EC7EA3F80007C140F00FC15C0481407A46C140F007C
1580007F143F6C6CEB7F009038F807FF6CB55A000714F86C5CC614C0D90FFCC7FC23337E
A027>I<EA7FE0487EA3127F1203A9147F9038F1FFC001F713F090B5FC8114C1EC01FCEB
FE005B5BA25BB03A7FFF83FFE0B500C713F0A36C018313E0242E7FAD27>I<130F497E49
7EA46D5A6DC7FC90C8FCA7383FFF80487FA37EEA000FB3A4007FB512F0B6FC15F815F07E
1D2F7BAE27>I<387FFF80B57EA37EEA000FB3B2007FB512F8B612FCA36C14F81E2E7CAD
27>108 D<397F07C01F3AFF9FF07FC09039FFF9FFE091B57E7E3A0FFC7FF1F89038F03F
C001E0138001C01300A3EB803EB03A7FF0FFC3FF486C01E3138001F913E701F813E36C48
01C313002920819F27>I<387FE07F39FFF1FFC001F713F090B5FC6C80000313C1EC01FC
EBFE005B5BA25BB03A7FFF83FFE0B500C713F0A36C018313E024207F9F27>I<387FE0FF
D8FFF313C090B512F0816C800003EB81FE49C67E49EB3F8049131F16C049130FA216E015
07A6150F16C07F151F6DEB3F80157F6DEBFF009038FF83FEECFFFC5D5D01F313C0D9F0FE
C7FC91C8FCAC387FFF80B57EA36C5B23317F9F27>112 D<397FFC03FC39FFFE0FFF023F
13804A13C0007F90B5FC39007FFE1F14F89138F00F809138E002004AC7FC5CA291C8FCA2
137EAD007FB57EB67EA36C5C22207E9F27>114 D<133C137EA8007FB512F0B612F8A36C
14F0D8007EC7FCAE1518157EA415FE6D13FC1483ECFFF86D13F06D13E0010313C0010013
001F297EA827>116 D<397FE01FF8486C487EA3007F131F00031300B21401A21403EBFC
0F6CB612E016F07EEB3FFE90390FF87FE024207F9F27>I<3A7FFC0FFF80486C4813C0A3
6C486C13803A07C000F800EBE00100035CA2EBF00300015CA2EBF80700005CA390387C0F
80A36D48C7FCA3EB3F3FEB1F3EA214FE6D5AA36D5AA26D5A22207E9F27>I<3A7FFE07FF
E000FF15F06D5A497E007F15E03A0F80001F00A36D5B0007143EA414F0EBC1F83903E3FC
7CA4EBE79EA200011478A301F713F8A2EBFF0F6C5CA3EBFE0790387C03E024207F9F27>
I E /Fw 78 124 df<EC1FE0ECFFFC903803F01E90390FC00780EB1F8090393F000FC001
7E131F5BA2485AED0F8092C7FCA9ED0FC0B7FCA33901F8001F150FB3A6486CEB1FE0267F
FFC1B5FCA328357FB42B>12 D<DA1FE013FF9126FFFC0713E0903B03F01E1F80F0903B0F
C0077E003CD91F805B90273F001FF8137E017E4A13FE495CA248485C030F147C95C7FCA9
187EB912FEA33B01F8000FC000187EB3A6486C496C13FF297FFFC1FFFE0F13F8A33D357F
B440>14 D<EA07E012FFA3120F1207B3A6EA0FF0B5FCA310217EA015>16
D<137813FCA212011203EA07F813E0EA0FC0EA1F801300123C5A5A12400E0E71B326>19
D<147CEB01FEEB07C790380F8380EB1F0181EB3E00A2137EA2137C137EA214015D140392
C9FC5C140E6D5A1418143802F090380FFFF05C6D5A04011300EE00FC6D6C1470011F1560
013F15E0D977F0495AD9E3F85CD801C31403260381FC91C7FC00075D48C66C130E486D13
0C486D131C003E6D6C5A007EECC03091381FE07000FE010F5B6F5AEC07F96EB45A6C6D90
C712306E5A157F6C6C6D6C13604B6C13E03A3FC001EFE03C1FE003C7F803C03C0FF01F83
FE0F802707FFFE00B51200000101F8EB3FFE26003FC0EB07F034387DB53C>38
D<123C127EB4FCA21380A2127F123D1201A412031300A25A1206120E120C121C5A5A1260
09177AB315>I<14C01301EB0380EB0F00130E5B133C5B5BA2485A485AA212075B120F90
C7FC5AA2121E123EA3123C127CA55AB0127CA5123C123EA3121E121FA27E7F12077F1203
A26C7E6C7EA213787F131C7F130FEB0380EB01C01300124A79B71E>I<12C07E1270123C
121C7E120F6C7E6C7EA26C7E6C7EA27F1378137C133C133EA2131E131FA37F1480A5EB07
C0B0EB0F80A514005BA3131E133EA2133C137C137813F85BA2485A485AA2485A48C7FC12
0E5A123C12705A5A124A7CB71E>I<156015F0B3A4007FB812C0B912E0A26C17C0C800F0
C8FCB3A4156033327CAB3C>43 D<123C127EB4FCA21380A2127F123D1201A412031300A2
5A1206120E120C121C5A5A126009177A8715>I<B512F0A514057F921A>I<123C127E12FF
A4127E123C08087A8715>I<EB0FE0EB7FFCEBF83E3903E00F803907C007C0EB8003000F
14E0391F0001F0A24814F8A2003E1300007E14FCA500FE14FEB2007E14FCA56CEB01F8A3
6C14F0A2390F8003E03907C007C0A23903E00F803900F83E00EB7FFCEB0FE01F347DB126
>48 D<13075B5B137FEA07FFB5FC13BFEAF83F1200B3B3A2497E007FB51280A319327AB1
26>I<EB3FC0EBFFF0000313FC380F80FF391E007F80001CEB3FC048EB1FE048130F15F0
0060130712FC6C14F87E1403A3007E1307123CC7FC15F0A2140F15E0EC1FC0A2EC3F8015
00147E5C495A5C495A495A495A49C7FC133E133C4913185B485A48481330485A48C7FC00
1C1470001FB512F05A5AB612E0A31D327CB126>I<EB1FE0EBFFFC4813FF3907E03F8039
0F001FC0001EEB0FE0001CEB07F0123F018013F8140313C01380A2381F0007C7FC15F0A2
EC0FE015C0141FEC3F80EC7E00EB01F8EB7FE014FCEB003FEC1FC0EC0FE0EC07F015F814
0315FC140115FEA3127EB4FCA415FC48130312780070EB07F86C14F0003C130F001FEB1F
E0390FE03F800003B51200C613FCEB1FE01F347DB126>I<EC01C0A214031407A2140F14
1FA2143F147F146F14CF1301EB038F140F1307130E130C131C13381330137013E013C0EA
0180120313001206120E120C5A123812305A12E0B71280A3C7380FC000A94A7E0107B512
80A321337EB226>I<000C14C0380FC00F90B5128015005C5C14F014C0D80C18C7FC90C8
FCA9EB0FC0EB7FF8EBF07C380FC03F9038001F80EC0FC0120E000CEB07E0A2C713F01403
A215F8A41218127E12FEA315F0140712F8006014E01270EC0FC06C131F003C14806CEB7F
00380F80FE3807FFF8000113E038003F801D347CB126>I<14FE903807FF80011F13E090
383F00F0017C13703901F801F8EBF003EA03E01207EA0FC0EC01F04848C7FCA248C8FCA3
5A127EEB07F0EB1FFC38FE381F9038700F809038E007C039FFC003E0018013F0EC01F813
0015FC1400A24814FEA5127EA4127F6C14FCA26C1301018013F8000F14F0EBC0030007EB
07E03903E00FC03901F81F806CB51200EB3FFCEB0FE01F347DB126>I<1230123C003FB6
FCA34814FEA215FC0070C7123800601430157015E04814C01401EC0380C7EA0700140614
0E5C141814385CA25CA2495A1303A3495AA2130FA3131F91C7FCA25BA55BA9131C20347C
B126>I<EB0FE0EB7FFC90B5FC3903F01F803907C007C0390F0003E0000EEB01F0001E13
00001C14F8003C1478A3123EA2003F14F86D13F0EBC001D81FF013E09038F803C0390FFE
07803907FF0F006C13DE6C13F87EEB3FFE8001F713C0D803E313E0D8078013F0390F007F
F8001E131F003EEB07FC003C1303481301EC007E12F848143EA2151EA37E153C1278007C
14787E6C14F0390F8003E03907F01FC00001B5120038007FFCEB1FE01F347DB126>I<EB
0FE0EB7FF8EBFFFE3803F83F3907E00F80390FC007C0D81F8013E0EC03F0EA3F0048EB01
F8127EA200FE14FC1400A415FEA5007E1301A2127F7E1403EA1F80000F13073807C00E38
03E01C3801F03838007FF090381FC0FC90C7FC1401A215F8A215F01403001F14E0383F80
0715C0140FEC1F809038003F00001C137E381F01FC380FFFF0000313C0C690C7FC1F347D
B126>I<123C127E12FFA4127E123C1200B0123C127E12FFA4127E123C08207A9F15>I<12
3C127E12FFA4127E123C1200B0123C127E12FE12FFA3127F123F1203A412071206A3120E
120C121C1238123012701260082F7A9F15>I<007FB812C0B912E0A26C17C0CCFCAC007F
B812C0B912E0A26C17C033147C9C3C>61 D<15E0A34A7EA24A7EA34A7EA3EC0DFE140CA2
EC187FA34A6C7EA202707FEC601FA202E07FECC00FA2D901807F1507A249486C7EA30106
6D7EA2010E80010FB5FCA249800118C77EA24981163FA2496E7EA3496E7EA20001821607
487ED81FF04A7ED8FFFE49B512E0A333367DB53A>65 D<B7FC16E016F83A03FC0003FE00
01EC00FFEE7F80EE3FC0161F17E0160F17F0A617E0161F17C0EE3F80EE7F0016FEED03FC
90B612F05E9039FC0007FCED00FEEE3F80EE1FC0EE0FE017F0160717F8160317FCA617F8
1607A2EE0FF0EE1FE0163FEE7FC00003913803FF00B75A16F816C02E337DB236>I<DA03
FE130C91393FFF801C91B512E0903A03FE01F83C903A0FF0003C7CD91FC0EB0EFCD97F80
130701FEC7120348481401000315005B4848157C485A173C485A171C123F5B007F160CA3
90C9FC481600AB7E6D150CA3123F7F001F161C17186C7E17386C6C15306C6C15706D15E0
12016C6CEC01C0D97F80EB0380D91FC0EB0F00D90FF0131ED903FE13FC0100B512F0023F
13C0DA03FEC7FC2E377CB437>I<B77E16F016FE3A01FE0001FF00009138003FC0EE0FE0
707E707E707E707E177E177FEF3F80A2EF1FC0A3EF0FE0A418F0AA18E0A3171F18C0A218
80173F18005F17FE5F4C5AEE07F04C5AEE3FC000014AB45AB748C7FC16F8168034337EB2
3B>I<B812C0A3D803FCC7127F0001150FEE03E01601A21600A21760A403061330A41700
150EA2151E157E90B512FEA39038FC007E151E150EA21506170CA3171892C7FCA41738A2
1770A217F01601160316070003157FB812E0A32E337DB234>I<B81280A3D803FCC7FC00
01151FEE07C01603A21601A21600A41760150CA31700A2151CA2153C15FC90B5FCA3EBFC
00153C151CA2150CA592C8FCAB487EB512FEA32B337DB232>I<DA03FE130C91393FFF80
1C91B512E0903A03FE01F83C903A0FF0003C7CD91FC0EB0EFCD97F80130701FEC7120348
481401000315005B4848157C485A173C485A171C123F5B007F160CA390C9FC4893C7FCAA
0303B512E07E7F92390003FE00705A123F7F121FA26C7E7F12076C7E7F6C6C14036C7E6D
6C1307D91FC0EB0E7CD90FF0EB1C3CD903FEEBF81C0100B5EAF00C023F01C0C7FCDA03FE
C8FC33377CB43C>I<B5D8FE03B512F8A3000190C73807FC006C486E5AB390B7FCA349C7
1203B3A3486C4A7EB5D8FE03B512F8A335337EB23A>I<B512FEA3000113006C5AB3B3A7
487EB512FEA317337EB21C>I<017FB5FCA39038003FE0EC1FC0B3B1127EB4FCA4EC3F80
5A0060140000705B6C13FE6C485A380F03F03803FFC0C690C7FC20357DB227>I<B500FE
903807FFF8A3000190C7000113006C48EC00FC17F04C5A4C5A4CC7FC160E5E5E5E5E4B5A
4B5A4BC8FC150E5D5D15F84A7E14034A7EEC0EFF5C4A6C7E4A6C7EECE01FD9FFC07F4A6C
7E4A6C7E5B6F7E6F7EA26F7E707EA2707E707E160F83707E707EA283486C913807FF80B5
00FE013F13FCA336337EB23C>I<B512FEA3D803FEC9FC6C5AB3A9EE0180A416031700A4
5EA25E5E5E5E16FE00031407B7FCA329337DB230>I<D8FFFC923801FFF86D5DA20003EF
FE00D801BFED06FCA3D99F80140CA2D98FC01418A3D987E01430A2D983F01460A3D981F8
14C0A3D980FCEB0180A2027EEB0300A36E1306A26E6C5AA36E6C5AA36E6C5AA26E6C5AA3
6E6C5AA3913800FD80A2037FC7FCA3486C133ED80FF04B7EB5011C90387FFFF8A33D337C
B246>I<D8FFFE91381FFFF87F80C6030013006E143CD9DFE01418EBCFF0A2EBC7F8EBC3
FCA2EBC1FEEBC0FF6E7EA26E7E6E7EA26E7E6E7E6E7EA26E7E6E7EA2ED7F80ED3FC0ED1F
E0A2ED0FF0ED07F8A2ED03FCED01FEED00FFA2EE7F98EE3FD8A2EE1FF8160F1607A21603
1601A2486C1400D807F81578B500C01438A2171835337EB23A>I<EC07FC91387FFFC090
3901FC07F0903907E000FCD90F80133E013FC76C7E017E6E7E496E7E48486E7E48486E7E
A248486E7E000F8249157E001F167FA24848ED3F80A2007F17C0A290C9121FA24817E0AB
6C17C06D153FA3003F17806D157FA2001F17006D5D000F5E6C6C4A5AA26C6C4A5A00015E
6C6C4A5A017E4A5A6D4A5AD91FC0017FC7FCD907E013FC903901FC07F09039007FFFC0DA
07FCC8FC33377CB43C>I<B612FEEDFFC016F03A03FC0007FC0001EC00FE167FEE3F80EE
1FC017E0160FA217F0A617E0A2EE1FC0A2EE3F80EE7F0016FEED07F890B65A168001FCC9
FCB3A2487EB512F8A32C337DB234>I<B612FCEDFF8016F03A01FE0007FC0000EC01FEED
007F707E707E83160F83A65FA24C5AA24C5A047EC7FC4B5AED0FF090B612C093C8FC9039
FE001FC0ED07F06F7E6F7E150082167E167FA583A5180C17C0A2043F131C486C1618B500
FEEB1FE0040F1338933807F070C93801FFE09338003F8036357EB239>82
D<90381FE00390387FFC0748B5FC3907F01FCF390F8003FF48C7FC003E80814880A20078
8000F880A46C80A27E92C7FC127F13C0EA3FF013FF6C13F06C13FF6C14C06C14F0C68001
3F7F01037F9038003FFF140302001380157F153FED1FC0150F12C0A21507A37EA26CEC0F
80A26C15006C5C6C143E6C147E01C05B39F1FC03F800E0B512E0011F138026C003FEC7FC
22377CB42B>I<007FB712FEA390398007F001D87C00EC003E0078161E0070160EA20060
160600E01607A3481603A6C71500B3AB4A7E011FB512FCA330337DB237>I<B500FE9038
1FFFF8A3000190C813006C48153C1718B3AF1738017F1530A217706D6C1460011F15E06E
495A010F14036D6C495A6D6C49C7FCD901FC131E6DB413FC91383FFFF0020F13C0020190
C8FC35357EB23A>I<B500F0903803FFF8A3D807FEC8EA7FC06C48ED1F000001161E6D15
1C00001618A26D15386D1530A26D6C5CA26E14E0011F5DA26D6C495AA28001074AC7FCA2
6D6C1306A28001015CA26E131C01001418806E5BA2ED8070023F1360A26E6C5AA215E102
0F5BA2DA07F3C8FCA215FBEC03FEA36E5AA26E5AA31570A235357EB23A>I<B5D8F007B5
39800FFFF0A3000390C7273FF000011300D801FC6E48EB007C1A386D140F00001930836D
020715706D1860A26E496C14E0013F60A26ED919FC1301011F60A26ED930FE1303010F95
C7FCA26ED9607F5B01071706A26E9039C03F800E0103170CA2913BFC01801FC01C010117
18A2913BFE03000FE03801001730A2DAFF06EB07F0027F5EA2038CEB03F8023F5EA203D8
EB01FC021FEDFD80A203F0EB00FF020F93C8FCA24B800207157EA24B143E0203153CA24B
141C020115184C357FB24F>I<267FFFFC90B512C0A3000101E090381FF80026007F80EB
0FC0013F6E5A6E91C7FC6D6C130E010F140C6E5B6D6C133801035C6E13606D6C13E06D6C
485A5EDA7F83C8FCEC3FC715C6EC1FECEC0FFC5D14076E7EA26E7E815C6F7E9138063FC0
140E4A6C7E9138180FF0EC380702707F91386003FCECC0010101804A6C7E49C77E498101
0E6E7E010C6E7E131C496E7E01786E7E13FCD807FEEC1FFEB56C90B512F8A335337EB23A
>I<B500F8ECFFFEA300030180EC3FE06C90C8EA1F806CEE0E006D6C5C6D6C141817386D
6C14305F6D6C14E06D6C5C16016D6C5C6D6C49C7FC5E6D6C13065E91387F801C91383FC0
18163891381FE0306E6C5A16E06E6C5AEDF980EC03FF6E90C8FC5D1400B14A7E91B512FC
A337337FB23A>I<003FB612FCA39039F80007F813C090C7EA0FF0003EEC1FE0123C0038
EC3FC00078EC7F801270EDFF004A5AA20060495AA24A5A4A5AC7FC4A5A4A5AA24A5A4AC7
FCA2495A495AA2495A495AA24948130C495AA2495A49C7FCA24848141CA2485A485A1638
485A4848147816F84848130148481307153FB7FCA326337CB22F>I<EAFFF0A4EAF000B3
B3B3ADEAFFF0A40C4B79B715>I<EAFFF0A41200B3B3B3AD12FFA40C4B7FB715>93
D<EB7F803803FFF0380F80FC381C003E003F133F6D6C7E6E7EA26E7EEA1F00C7FCA4EB01
FF131FEBFF873803FC07EA0FF0EA1FC0EA3F80127F13004815C05AA3140FA26C131F6C13
3B3A3F8071F180391FC1E1FF2607FFC013003900FE003C22237DA126>97
D<EA03F012FFA312071203AEEC3F80ECFFE09038F3C0F89038F7007E01FE7F49EB1F8049
EB0FC05BED07E016F0A2150316F8AA16F0150716E0A2ED0FC07F6DEB1F8001ECEB3F0001
CF137C90388381F8903801FFE0C76CC7FC25357EB32B>I<EB07F8EB3FFF9038FC07C039
01F000E03903E003F03807C007120FEA1F80123F90380003E04890C7FCA2127E12FEAA12
7FA26C14187F001F14386D1330000F14706C6C13E03903F001C03900FC0F8090383FFE00
EB07F01D237EA122>I<153FEC0FFFA3EC007F81AEEB07F0EB3FFCEBFC0F3901F003BF39
07E001FF48487E48487F8148C7FCA25A127E12FEAA127E127FA27E6C6C5BA26C6C5B6C6C
4813803A03F007BFFC3900F81E3FEB3FFCD90FE0130026357DB32B>I<EB0FE0EB7FFCEB
F83F3903F00F80D807E013C0390FC007E0381F800315F0EA3F0014014814F8127EA212FE
A2B6FCA248C8FCA5127E127FA26C1418A26C6C1338000F14306D13706C6C13E03901F003
C03900FC0F00EB3FFEEB07F01D237EA122>I<EB01FCEB07FF90381F078090383E0FC0EB
7C1F13FCEA01F8A20003EB070049C7FCACB512F0A3D803F0C7FCB3A7487E387FFFE0A31A
357FB417>I<151F90391FC07F809039FFF8E3C03901F07FC73907E03F033A0FC01F8380
9039800F8000001F80EB00074880A66C5CEB800F000F5CEBC01F6C6C48C7FCEBF07C380E
FFF8380C1FC0001CC9FCA3121EA2121F380FFFFEECFFC06C14F06C14FC4880381F000100
3EEB007F4880ED1F8048140FA56C141F007C15006C143E6C5C390FC001F83903F007E0C6
B51280D91FFCC7FC22337EA126>I<EA03F012FFA312071203AEEC1FC0EC7FF09038F1E0
FC9038F3807C9038F7007E13FE497FA25BA25BB3486CEB7F80B538C7FFFCA326347EB32B
>I<EA0780EA0FC0EA1FE0A4EA0FC0EA0780C7FCAAEA07E012FFA3120F1207B3A6EA0FF0
B5FCA310337EB215>I<EA03F012FFA312071203AF913803FFE0A36E1300EC00F8EC01E0
5D4A5A020FC7FC141C5C5C14F0EBF3F8EBF7FC13FEEBFC7EEBF87F496C7E141F6E7E8114
076E7E8114016E7E81486CEBFF80B500C313F0A324347EB329>107
D<EA07E012FFA3120F1207B3B3A7EA0FF0B5FCA310347EB315>I<2703F01FE013FF00FF
90267FF80313C0903BF1E07C0F03E0903BF3803E1C01F02807F7003F387FD803FE147049
6D486C7EA2495CA2495CB3486C496C487EB53BC7FFFE3FFFF0A33C217EA041>I<3903F0
1FC000FFEB7FF09038F1E0FC9038F3807C3907F7007EEA03FE497FA25BA25BB3486CEB7F
80B538C7FFFCA326217EA02B>I<EB07F0EB3FFE9038FC1F803901F007C03903C001E000
078048486C7E48C7127CA248147E003E143E007E143FA300FE1580A8007E1500A36C147E
A26C147C6D13FC6C6C485A00075C3903F007E03900FC1F80D93FFEC7FCEB07F021237EA1
26>I<3903F03F8000FFEBFFE09038F3C0F89038F7007ED807FE7F6C48EB1F804914C049
130F16E0ED07F0A3ED03F8A9150716F0A216E0150F16C06D131F6DEB3F80160001FF13FC
9038F381F89038F1FFE0D9F07FC7FC91C8FCAA487EB512C0A325307EA02B>I<903807F0
0390383FFC07EBFC0F3901F8038F3807E001000F14DF48486CB4FC497F123F90C77E5AA2
5A5AA9127FA36C6C5B121F6D5B000F5B3907E003BF3903F0073F3800F81EEB3FF8EB0FE0
90C7FCAAED7F8091380FFFFCA326307DA029>I<3803E07C38FFE1FF9038E38F809038E7
1FC0EA07EEEA03ECA29038FC0F8049C7FCA35BB2487EB512E0A31A217FA01E>I<EBFF06
000713CE381F00FE003C133E48131E140E5A1406A27EA200FE90C7FC6C7EEA7FFC383FFF
C014F0000F7F6C7FC67FEB0FFF1300EC3F8000C0131F140F6C1307A37E15006C5B6C130E
6C5B38F7807838E1FFE038C07F8019237EA11E>I<1330A51370A313F0A21201A2120312
07381FFFFEB5FCA23803F000AF1403A814073801F806A23800FC0EEB7E1CEB1FF8EB07E0
182F7FAD1E>I<D803F0133F00FFEB0FFFA30007EB007F000380B35DA35D12016D481380
0000903803BFFC90387E073FEB1FFED907F8130026227EA02B>I<B5EBFFF0A3D80FF0EB
3F800007EC1F000003140E150C6D131C00011418A26C6C5BA26D1370017E1360137F6D5B
A290381F8180A214C3010F90C7FCA2EB07E6A214FE6D5AA26D5AA36D5AA2146024217E9F
29>I<B53A1FFF81FFF0A33C07F801FC003F8001F049EB1E0000030100141C816C6C017C
1318A26D017E1338000002FE1330A290267E01FF5B159F168090263F030F5BA216C0903A
1F8607C180A202C613E390260FCC0390C7FCA2D907FC13F6ECF80116FE6D486C5AA36D48
1378A36D48133034217F9F37>I<B53801FFF8A32603FE0013806C48EB7C000000147801
7E1370017F5B90383F81C090381F8380D90FC3C7FCEB07E614FE6D5A6D5A6D7E80805B90
38039F809038071FC09038060FE0EB0C0790381C03F0496C7E01707FEBF000000180000F
ECFF8026FFFC0313FCA326207F9F29>I<3A7FFF807FF8A33A07F8001FC00003EC0F8000
01EC070015066C6C5BA26D131C017E1318A26D5BA2EC8070011F1360ECC0E0010F5BA290
3807E180A214F3010390C7FC14FBEB01FEA26D5AA31478A21430A25CA214E05CA2495A12
78D8FC03C8FCA21306130EEA701CEA7838EA1FF0EA0FC025307F9F29>I<003FB512F0A2
EB000F003C14E00038EB1FC00030EB3F800070137F1500006013FE495A13035CC6485A49
5AA2495A495A49C7FC153013FE485A12035B48481370485A001F14604913E0485A387F00
0348130F90B5FCA21C207E9F22>I<B712F8A22502809426>I E /Fx
11 115 df<133C137EA213FE1201EA03FC13F0EA07E0EA0FC0EA1F80EA1E005A5A5A12C0
0F0F6DB92E>19 D<DB7FC01330912607FFF81370023F13FE913AFFC01F80F0903A03FE00
03E1D907F8EB00F3D91FE0147B4948143F4948141F49C8120F4848150748481503A24848
150148481500A2485A1870123F5B1830127FA349160012FFAB127F7F1830A2123FA27F00
1F177018606C7E18E06C6C16C06C6C150118806C6C15036C6CED07006D6C5C6D6C141E6D
6C5CD907F85CD903FEEB01E0903A00FFC00FC0023FB5C7FC020713FC9138007FE0343D7A
BA41>67 D<B500FE91380FFFF8A3000301C0020113806C90C9EA7E006C173C6E1538017F
1630A26E1570013F166080011F5EA26E1401010F5E8001074BC7FCA26E5C010315068001
015DA26D6C5CA281027F5CA26E6C5BA281021F5C81020F495AA215F8020749C8FC15FC02
031306A2EDFE0E0201130C15FF6E5BA216B8ED7FB016F06F5AA36F5AA26F5AA36FC9FCA2
3D3B7DB844>86 D<91383FC006903901FFF80E90390FE03E1E90381F0007017EEB03BE01
F8EB01FE484813004848147E0007153E485A001F151E5B003F150E90C8FC5A1606A212FE
1600AA007F1506A37E6D140E001F150C7F000F151C6C6C1418000315386C6C14706C6C14
E0017EEB01C0011FEB078090390FE03E00903801FFF89038003FC0272D7BAB31>99
D<B712E0A23907F8000F6C481303ED00F01670A21630A41618A215C01600A31401A21407
90B5FCA2EBF0071401A21400A21606A21500A2160CA4161CA2163C167C16F8486C1307B7
FCA2272B7CAA2E>101 D<B539C07FFFE0A23B07F80003FC006C486D5AB190B6FCA29038
F00001B2486C497EB539C07FFFE0A22B2B7CAA33>104 D<B512C0A23807F8006C5AB3B3
487EB512C0A2122B7CAA19>I<D8FFF0ED3FFC6D157F0007178000031700017C15DFA26D
EC019FA36DEC031FA26D6C1306A36D6C130CA26D6C1318A26D6C1330A36D6C1360A2027C
13C0A391383E0180A291381F0300A3EC0F86A2EC07CCA3EC03F8A2486C6C5AA2D81FE0ED
3F803CFFFC00E007FFFCA2362B7CAA3E>109 D<D8FFF0903807FFE07F0007020013006C
6C143C7F017F14187F806D7E130F806D7E6D7EA26D7E6D7E147E147FEC3F80141F15C0EC
0FE0EC07F0140315F8EC01FC140015FE157FED3F98151F16D8ED0FF81507A215031501A2
486C13001678D81FE01438EAFFFC16182B2B7CAA33>I<EC7FC0903803FFF890380FC07E
90393F001F80017CEB07C04848EB03F048486D7E4913004848147C000F157E484880A248
C8EA1F80A24816C0A2007E150FA200FE16E0AA007FED1FC0A36C16806D143F001F1600A2
6C6C147E6C6C5CA26C6C495A6C6C495AD8007CEB07C0013FEB1F8090260FC07EC7FC9038
03FFF89038007FC02B2D7BAB35>I<B67E15F03907F800FE6C48133FED0FC06F7EA26F7E
82A65E4B5AA24B5A033FC7FC15FE90B512F05D9038F001F8EC007E816F7EA26F7EA582A4
171816F015071738486C903803F830B5D8C00113709238007FE0C9EA1F802D2C7CAA32>
114 D E /Fy 77 123 df<DA0FF813FC91397FFF07FF903B01F807DF83C0903A07E001FF
0F903B1F8007FE1FE090393F000FFC137E16F85B9338F007804848010790C7FC1503ACB8
12F8A32801F80003F0C7FCB3AB486C497E267FFFE0B512F0A3333B7FBA30>11
D<EC0FF8EC7FFE903901F80780903907E001C090391F8000E090383F0007017E497EA25B
A2485A6F5AED018092C8FCA9ED03F0B7FCA33901F8000F1503B3AA486C497E267FFFE0B5
12C0A32A3B7FBA2E>I<EC0FFC91387FFF70903901F803F0903807E00790381F800FEB3F
00137EA25B150748481303ADB7FCA33901F80003B3AB486C497E267FFFE0B512C0A32A3B
7FBA2E>I<DA0FF0EB1FF0DA7FFEEBFFFC903B01F80F83F00F903C07E001CFC00380903C
1F8000FF0001C090273F0007FE130F017E4948497EA2495CA248485C03076E5A03030203
C7FC95C8FCA9F007E0BAFCA33C01F80003F0001F1807B3AA486C496C497E267FFFE0B500
C1B51280A3413B7FBA45>I<133C137EA213FE1201EA03FC13F0EA07E0EA0FC0EA1F80EA
1E005A5A5A12C00F0F6FB92A>19 D<001C131C007F137F39FF80FF80A26D13C0A3007F13
7F001C131C00001300A40001130101801380A20003130301001300485B00061306000E13
0E485B485B485B006013601A197DB92A>34 D<EB0380A3EB0FF0EB7FFE48B512803903F3
8FC03907C381E0390F8380F0D81F031338123E003C141C007C140C150E0078143E00F814
FE1481A400FCEB80FC157800FE140012FF127F13C313E3EA3FFF6C7F14F86C13FE6CEBFF
80000114C06C14E0013F13F01303ECBFF8148FEC83FC1481A2EC80FE157E123C12FF153E
A412FE00F8143C00E0147C12600070147815F8003814F0003C1381001EEB83E0000FEB87
C03907E39F803901FFFE006C5BEB1FE0EB0380A41F437BBD2A>36
D<017C166048B416F02607C3801401260F81C01403D900E04A5A001E01784A5A003E6D14
1F003C013FEC7F80007C90271BE003FFC7FC0218B512BF007891381FFC3E00F8011CC75A
020C14FC5F4C5A16035F4C5A160F5F4CC8FC021C5B00780118133E007C5D16FC003C0138
5B003E90383001F0001EEB70036C01E05B903981C007C03907C3800F2601FF005BD8007C
49C9FC90C748EB07C0033EEB1FF04BEB3C3803FCEBF81C4B497E913A01F001E006020301
03130703E0497E912607C0071480020F15011580DA1F00018013C04A010F1300143E5C14
FC5C495A13035C495A130F4A0107130149C701C013805B013E1603490203140001FC6F5A
49020113064848913800F00E0003705A49ED3C3849ED1FF06C48ED07C03A437BBD45>I<
121C127FEAFF80A213C0A3127F121C1200A412011380A2120313005A1206120E5A5A5A12
600A1979B917>39 D<146014E0EB01C0EB0380EB0700130E131E5B5BA25B485AA2485AA2
12075B120F90C7FCA25A121EA2123EA35AA65AB2127CA67EA3121EA2121F7EA27F12077F
1203A26C7EA26C7E1378A27F7F130E7FEB0380EB01C0EB00E01460135278BD20>I<12C0
7E12707E7E7E120F6C7E6C7EA26C7E6C7EA21378A2137C133C133E131EA2131F7FA21480
A3EB07C0A6EB03E0B2EB07C0A6EB0F80A31400A25B131EA2133E133C137C1378A25BA248
5A485AA2485A48C7FC120E5A5A5A5A5A13527CBD20>I<15301578B3A6007FB812F8B912
FCA26C17F8C80078C8FCB3A6153036367BAF41>43 D<121C127FEAFF80A213C0A3127F12
1C1200A412011380A2120313005A1206120E5A5A5A12600A19798817>I<B512FCA51605
7F941C>I<121C127FEAFF80A5EA7F00121C0909798817>I<EB03F8EB1FFF90387E0FC090
38F803E03901E000F0484813780007147C48487FA248C77EA2481580A3007EEC0FC0A600
FE15E0B3007E15C0A4007F141F6C1580A36C15006D5B000F143EA26C6C5B6C6C5B6C6C48
5A6C6C485A90387E0FC0D91FFFC7FCEB03F8233A7DB72A>48 D<EB01C013031307131F13
FFB5FCA2131F1200B3B3A8497E007FB512F0A31C3879B72A>I<EB0FF0EB7FFE48B57E39
03E03FE0390F000FF0000E6D7E486D7E486D7E123000706D7E126012FCB4EC7F807FA56C
C7FC121CC8FCEDFF00A34A5A5D14035D4A5A5D140F4A5A4A5A92C7FC147C5C495A495A49
5A495A91C8FC011EEB01805B5B49130348481400485A485A000EC75A000FB6FC5A5A485C
B6FCA321387CB72A>I<EB07F8EB3FFF4913C03901F80FF03903C007F848486C7E380E00
01000F80381FE0006D7FA56C5A6C5AC85A1401A25D4A5AA24A5A5DEC0F80027EC7FCEB1F
FCECFF809038000FE06E7EEC01FC816E7EED7F80A216C0A2153F16E0A2121EEA7F80487E
A416C049137F007F1580007EC7FC0070ECFF006C495A121E390F8003F83907F00FF00001
B512C06C6C90C7FCEB0FF8233A7DB72A>I<1538A2157815F8A2140114031407A2140F14
1F141B14331473146314C313011483EB030313071306130C131C131813301370136013C0
1201EA038013005A120E120C5A123812305A12E0B712F8A3C73803F800AB4A7E0103B512
F8A325397EB82A>I<0006140CD80780133C9038F003F890B5FC5D5D158092C7FC14FC38
067FE090C9FCABEB07F8EB3FFE9038780F803907E007E090388003F0496C7E12066E7EC8
7EA28181A21680A4123E127F487EA490C71300485C12E000605C12700030495A00385C6C
1303001E495A6C6C485A3907E03F800001B5C7FC38007FFCEB1FE0213A7CB72A>I<EC3F
C0903801FFF0010713FC90380FE03E90383F800790387E001F49EB3F804848137F485AA2
485A000FEC3F0049131E001F91C7FCA2485AA3127F90C9FCEB01FC903807FF8039FF1E07
E090383801F0496C7E01607F01E0137E497FA249148016C0151FA290C713E0A57EA56C7E
16C0A2121FED3F807F000F15006C6C5B15FE6C6C5B6C6C485A3900FE07F090383FFFC06D
90C7FCEB03FC233A7DB72A>I<12301238123E003FB612E0A316C05A168016000070C712
060060140E5D151800E01438485C5D5DC712014A5A92C7FC5C140E140C141C5CA25CA214
F0495AA21303A25C1307A2130FA3495AA3133FA5137FA96DC8FC131E233B7BB82A>I<EB
03F8EB1FFF017F13C09038FC07F03901E001F848486C7E4848137C90C77E48141E000E14
1F001E80A3121FA27F5D01E0131E6C6C133E01FC133C6D5B6C6C6C5AECC1E06CEBF3C06C
01FFC7FC6C5BEB3FFF6D13C081017F13F801F07F3903E07FFE3907801FFF48486C138048
1303003E6D13C0003CEB007F007C143F0078EC0FE000F814075A1503A21501A36C15C012
781503007C15806CEC07006C5C6C6C131ED807E0137C3903F803F0C6B55A013F1380D907
FCC7FC233A7DB72A>I<EB03F8EB1FFF017F13C09038FC07E03903F803F048486C7E4848
6C7E49137E121F48487FA2007F158090C7FCA248EC1FC0A616E0A56C143FA27F123F001F
147FA26C6C13FF6C6C13DF000313013901F0039F3900FC0F1FD93FFC13C0EB07F090C7FC
153F1680A316005D000F147E487E486C5BA24A5A4A5A49485A6C48485A001C495A260F80
7FC7FC3807FFFC000113F038003FC0233A7DB72A>I<121C127FEAFF80A5EA7F00121CC7
FCB2121C127FEAFF80A5EA7F00121C092479A317>I<121C127FEAFF80A5EA7F00121CC7
FCB2121C127F5A1380A4127F121D1201A412031300A25A1206A2120E5A121812385A1260
093479A317>I<007FB812F8B912FCA3CCFCAEB912FCA36C17F836167B9F41>61
D<1538A3157CA315FEA34A7EA34A6C7EA202077FEC063FA2020E7FEC0C1FA2021C7FEC18
0FA202387FEC3007A202707FEC6003A202C07F1501A2D901807F81A249C77F167FA20106
810107B6FCA24981010CC7121FA2496E7EA3496E7EA3496E7EA213E0707E1201486C81D8
0FFC02071380B56C90B512FEA3373C7DBB3E>65 D<B712E016FC16FF0001903980007FC0
6C90C7EA1FE0707E707E707EA2707EA283A75F16035F4C5A4C5A4C5A4C5AEEFF8091B500
FCC7FCA291C7EA7F80EE1FE0EE07F0707E707E83707EA21880177F18C0A7188017FFA24C
13005F16034C5AEE1FF8486DEB7FF0B812C094C7FC16F832397DB83B>I<913A01FF8001
80020FEBE003027F13F8903A01FF807E07903A03FC000F0FD90FF0EB039F4948EB01DFD9
3F80EB00FF49C8127F01FE153F12014848151F4848150FA248481507A2485A1703123F5B
007F1601A35B00FF93C7FCAD127F6DED0180A3123F7F001F160318006C7E5F6C7E17066C
6C150E6C6C5D00001618017F15386D6C5CD91FE05C6D6CEB03C0D903FCEB0F80902701FF
803FC7FC9039007FFFFC020F13F002011380313D7BBA3C>I<B712C016F816FE00019039
8001FF806C90C7EA3FE0EE0FF0EE03F8707E707E177FA2EF3F8018C0171F18E0170F18F0
A3EF07F8A418FCAC18F8A4EF0FF0A218E0A2171F18C0EF3F80A2EF7F0017FE4C5A4C5AEE
0FF0EE3FE0486DEBFF80B8C7FC16F816C036397DB83F>I<B812FCA30001903880000F6C
90C71201EE007E173E171E170EA31706A317078316C0A394C7FCA31501A21503150F91B5
FCA3EC000F15031501A21500A21860A318E093C712C0A41701A3EF0380A21707A2170F17
3F177F486D903807FF00B9FCA333397DB839>I<B812F8A30001903880001F6C90C71201
EE00FC177C173C171CA2170CA4170E1706A2ED0180A21700A41503A21507151F91B5FCA3
EC001F15071503A21501A692C8FCAD4813C0B612C0A32F397DB836>I<DBFF8013C0020F
EBF001023F13FC9139FF803F03903A03FC000787D90FF0EB03CF4948EB00EF4948147F49
48143F49C8121F485A4848150F48481507A248481503A2485A1701123F5B007F1600A448
481600AB93B6FCA26C7E9338007FE0EF3FC0A2123F7F121FA26C7EA26C7EA26C7E6C7E6C
6C157F6D7E6D6C14FF6D6C14EFD90FF8EB03C7D903FEEB0783903A00FFC03F0191393FFF
FC00020F01F0130002001380383D7CBA41>I<B648B512FEA30001902680000313006C90
C76C5AB3A491B6FCA391C71201B3A6486D497EB648B512FEA337397DB83E>I<B612C0A3
C6EBC0006D5AB3B3AD497EB612C0A31A397EB81E>I<B649B5FCA3000101809038007FF0
6C90C8EA3F80053EC7FC173C17385F5F4C5A4C5A4CC8FC160E5E5E5E5E4B5AED0780030E
C9FC5D153E157E15FF5C4A7F4A6C7E140E4A6C7E4A6C7E14704A6C7E4A6C7E14804A6C7E
6F7EA26F7F707EA2707E707EA2707EA2707E707EA2707E707F8484486D497FB6011FEBFF
80A339397DB841>75 D<B612E0A3000101C0C8FC6C90C9FCB3AD1718A517381730A31770
A317F0A216011603160FEE1FE0486D13FFB8FCA32D397DB834>I<B5933807FFF86E5DA2
0001F0FC002600DFC0ED1BF8A2D9CFE01533A3D9C7F01563A3D9C3F815C3A2D9C1FCEC01
83A3D9C0FEEC0303A2027F1406A36E6C130CA36E6C1318A26E6C1330A36E6C1360A26E6C
13C0A3913901FC0180A3913900FE0300A2ED7F06A3ED3F8CA2ED1FD8A3ED0FF0A3486C6D
5A487ED80FFC6D48497EB500C00203B512F8A2ED018045397DB84C>I<B5913807FFFE80
80C69238007FE06EEC1F80D9DFF0EC0F001706EBCFF8EBC7FCA2EBC3FEEBC1FFA201C07F
6E7EA26E7E6E7E81140F6E7E8114036E7E168080ED7FC016E0153FED1FF0ED0FF8A2ED07
FCED03FEA2ED01FF6F1386A2EE7FC6EE3FE6A2EE1FF6EE0FFEA216071603A216011600A2
177E486C153E487ED80FFC151EB500C0140EA2170637397DB83E>I<EC03FF021F13E091
38FE01FC903901F8007ED907E0EB1F8049486D7ED93F80EB07F049C76C7E01FE6E7E4848
6E7E49157E0003167F4848ED3F80A24848ED1FC0A2001F17E049150F003F17F0A3007F17
F8491507A300FF17FCAC007F17F86D150FA3003F17F0A26C6CED1FE0A36C6CED3FC00007
17806D157F000317006C6C15FEA26C6C4A5A017F4A5A6D6C495A6D6C495AD907E0EB1F80
D903F8017FC7FC903900FE01FC91381FFFE0020390C8FC363D7BBA41>I<B712C016F816
FE000190398001FF806C90C7EA3FC0EE0FE0EE07F0EE03F817FC17FE1601A217FFA717FE
A2EE03FCA2EE07F817F0EE0FE0EE3FC0923801FF0091B512FC16F091C9FCB3A5487FB6FC
A330397DB839>I<B612FEEDFFE016F8000190388007FE6C90C76C7EEE3FC0707E707E70
7EA2707EA283A65FA24C5AA24C5A4C5AEE3F8004FFC8FCED07FC91B512E05E9138000FF0
ED03F8ED00FE82707E707EA2161F83A583A6F00180A217F8160F1803486D01071400B66D
6C5A04011306933800FE0ECAEA3FFCEF07F0393B7DB83D>82 D<D90FF813C090383FFE01
90B512813903F807E33907E000F74848137F4848133F48C7121F003E140F007E1407A200
7C140312FC1501A36C1400A37E6D14006C7E7F13F86CB47E6C13F8ECFF806C14E06C14F8
6C14FEC680013F1480010714C0EB007F020713E0EC007FED3FF0151F150FED07F8A200C0
1403A21501A37EA216F07E15036C15E06C14076C15C06C140F6DEB1F80D8FBF0EB3F00D8
F0FE13FE39E03FFFF8010F13E0D8C00190C7FC253D7CBA2E>I<003FB812E0A3D9C003EB
001F273E0001FE130348EE01F00078160000701770A300601730A400E01738481718A4C7
1600B3B0913807FF80011FB612E0A335397DB83C>I<B6903807FFFEA300010180903800
7FE06C90C8EA1F80EF0F001706B3B2170E6D150C80171C133F17186D6C14385F6D6C14F0
6D6C5C6D6C495A6D6CEB07806D6C49C7FC91387F807E91381FFFF8020713E09138007F80
373B7DB83E>I<B5D8FC07B5D8F001B5FCA30007902780001FFEC7EA1FF86C48C7D80FF8
EC07E000010307ED03C01B807F6C6F6C1500A26E5F017F6E6C1406A280013F4A6C5CA280
011F4A6D5BEE067FA26D6C010E6D5BEE0C3FA26D6C011C6D5BEE181FA26D6C6F5BEE300F
A26D6C6F485AEE6007A26D6C4CC7FC9338C003FCA203805D913B7F818001FE06A203C115
0EDA3FC3C7EAFF0CA203E3151CDA1FE6EC7F98A215F6DA0FFCEC3FF0A302075E4B141FA2
02035E4B140FA202015E4B1407A2020093C8FC4B80503B7EB855>87
D<EAFFF8A4EAF000B3B3B3B3A3EAFFF8A40D5378BD17>91 D<3901800180000313033907
000700000E130E485B0018131800381338003013300070137000601360A200E013E0485B
A400CE13CE39FF80FF806D13C0A3007F137FA2393F803F80390E000E001A1974B92A>I<
EAFFF8A4EA0078B3B3B3B3A3EAFFF8A40D537FBD17>I<EB1FE0EBFFFC3803E03F390700
0F80390F8007E0486C6C7E13E06E7EA26E7E6C5A6C5AC8FCA4147FEB07FFEB3FE0EBFE00
EA03F8EA0FF0EA1FC0123F485A90C7FC160C12FEA31401A26C13036CEB077C903980063E
18383FC01E3A0FE0781FF03A03FFF00FE03A007F8007C026277DA52A>97
D<EA03F012FFA3120F1203B0EC1FE0EC7FF89038F1E03E9039F3801F809039F7000FC001
FEEB07E049EB03F049EB01F85BED00FCA216FEA2167E167FAA167E16FEA216FC15016D14
F8ED03F07F01EEEB07E001C6EB0FC09039C7801F00903881E07E903800FFF8C7EA1FC028
3B7EB92E>I<EB03FC90381FFF8090387E03E03901F80070484813F83907E001FC380FC0
03A2EA1F80123F90380001F848EB00F01500A2127E12FEAA127E127FA26C14067F001F14
0E6D130C000F141C6C6C13386C6C13706C6C13E039007C07C090381FFF00EB07F81F277D
A525>I<ED0FC0EC03FFA3EC003F150FB0EB03F8EB1FFF90387E078F9038F801EF3903F0
007F4848133F4848131FA24848130F123F90C7FC5AA2127E12FEAA127E127FA27EA26C6C
131FA26C6C133F6C6C137F6C6CEBEFF03A01F801CFFF39007C078F90381FFE0FD907F813
C0283B7DB92E>I<EB07F8EB1FFF90387C0FC03901F803E03903F001F0D807E013F8380F
C0004848137CA248C7127E153E5A153F127E12FEA3B7FCA248C8FCA5127EA2127FA26C14
037F001F14076C6C13060007140E6D131CD801F013386C6C137090387E03E090381FFF80
903803FC0020277EA525>I<147E903803FF8090380FC1E0EB1F8790383F0FF0137EA213
FCA23901F803C091C7FCADB512FCA3D801F8C7FCB3AB487E387FFFF8A31C3B7FBA19>I<
ED03F090390FF00FF890393FFC3C3C9039F81F707C3901F00FE03903E007C03A07C003E0
10000FECF000A248486C7EA86C6C485AA200075C6C6C485A6D485A6D48C7FC38073FFC38
060FF0000EC9FCA4120FA213C06CB512C015F86C14FE6CECFF804815C03A0F80007FE048
C7EA0FF0003E140348140116F8481400A56C1401007C15F06CEC03E0003F1407D80F80EB
0F80D807E0EB3F003901FC01FC39007FFFF0010790C7FC26387EA52A>I<EA03F012FFA3
120F1203B0EC0FF0EC3FFCECF03F9039F1C01F809039F3800FC0EBF70013FE496D7EA25B
A35BB3A3486C497EB500C1B51280A3293A7EB92E>I<EA0380EA0FE0487EA56C5AEA0380
C8FCAAEA03F012FFA312071203B3AA487EB512C0A312387EB717>I<EB01C0EB07F0EB0F
F8A5EB07F0EB01C090C7FCAAEB01F813FFA313071301B3B3A2123C127E00FF13F01303A2
14E038FE07C0127C383C0F00EA0FFEEA03F8154984B719>I<EA03F012FFA3120F1203B1
913801FFFCA39138007FC01600157C15705D4A5A4A5A4AC7FC141E1438147814FC13F1EB
F3FEEBF73F01FE7FEBF81F496C7E8114076E7E6E7E811400157E157F811680ED1FC0486C
EB3FF0B500C0B5FCA3283A7EB92C>I<EA03F012FFA3120F1203B3B3AD487EB512C0A312
3A7EB917>I<2703F00FF0EB1FE000FFD93FFCEB7FF8913AF03F01E07E903BF1C01F8380
3F3D0FF3800FC7001F802603F70013CE01FE14DC49D907F8EB0FC0A2495CA3495CB3A348
6C496CEB1FE0B500C1B50083B5FCA340257EA445>I<3903F00FF000FFEB3FFCECF03F90
39F1C01F803A0FF3800FC03803F70013FE496D7EA25BA35BB3A3486C497EB500C1B51280
A329257EA42E>I<EB03FE90380FFF8090383E03E09038F800F84848137C48487F48487F
4848EB0F80001F15C090C712074815E0A2007EEC03F0A400FE15F8A9007E15F0A2007F14
076C15E0A26C6CEB0FC0000F15806D131F6C6CEB3F006C6C137EC66C13F890387E03F090
381FFFC0D903FEC7FC25277EA52A>I<3903F01FE000FFEB7FF89038F1E07E9039F3801F
803A07F7000FC0D803FEEB07E049EB03F04914F849130116FC150016FEA3167FAA16FEA3
ED01FCA26DEB03F816F06D13076DEB0FE001F614C09039F7803F009038F1E07E9038F0FF
F8EC1FC091C8FCAB487EB512C0A328357EA42E>I<D903F813C090381FFE0190387E0781
9038FC01C33903F000E3000714774848133749133F001F141F485A150F48C7FCA312FEAA
127FA37E6D131F121F6D133F120F6C6C137F6C6C13EF3901F801CF39007E078F90381FFE
0FEB07F890C7FCABED1FE00203B5FCA328357DA42C>I<3807E01F00FFEB7FC09038E1E3
E09038E387F0380FE707EA03E613EE9038EC03E09038FC0080491300A45BB3A2487EB512
F0A31C257EA421>I<EBFF03000313E7380F80FF381E003F487F487F00707F12F0A2807E
A27EB490C7FCEA7FE013FF6C13E06C13F86C7F00037FC67F01071380EB007F141F00C0EB
0FC01407A26C1303A37E15806C13077EEC0F00B4131E38F3C07C38E1FFF038C03F801A27
7DA521>I<1318A51338A31378A313F8120112031207001FB5FCB6FCA2D801F8C7FCB215
C0A93800FC011580EB7C03017E13006D5AEB0FFEEB01F81A347FB220>I<D803F0EB07E0
00FFEB01FFA3000FEB001F00031407B3A4150FA3151F12016D133F0000EC77F86D9038E7
FF8090383F03C790381FFF87903A03FC07E00029267EA42E>I<B538803FFEA33A0FF800
0FF06C48EB07E00003EC03C06D148000011500A26C6C1306A26D130E017E130CA26D5BA2
EC8038011F1330A26D6C5AA214E001075BA2903803F180A3D901FBC7FCA214FF6D5AA214
7CA31438A227257EA32C>I<B53A1FFFE03FFEA3260FF8009038000FF86C48017EEB03E0
18C00003023EEB0180A26C6C013FEB0300A36C6CEC8006156FA2017E9038EFC00C15C7A2
D93F016D5A15830281EBF038D91F831430150102C3EBF87090260FC6001360A2D907E66D
5A02EC137CA2D903FCEB7F804A133FA2010192C7FC4A7FA20100141E4A130E0260130C37
257EA33C>I<B538807FFFA33A03FE003FF00001EC1F80000092C7FC017E131C6D13186D
6C5AECC070010F5B6D6C5AECF180EB03FB6DB4C8FC6D5AA2147F804A7E8114CF903801C7
E090380383F090380703F8EB0601496C7E011C137E49137F01787F496D7E486C80000FEC
3FF0D8FFFE90B51280A329247FA32C>I<B538803FFEA33A0FF8000FF06C48EB07C00003
EC03806C7E16007F00001406A2017E5BA2137F6D5BA26D6C5AA2ECC070010F1360A26D6C
5AA214F101035BA2D901FBC7FCA214FF6D5AA2147CA31438A21430A214701460A25CA2EA
7C0100FE5B130391C8FC1306EAFC0EEA701C6C5AEA1FF0EA0FC027357EA32C>I<003FB5
12FCA2EB8003D83E0013F8003CEB07F00038EB0FE012300070EB1FC0EC3F800060137F15
0014FE495AA2C6485A495AA2495A495A495AA290387F000613FEA2485A485A0007140E5B
4848130C4848131CA24848133C48C7127C48EB03FC90B5FCA21F247EA325>I
E /Fz 21 122 df<171F4D7E4D7EA24D7EA34C7FA24C7FA34C7FA34C7FA24C7FA34C8083
047F80167E8304FE804C7E03018116F8830303814C7E03078116E083030F814C7E031F81
168083033F8293C77E4B82157E8403FE824B800201835D840203834B800207835D844AB8
7EA24A83A3DA3F80C88092C97E4A84A2027E8202FE844A82010185A24A820103854A8201
0785A24A82010F855C011F717FEBFFFCB600F8020FB712E0A55B547BD366>65
D<932601FFFCEC01C0047FD9FFC013030307B600F81307033F03FE131F92B8EA803F0203
DAE003EBC07F020F01FCC7383FF0FF023F01E0EC0FF94A01800203B5FC494848C9FC4901
F8824949824949824949824949824990CA7E494883A2484983485B1B7F485B481A3FA248
49181FA3485B1B0FA25AA298C7FC5CA2B5FCAE7EA280A2F307C07EA36C7FA21B0F6C6D19
80A26C1A1F6C7F1C006C6D606C6D187EA26D6C606D6D4C5A6D6D16036D6D4C5A6D6D4C5A
6D01FC4C5A6D6DEE7F806D6C6C6C4BC7FC6E01E0EC07FE020F01FEEC1FF80203903AFFE0
01FFF0020091B612C0033F93C8FC030715FCDB007F14E0040101FCC9FC525479D261>67
D<BA7E19FCF1FF801AF01AFCD8000701F0C7000F13FF060014C0071F7F070713F807017F
737F747E747F747F86747F747F8886888688A2757EA31D8087A21DC0A51DE0A387A963A3
1DC0A51D80A2631D00A3515AA2646264505B6264505B505B5090C7FCF2FFFE4F5B07075B
071F5B96B512C0060F91C8FCBB5A1AF01AC007FCC9FC19805B527CD167>I<932601FFFC
EC01C0047FD9FFC013030307B600F81307033F03FE131F92B8EA803F0203DAE003EBC07F
020F01FCC7383FF0FF023F01E0EC0FF94A01800203B5FC494848C9FC4901F88249498249
49824949824949824990CA7E494883A2484983485B1B7F485B481A3FA24849181FA3485B
1B0FA25AA298C8FC5CA2B5FCAE6C057FB712E0A280A36C94C7003FEBC000A36C7FA36C7F
A27E6C7FA26C7F6C7FA26D7E6D7F6D7F6D6D5E6D7F6D01FC93B5FC6D13FF6D6C6D5C6E01
F0EC07FB020F01FEEC1FF10203903AFFF001FFE0020091B6EAC07F033FEE001F030703FC
1307DB007F02E01301040149CAFC5B5479D26A>71 D<93380FFFC00303B6FC031F15E092
B712FC0203D9FC0013FF020F01C0010F13C0023F90C7000313F0DA7FFC02007F494848ED
7FFE4901E0ED1FFF49496F7F49496F7F4990C96C7F49854948707F4948707FA24849717E
48864A83481B804A83481BC0A2481BE04A83A2481BF0A348497113F8A5B51AFCAF6C1BF8
6E5FA46C1BF0A26E5F6C1BE0A36C6D4D13C0A26C6D4D1380A26C1B006C6D4D5A6E5E6C62
6D6C4C5B6D6D4B5B6D6D4B5B6D6D4B5B6D6D4B5B6D6D4B90C7FC6D6D4B5A6D01FF02035B
023F01E0011F13F0020F01FC90B512C0020390B7C8FC020016FC031F15E0030392C9FCDB
001F13E0565479D265>79 D<B700FC017FB600FE91B612F0A5D8003F01C0C8001F01E0C9
EBF8006F71EE0FC06D7161876F1C1F6D7196C7FC6F8373606D1E3E6F836D7160876F1CFC
6D666F4B801F016D66704A806E525A88704A17076E059F5F70021F80080F160F6E657002
3F806EDC3E074CC8FC8870027E5F6EDC7C03163E7002FC804F6C167E6E1C7C700101814F
6C16FC6E745B70010317016E4C6D5D060716C00580496D14036F63DDC00F16E04F6D1407
6F07F05BDDE01F170F6F92C76C5D1DF8DDF03E6E141F6F98C9FCDDF87E16FC067C6E5C6F
F1FE3EDDFCFC177E6F4A6E147C1DFFDDFFF06E14FC6F62A24E816F62A270496F5BA24E81
7061A295C97E7061A270487090CAFCA37048705AA24D1601040360A27048705A84537DD1
8B>87 D<EC7FFF0107B512F0013F14FE90B77E48D9E00F7F2703FE000113F0486C6D7F6E
EB3FFC48826E131F83707FA36C496D7FA26C90C7FC6C5AC9FCA6037FB5FC020FB6FC91B7
FC01071487013FEBF0074913803901FFFC004813F0485B485B485B4890C7FC5A5BA2485A
A45EA26D5C007F151D163D6C6C02797F6C6D01F113F86C9026C003E1EBFFE06C9026F81F
C014F06C90B5487EC6ED001F011F01FC010713E0010101E090C8FC3C387CB641>97
D<913801FFF8021FEBFF8091B612F0010315FC010F9038C00FFE903A1FFE0001FFD97FFC
491380D9FFF05B4817C048495B5C5A485BA2486F138091C7FC486F1300705A4892C8FC5B
A312FFAD127F7FA27EA2EF03E06C7F17076C6D15C07E6E140F6CEE1F806C6DEC3F006C6D
147ED97FFE5C6D6CEB03F8010F9038E01FF0010390B55A01001580023F49C7FC020113E0
33387CB63C>99 D<4DB47E0407B5FCA5EE001F1707B3A4913801FFE0021F13FC91B6FC01
0315C7010F9038E03FE74990380007F7D97FFC0101B5FC49487F4849143F484980485B83
485B5A91C8FC5AA3485AA412FFAC127FA36C7EA37EA26C7F5F6C6D5C7E6C6D5C6C6D49B5
FC6D6C4914E0D93FFED90FEFEBFF80903A0FFFC07FCF6D90B5128F0101ECFE0FD9003F13
F8020301C049C7FC41547CD24B>I<913803FFC0023F13FC49B6FC010715C04901817F90
3A3FFC007FF849486D7E49486D7E4849130F48496D7E48178048497F18C0488191C7FC48
17E0A248815B18F0A212FFA490B8FCA318E049CAFCA6127FA27F7EA218E06CEE01F06E14
037E6C6DEC07E0A26C6DEC0FC06C6D141F6C6DEC3F806D6CECFF00D91FFEEB03FE903A0F
FFC03FF8010390B55A010015C0021F49C7FC020113F034387CB63D>I<EB3FF0B5FCA512
03C6FCB3A4EE1FFC93B512C0030314F0030F8092391FE07FFC92393F001FFE037C8003F0
7FDAF1E081ECF3C0DAF7807F8502FFC7FC5CA25CA45CB3ACB6D8F807B612C0A542537BD2
4B>104 D<137F497E000313E0487FA2487FA76C5BA26C5BC613806DC7FC90C8FCADEB3F
F0B5FCA512017EB3B3A6B612E0A51B547BD325>I<EB3FF0B5FCA512017EB3B3B3B1B612
F0A51C537BD225>108 D<D93FF0D91FFCEDFFE0B591B500C0010713FE030302F0011F6D
7E030F6E017F8092271FE07FFCD9FF037F922A3F001FFE01F8007F0003027C9126FF03E0
80C602F06DD90780137FDAF1E0038FC77FDAF3C0159EDAF7806D01BC143F07FC8102FFC7
5C4A5EA24A5EA44A5EB3ACB6D8F807B6D8C03FB512FEA567367BB570>I<D93FF0EB1FFC
B591B512C0030314F0030F8092391FE07FFC92393F001FFE0003027C80C602F07FDAF1E0
81ECF3C0DAF7807F8502FFC7FC5CA25CA45CB3ACB6D8F807B612C0A542367BB54B>I<91
3801FFE0021F13FE91B612C0010315F0010F9038807FFC903A1FFC000FFED97FF86D6C7E
49486D7F48496D7F48496D7F4A147F48834890C86C7EA24883A248486F7EA3007F1880A4
00FF18C0AC007F1880A3003F18006D5DA26C5FA26C5F6E147F6C5F6C6D4A5A6C6D495B6C
6D495B6D6C495BD93FFE011F90C7FC903A0FFF807FFC6D90B55A010015C0023F91C8FC02
0113E03A387CB643>I<903A3FF001FFE0B5010F13FE033FEBFFC092B612F002F301017F
913AF7F8007FFE0003D9FFE0EB1FFFC602806D7F92C76C7F4A824A6E7F4A6E7FA2717FA2
85187F85A4721380AC1A0060A36118FFA2615F616E4A5BA26E4A5B6E4A5B6F495B6F4990
C7FC03F0EBFFFC9126FBFE075B02F8B612E06F1480031F01FCC8FC030313C092CBFCB1B6
12F8A5414D7BB54B>I<90397FE003FEB590380FFF80033F13E04B13F09238FE1FF89139
E1F83FFC0003D9E3E013FEC6ECC07FECE78014EF150014EE02FEEB3FFC5CEE1FF8EE0FF0
4A90C7FCA55CB3AAB612FCA52F367CB537>114 D<903903FFF00F013FEBFE1F90B7FC12
0348EB003FD80FF81307D81FE0130148487F4980127F90C87EA24881A27FA27F01F091C7
FC13FCEBFFC06C13FF15F86C14FF16C06C15F06C816C816C81C681013F1580010F15C013
00020714E0EC003F030713F015010078EC007F00F8153F161F7E160FA27E17E07E6D141F
17C07F6DEC3F8001F8EC7F0001FEEB01FE9039FFC00FFC6DB55AD8FC1F14E0D8F8071480
48C601F8C7FC2C387CB635>I<143EA6147EA414FEA21301A313031307A2130F131F133F
13FF5A000F90B6FCB8FCA426003FFEC8FCB3A9EE07C0AB011FEC0F8080A26DEC1F001580
6DEBC03E6DEBF0FC6DEBFFF86D6C5B021F5B020313802A4D7ECB34>I<B600F00107B5FC
A5C601F8C8EA7FE06EED3F00A26D6C153E187E013F167C6E15FC6D5E6F13016D5E6F1303
6D5E8117076D6D5C170F6D6D5C171F6D93C7FC6F5B027F143E6F137E023F147C6F13FCA2
6E6D5A16816EEBC1F016C36E5C16E76E5C16FF6E5CA26E91C8FCA36F5AA26F5AA26F5AA2
6F5AA26F5AA35E150F5E151F93C9FC5DD81FC0133E486C137E486C137C486C13FC5D1401
5D14034A5A6C48485A49485A263FC07FCAFCEB81FE6CB45A6C13F000035BC690CBFC404D
7DB447>121 D E end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%PaperSize: a4

%%EndSetup
%%Page: 1 1
1 0 bop 500 387 a Fz(On)44 b(Compact)i(Directed)f(Acyclic)g(W)-11
b(ord)44 b(Graphs)1018 679 y Fy(Maxime)27 b Fx(Cr)n(ochemore)i
Fy(and)e(Renaud)h Fx(V)2423 672 y(\023)2423 679 y(erin)1400
853 y Fw(Institut)d(Gaspard)h(Monge)1285 945 y(Univ)n(ersit)n(\023)-36
b(e)25 b(de)h(Marne-La-V)-6 b(all)n(\023)-36 b(ee,)957
1036 y(2,)26 b(rue)g(de)f(la)h(Butte)g(V)-6 b(erte,)25
b(F-93160)j(Noisy-Le-Grand.)1296 1127 y Fv(http://www-igm.univ-mlv.fr)
602 1401 y Fu(Abstract.)42 b Fw(The)17 b(Directed)g(Acyclic)g(W)-6
b(ord)17 b(Graph)g(\(D)n(A)-9 b(W)n(G\))17 b(is)g(a)h(space-e\016cien)n
(t)602 1492 y(data)42 b(structure)f(to)h(treat)g(and)f(analyze)i(rep)r
(etitions)f(in)g(a)g(text,)g(esp)r(ecially)602 1583 y(in)35
b(DNA)g(genomic)g(sequences.)i(Here,)e(w)n(e)i(consider)f(the)f
(Compact)h(Directed)602 1675 y(Acyclic)f(W)-6 b(ord)34
b(Graph)h(of)h(a)f(w)n(ord.)h(W)-6 b(e)35 b(giv)n(e)g(the)f(\014rst)h
(direct)g(algorithm)h(to)602 1766 y(construct)26 b(it.)h(It)g(runs)f
(in)h(time)f(linear)h(in)g(the)f(length)h(of)h(the)e(string)h(on)g(a)g
(\014xed)602 1857 y(alphab)r(et.)i(Our)g(implemen)n(tation)f(requires)i
(half)g(the)f(memory)e(space)j(used)f(b)n(y)602 1949
y(D)n(A)-9 b(W)n(Gs.)365 2247 y Ft(1)112 b(In)m(tro)s(duction)365
2463 y Fy(One)38 b(of)g(the)h(most)f(surprising)e(facts)i(related)g(to)
g(pattern)g(matc)n(hing)f(and)h(disco)n(v)n(ered)365
2562 y(b)n(y)c(Ehrenfeuc)n(h)n(t)g Fs(et)i(al.)g Fy([2)o(])f(is)f(that)
h(the)g(size)f(of)h(the)g(minimal)f(automaton)g(accepting)365
2662 y(the)f(su\016xes)f(of)g(a)g(w)n(ord)f(is)h(linear.)f(The)i
(surprise)e(is)h(due)g(to)g(the)h(maximal)e(n)n(um)n(b)r(er)h(of)365
2761 y(sub)n(w)n(ords)f(that)h(ma)n(y)g(o)r(ccur)g(in)g(a)g(w)n(ord:)f
(it)i(is)f(quadratic)g(according)e(to)i(the)h(length)f(of)365
2861 y(the)j(w)n(ord.)f(This)h(is)f(ob)n(viously)g(true)g(if)i(the)f
(alphab)r(et)f(is)h(un)n(b)r(ounded,)g(but)h(still)f(holds)365
2961 y(if)c(the)f(alphab)r(et)g(con)n(tains)f(at)h(least)f(t)n(w)n(o)h
(letters.)f(In)i(addition)e(to)h(the)h(previous)d(result,)365
3060 y(Ehrenfeuc)n(h)n(t)e Fs(et)i(al.)f Fy(pro)n(v)n(ed)d(that)i(the)h
(automaton)e(can)g(b)r(e)i(built)f(in)h(linear)e(time,)h(whic)n(h)365
3160 y(is)i(indeed)g(a)f(consequence)f(of)i(the)g(previous)e(fact)i
(but)g(do)r(es)g(not)f(come)g(readily)g(from)g(it.)490
3263 y(In)35 b(the)g(presen)n(t)f(article,)g(w)n(e)g(consider)g(the)h
(compact)f(implemen)n(tation)h(of)g(the)g(au-)365 3362
y(tomaton)h(and)g(sho)n(w)g(that)g(it)h(has)f(a)g(direct)g
(construction)g(that)g(runs)g(in)h(linear)f(time.)365
3462 y(F)-7 b(ast)26 b(and)f(space-economical)f(metho)r(ds)i(for)f
(this)h(construction)f(are)f(imp)r(ortan)n(t)i(b)r(ecause)365
3562 y(the)33 b(automaton)e(serv)n(es)f(as)h(an)h(index)g(on)f(the)i
(underlying)e(w)n(ord,)g(and,)h(as)f(suc)n(h,)h(is)f(in-)365
3661 y(v)n(olv)n(ed)c(in)g(sev)n(eral)f(com)n(binatorial)g(algorithms)g
(on)h(w)n(ords.)490 3764 y(Historically)-7 b(,)29 b(the)i(\014rst)f
(linear-size)f(graph)h(to)g(represen)n(t)f(the)i(sub)n(w)n(ords)e(of)h
(a)g(w)n(ord,)365 3864 y(called)d(the)h Fs(Dir)l(e)l(cte)l(d)h(A)l
(cyclic)h(Wor)l(d)g(Gr)l(aph)f Fy(\(D)n(A)-9 b(W)n(G\),)28
b(w)n(as)e(describ)r(ed)h(in)g([2])g(together)365 3964
y(with)g(a)e(linear-time)g(construction.)h(When)g(terminal)g(states)f
(are)g(added)h(to)g(the)g(D)n(A)-9 b(W)n(G,)365 4063
y(as)36 b(sho)n(wn)f(in)h([8],)g(the)h(structure)e(b)r(ecomes)h(the)h
(minimal)f(automaton)f(accepting)h(the)365 4163 y(su\016xes)31
b(of)f(the)h(w)n(ord.)f(Regarded)f(as)h(an)g(automaton)g(accepting)g
(the)h(sub)n(w)n(ords)e(of)i(the)365 4262 y(w)n(ord,)20
b Fs(i.e.)i Fy(setting)e(all)g(states)g(as)g(terminal)g(states,)g(the)h
(D)n(A)-9 b(W)n(G)21 b(is)f(not)g(alw)n(a)n(ys)f(a)h(minimal)365
4362 y(automaton.)32 b(Indeed,)g(this)h(latter)f(automaton)g(can)g(b)r
(e)g(sligh)n(tly)g(smaller,)g(but)g(its)h(con-)365 4462
y(struction)c(satis\014es)f(the)h(same)f(prop)r(erties)g(\([8,)h(3)o(,)
g(9]\))g(though)g(the)g(algorithms)e(b)r(ecome)365 4561
y(a)g(bit)i(more)d(tric)n(ky)-7 b(.)490 4664 y(Basically)g(,)33
b(D)n(A)-9 b(W)n(Gs)35 b(pro)n(vide)f(an)h(implemen)n(tation)g(of)f
(indexes)h(on)g(texts)g([4)o(].)g(The)365 4764 y(index)30
b(on)g(a)g(text)g Fr(T)41 b Fy(helps)30 b(searc)n(hing)e(it)j(for)e(v)
-5 b(arious)29 b(patterns.)g(F)-7 b(or)30 b(instance,)f(it)i(leads)365
4863 y(to)i(an)g(e\016cien)n(t)g(solution)f(to)h(the)g(string-matc)n
(hing)e(problem,)i(searc)n(hing)e(text)i Fr(T)44 b Fy(for)33
b(a)p eop
%%Page: 2 2
2 1 bop 681 387 a Fy(w)n(ord)26 b Fr(w)r Fy(.)h(The)g(t)n(ypical)g
(running)g(time)g(of)g(a)g(query)f(is)h Fq(O)r Fy(\()p
Fq(j)p Fr(w)r Fq(j)p Fy(\))i(on)d(a)h(\014xed)g(alphab)r(et,)g(and)681
487 y(is)g Fq(O)r Fy(\()p Fq(j)p Fr(w)r Fq(j)14 b Fy(log)i
Fq(j)p Fr(\006)5 b Fq(j)p Fy(\))27 b(if)h(the)g(alphab)r(et)g
Fr(\006)k Fy(of)c(the)g(text)g(is)f(un)n(b)r(ounded.)805
600 y(Man)n(y)18 b(other)g(e\016cien)n(t)g(solutions)g(to)g(problems)g
(on)g(w)n(ords)f(are)g(applications)h(of)g(D)n(A)-9 b(W)n(Gs.)681
699 y(They)27 b(include)h(\(see)g([12)o(]\):)g(computing)f(the)h(n)n
(um)n(b)r(er)f(of)h(sub)n(w)n(ords)e(of)h(a)g(w)n(ord,)g(comput-)681
799 y(ing)c(the)i(longest)e(rep)r(eated)h(sub)n(w)n(ord)e(of)i(a)f(w)n
(ord,)g(bac)n(kw)n(ard)f(D)n(A)-9 b(W)n(G-matc)n(hing,)24
b(\014nding)681 899 y(rep)r(etitions)39 b(in)g(w)n(ords)e([6],)i(searc)
n(hing)e(for)i(a)f(square)g([7,)h(9)o(],)g(computing)g(the)h(longest)
681 998 y(common)c(sub)n(w)n(ord)f(of)h(a)h(\014nite)g(set)f(of)h(w)n
(ords)e(and)h(on-line)g(sub)n(w)n(ord)f(matc)n(hing)h([10],)681
1098 y(appro)n(ximate)26 b(string-matc)n(hing)g([21)o(].)805
1211 y(The)37 b Fs(su\016x)h(tr)l(e)l(e)e Fy(is)h(an)g(alternativ)n(e)f
(represen)n(tation)f(of)i(the)g(sub)n(w)n(ords)e(of)i(a)g(w)n(ord)681
1310 y(that)c(shares)f(with)i(the)g(D)n(A)-9 b(W)n(G)33
b(essen)n(tially)f(the)i(same)f(applications.)f(McCreigh)n(t)h([18)o(])
681 1410 y(in)n(tro)r(duced)28 b(the)g(notion)g(and)f(ga)n(v)n(e)g(an)g
(e\016cien)n(t)h(construction)g(after)f(the)i(seminal)e(w)n(ork)681
1510 y(of)g(W)-7 b(einer)28 b([22)o(])g(on)f(a)g(similar)g(structure.)
805 1623 y(Su\016x)j(trees)e(ha)n(v)n(e)g(b)r(een)h(more)f(extensiv)n
(ely)g(studied)i(than)f(D)n(A)-9 b(W)n(Gs,)29 b(probably)f(b)r(e-)681
1722 y(cause)21 b(they)h(displa)n(y)f(p)r(ositions)h(of)g(the)g(w)n
(ord)f(in)h(a)g(simpler)g(w)n(a)n(y)e(although)i(the)g(branc)n(hing)681
1822 y(from)g(no)r(des)g(is)g(not)g(uniform)h(as)e(it)i(is)f(from)g
(states)g(of)g(D)n(A)-9 b(W)n(Gs.)23 b(Ap)r(ostolico)e([1])h(lists)h(o)
n(v)n(er)681 1921 y(fort)n(y)h(references)g(on)g(su\016x)h(trees,)g
(and)f(Man)n(b)r(er)h(and)f(My)n(ers)g([17)o(])h(men)n(tion)g(sev)n
(eral)e(oth-)681 2021 y(ers)k(\(see)h(also)f([19)o(]\).)i(Sev)n(eral)e
(v)-5 b(arian)n(ts)26 b(or)i(implemen)n(tations)g(of)g(su\016x)g(trees)
f(ha)n(v)n(e)g(b)r(een)681 2121 y(dev)n(elop)r(ed,)e(lik)n(e)g
Fs(su\016x)i(arr)l(ays)g Fy([17)o(],)f Fs(PEST)-6 b(ry)26
b Fy([16)o(],)g Fs(su\016x)h(c)l(actus)e Fy([15)o(],)h(or)f
Fs(su\016x)i(binary)681 2220 y(se)l(ar)l(ch)e(tr)l(e)l(es)d
Fy([14)o(].)g(Ukk)n(onen)g([20)o(])g(designs)g(an)g(on-line)g
(construction)f(of)h(su\016x)g(trees,)g(and)681 2320
y(F)-7 b(arac)n(h)29 b([13)o(])i(prop)r(oses)e(a)h(no)n(v)n(el)f
(approac)n(h)g(leading)h(to)g(a)g(linear-time)g(construction)g(on)681
2420 y(in)n(teger)c(alphab)r(ets.)805 2532 y(In)37 b(computational)f
(biology)-7 b(,)36 b(DNA)i(sequences)e(are)g(often)h(only)g(view)n(ed)f
(as)g(w)n(ords)681 2632 y(o)n(v)n(er)e(the)j(alphab)r(et)f
Fq(f)p Fr(a;)14 b(c;)g(g)s(;)g(t)p Fq(g)35 b Fy(of)h(n)n(ucleotides.)g
(In)h(this)f(form,)g(they)h(are)e(ob)5 b(jects)36 b(for)681
2732 y(linguistic)20 b(and)g(statistic)g(analysis.)f(F)-7
b(or)20 b(this)g(purp)r(ose,)g(su\016x)g(automata)f(\(or)h(su\016x)g
(trees\))681 2831 y(are)29 b(extremely)i(useful)g(data)f(structures,)g
(but)h(the)g(b)r(ottlenec)n(k)g(to)g(using)f(them)h(is)g(their)681
2931 y(size.)26 b(The)g(indexes)g(has)g(to)g(b)r(e)g(k)n(ept)h(in)f
(main)g(memory)g(and)g(their)g(sizes)g(limit)h(their)f(use.)681
3031 y(The)e(size)f(of)h(a)n(v)-5 b(ailable)23 b(sequences)g(is)g
(steadily)h(gro)n(wing,)e(and)h(therefore)g(sa)n(ving)g(memory)681
3130 y(space)k(is)g(w)n(an)n(ted)g(b)r(oth)h(for)f(the)h(construction)f
(of)g(the)h(index)g(and)g(for)f(its)g(use.)805 3243 y(The)k
Fs(Comp)l(act)i(Dir)l(e)l(cte)l(d)g(A)l(cyclic)g(Wor)l(d)g(Gr)l(aph)f
Fy(\(CD)n(A)-9 b(W)n(G\))32 b(k)n(eeps)d(the)i(direct)g(ac-)681
3343 y(cess)f(to)g(information)g(while)g(requiring)g(less)g(memory)f
(space.)h(The)g(structure)g(has)g(b)r(een)681 3442 y(in)n(tro)r(duced)
20 b(b)n(y)g(Blumer)g Fs(et)i(al.)k Fy([4,)20 b(5].)g(The)g(implemen)n
(tation)h(is)f(obtained)g(b)n(y)g(deleting)g(all)681
3542 y(states)28 b(of)g(outdegree)f(one)h(and)g(their)h(corresp)r
(onding)d(transitions)i(\(excepting)g(terminal)681 3641
y(states\).)805 3754 y(W)-7 b(e)37 b(presen)n(t)e(an)h(algorithm)f
(that)h(builds)h(directly)f(compact)f(D)n(A)-9 b(W)n(Gs.)36
b(This)g(con-)681 3854 y(struction)c(a)n(v)n(oids)f(constructing)g(the)
i(D)n(A)-9 b(W)n(G)33 b(\014rst,)f(whic)n(h)h(mak)n(es)e(it)i(suitable)
f(for)g(the)681 3954 y(presen)n(tly)h(a)n(v)-5 b(ailable)32
b(DNA)j(sequences)e(\(ab)r(out)i(1)p Fr(:)p Fy(5)e(million)h(n)n
(ucleotides)f(long)g(for)g(the)681 4053 y(longest)40
b(sequences\).)g(Exp)r(erimen)n(ts)f(sho)n(w)h(that)h(our)f(implemen)n
(tation)g(sa)n(v)n(es)f(half)i(of)681 4153 y(the)31 b(memory)f(space)g
(required)g(for)h(ordinary)e(D)n(A)-9 b(W)n(Gs)31 b(and)g(su\016x)f
(trees.)h(A)n(t)g(the)g(same)681 4252 y(time,)e(the)f(reduction)g(of)g
(the)g(n)n(um)n(b)r(er)g(of)g(states)g(\(2)p Fr(=)p Fy(3)f(less\))h
(and)g(of)g(transitions)g(\(ab)r(out)681 4352 y(half)35
b(less\))g(mak)n(es)f(the)i(applications)e(run)h(faster.)g(Time)h(and)f
(space)f(are)g(sa)n(v)n(ed)g(sim)n(ul-)681 4452 y(taneously)-7
b(.)28 b(The)h(memory)f(space)g(used)h(b)n(y)g(our)f(implemen)n(tation)
h(of)g(compact)g(D)n(A)-9 b(W)n(Gs)681 4551 y(requires)28
b(ab)r(out)h(6)p Fr(n)g Fy(in)n(tegers)f(for)h(a)g(w)n(ord)g(of)g
(length)h Fr(n)p Fy(.)f(This)g(is)h(to)f(b)r(e)h(compared)e(with)681
4651 y(7)p Fr(n)d Fy(for)h(D)n(A)-9 b(W)n(Gs,)26 b(8)p
Fr(n)f Fy(for)g(su\016x)h(trees.)g(It)g(is)g(just)g(2)p
Fr(n)g Fy(for)f(su\016x)h(arra)n(ys,)d(but)k(this)f(is)g(paid)681
4751 y(b)n(y)h(a)g(slo)n(w)n(er)f(access)g(to)i(sub)n(w)n(ords.)805
4863 y(This)j(article)f(is)h(organized)e(as)i(follo)n(ws.)f(In)h
(Section)25 b(2)30 b(w)n(e)h(recall)f(the)h(basic)f(notions)p
eop
%%Page: 3 3
3 2 bop 365 387 a Fy(on)22 b(D)n(A)-9 b(W)n(Gs.)23 b(Section)i(3)d(in)n
(tro)r(duces)g(the)g(compact)g(D)n(A)-9 b(W)n(G,)23 b(also)e(called)h
(compact)g(su\016x)365 487 y(automaton,)27 b(and)g(con)n(tains)f(the)i
(b)r(ounds)f(on)g(its)g(size.)g(W)-7 b(e)28 b(sho)n(w)e(in)i(Section)c
(3.4)j(ho)n(w)f(to)365 587 y(build)c(the)g(compact)e(D)n(A)-9
b(W)n(G)22 b(from)f(the)h(D)n(A)-9 b(W)n(G)21 b(in)h(linear)e(time)i
(with)g(resp)r(ect)f(to)g(the)h(size)365 686 y(of)j(this)f(latter)g
(structure.)g(Direct)h(construction)f(algorithm)f(for)h(the)h(compact)f
(D)n(A)-9 b(W)n(G)24 b(is)365 786 y(giv)n(en)j(in)h(Section)d(4.)365
1026 y Ft(2)112 b(De\014nitions)365 1197 y Fy(Let)31
b Fr(\006)k Fy(b)r(e)c(a)f(nonempt)n(y)g(alphab)r(et)h(and)f
Fr(\006)1776 1167 y Fp(\003)1845 1197 y Fy(the)h(set)f(of)h(w)n(ords)e
(o)n(v)n(er)f Fr(\006)5 b Fy(,)31 b(with)g Fr(")f Fy(as)g(the)365
1296 y(empt)n(y)h(w)n(ord.)f(If)h Fr(w)i Fy(is)e(a)f(w)n(ord)g(in)g
Fr(\006)1569 1266 y Fp(\003)1607 1296 y Fy(,)h Fq(j)p
Fr(w)r Fq(j)h Fy(denotes)e(its)h(length,)g Fr(w)2561
1308 y Fo(i)2619 1296 y Fy(its)g Fr(i)2767 1266 y Fo(th)2866
1296 y Fy(letter,)f(and)365 1396 y Fr(w)424 1408 y Fo(i::j)550
1396 y Fy(its)d(factor)g(\(sub)n(w)n(ord\))f Fr(w)1354
1408 y Fo(i)1382 1396 y Fr(w)1441 1408 y Fo(i)p Fn(+1)1567
1396 y Fr(:)14 b(:)g(:)g(w)1737 1408 y Fo(j)1772 1396
y Fy(.)28 b(If)f Fr(w)f Fy(=)d Fr(xy)s(z)30 b Fy(with)e
Fr(x;)14 b(y)s(;)g(z)26 b Fq(2)e Fr(\006)2806 1366 y
Fp(\003)2844 1396 y Fy(,)j(then)h Fr(x)p Fy(,)f Fr(y)s
Fy(,)365 1496 y(and)d Fr(z)k Fy(are)23 b(factors)g(or)g(sub)n(w)n(ords)
f(of)i Fr(w)r Fy(,)h Fr(x)g Fy(is)f(a)f(pre\014x)h(of)g
Fr(w)r Fy(,)h(and)f Fr(z)j Fy(is)d(a)g(su\016x)g(of)g
Fr(w)r Fy(.)g Fr(S)5 b Fy(\()p Fr(x)p Fy(\))365 1595
y(denotes)28 b(the)g(set)f(of)h(all)f(su\016xes)g(of)h
Fr(x)g Fy(and)f Fr(F)12 b Fy(\()p Fr(x)p Fy(\))29 b(the)f(set)g(of)f
(its)h(factors.)490 1695 y(F)-7 b(or)27 b(an)h(automaton,)f(the)i
(tuple)g(\()p Fr(p;)14 b(a;)g(q)s Fy(\))28 b(denotes)g(a)f(transition)h
(of)g(lab)r(el)g Fr(a)g Fy(starting)365 1795 y(at)e Fr(p)g
Fy(and)g(ending)g(at)g Fr(q)s Fy(.)g(A)g(roman)f(letter)h(is)g(used)g
(for)g(mono-letter)f(transitions,)g(a)h(greek)365 1894
y(letter)35 b(for)f(m)n(ulti-letter)g(transitions.)g(Moreo)n(v)n(er,)e
(\()p Fr(p;)14 b(\013)p Fy(])34 b(denotes)h(a)f(transition)f(from)h
Fr(p)365 1994 y Fy(for)26 b(whic)n(h)h Fr(\013)g Fy(is)g(a)f(pre\014x)g
(of)h(its)g(lab)r(el.)g(In)f(this)h(notation)f(the)i(target)d(state)i
(is)f(not)h(giv)n(en.)490 2129 y(Here,)g(w)n(e)g(recall)g(the)h
(de\014nition)f(of)h(the)g(D)n(A)-9 b(W)n(G,)28 b(and)f(a)g(theorem)g
(ab)r(out)h(its)f(imple-)365 2229 y(men)n(tation)h(and)f(size)g(b)r
(oth)h(pro)n(v)n(ed)e(in)i([3])g(and)f([9].)365 2366
y Fm(De\014nition)15 b(1.)41 b(The)28 b(Su\016x)h(Automaton)23
b Fy(of)i(a)f(w)n(ord)f Fr(x)p Fy(,)i(denoted)g Fs(D)n(A)-8
b(WG)o Fy(\()p Fr(x)p Fy(\),)25 b(is)g(the)365 2466 y(minimal)j
(deterministic)h(automaton)e(\(not)h(necessarily)e(complete\))i(that)g
(accepts)f Fr(S)5 b Fy(\()p Fr(x)p Fy(\),)365 2566 y(the)28
b(\(\014nite\))h(set)f(of)f(su\016xes)g(of)h Fr(x)p Fy(.)610
3264 y
 tx@Dict begin tx@NodeDict begin { 3.61111 2 div 6.83331 0.0 add 2
div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add 2.6 add } /TheNodeaI 11 {
InitCnode  } NewNode end end
 610 3264 a @beginspecial @setspecial
 tx@Dict begin STP newpath 2.6 SLW 0. setgray  3.61111 2 div 6.83331
0.0 add 2 div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add CLW 2 div add 0
360 arc closepath gsave 2.6 SLW 0. setgray 0 setlinecap stroke  grestore
gsave 1.0 SLW 1. setgray stroke grestore end
 
@endspecial
Fy(I)841 3263 y
 tx@Dict begin tx@NodeDict begin { 5.00002 2 div 6.44444 0.0 add 2
div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add 0.8 add } /TheNodea1 11 {
InitCnode  } NewNode end end
 841 3263 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  5.00002 2 div 6.44444
0.0 add 2 div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add CLW 2 div add 0
360 arc closepath gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore
end


@endspecial Fy(1)1077 3263 y
 tx@Dict begin tx@NodeDict begin { 5.00002 2 div 6.44444 0.0 add 2
div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add 0.8 add } /TheNodea2 11 {
InitCnode  } NewNode end end
 1077 3263 a @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  5.00002 2 div 6.44444
0.0 add 2 div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add CLW 2 div add 0
360 arc closepath gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore
end
 
@endspecial Fy(2)1313 3263 y
 tx@Dict begin tx@NodeDict begin { 5.00002 2 div 6.44444 0.0 add 2
div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add 0.8 add } /TheNodea3 11 {
InitCnode  } NewNode end end
 1313 3263 a
@beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  5.00002 2 div 6.44444
0.0 add 2 div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add CLW 2 div add 0
360 arc closepath gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore
end
 
@endspecial Fy(3)1549 3263
y
 tx@Dict begin tx@NodeDict begin { 5.00002 2 div 6.44444 0.0 add 2
div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add 0.8 add } /TheNodea4 11 {
InitCnode  } NewNode end end
 1549 3263 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  5.00002 2 div 6.44444
0.0 add 2 div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add CLW 2 div add 0
360 arc closepath gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore
end
 
@endspecial
Fy(4)1785 3263 y
 tx@Dict begin tx@NodeDict begin { 5.00002 2 div 6.44444 0.0 add 2
div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add 0.8 add } /TheNodea5 11 {
InitCnode  } NewNode end end
 1785 3263 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  5.00002 2 div 6.44444
0.0 add 2 div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add CLW 2 div add 0
360 arc closepath gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore
end


@endspecial Fy(5)2022 3263 y
 tx@Dict begin tx@NodeDict begin { 5.00002 2 div 6.44444 0.0 add 2
div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add 0.8 add } /TheNodea6 11 {
InitCnode  } NewNode end end
 2022 3263 a @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  5.00002 2 div 6.44444
0.0 add 2 div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add CLW 2 div add 0
360 arc closepath gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore
end
 
@endspecial Fy(6)2258 3263 y
 tx@Dict begin tx@NodeDict begin { 5.00002 2 div 6.44444 0.0 add 2
div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add 0.8 add } /TheNodea7 11 {
InitCnode  } NewNode end end
 2258 3263 a
@beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  5.00002 2 div 6.44444
0.0 add 2 div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add CLW 2 div add 0
360 arc closepath gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore
end
 
@endspecial Fy(7)2494 3263
y
 tx@Dict begin tx@NodeDict begin { 5.00002 2 div 6.44444 0.0 add 2
div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add 0.8 add } /TheNodea9 11 {
InitCnode  } NewNode end end
 2494 3263 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  5.00002 2 div 6.44444
0.0 add 2 div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add CLW 2 div add 0
360 arc closepath gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore
end
 
@endspecial
Fy(9)2724 3264 y
 tx@Dict begin tx@NodeDict begin { 6.5278 2 div 6.83331 0.0 add 2 div
2 copy 0.0 sub 4 2 roll Pyth 3.0 add 2.6 add } /TheNodeaF 11 { InitCnode
 } NewNode end end
 2724 3264 a @beginspecial @setspecial
 tx@Dict begin STP newpath 2.6 SLW 0. setgray  6.5278 2 div 6.83331
0.0 add 2 div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add CLW 2 div add 0
360 arc closepath gsave 2.6 SLW 0. setgray 0 setlinecap stroke  grestore
gsave 1.0 SLW 1. setgray stroke grestore end


@endspecial Fy(F)1313 3570 y
 tx@Dict begin tx@NodeDict begin { 5.00002 2 div 6.44444 0.0 add 2
div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add 0.8 add } /TheNodea8 11 {
InitCnode  } NewNode end end
 1313 3570 a @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  5.00002 2 div 6.44444
0.0 add 2 div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add CLW 2 div add 0
360 arc closepath gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore
end
 
@endspecial Fy(8)2001 3570 y
 tx@Dict begin tx@NodeDict begin { 10.00003 2 div 6.44444 0.0 add 2
div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add 0.8 add } /TheNodea10 11 {
InitCnode  } NewNode end end
 2001 3570 a
@beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  10.00003 2 div 6.44444
0.0 add 2 div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add CLW 2 div add 0
360 arc closepath gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore
end
 
@endspecial Fy(10)625 3590
y
 tx@Dict begin gsave STV newpath 1.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 /TheNodeaI /TheNodea1 InitNC
{ NCLine  } if end gsave 1.0 SLW 0. setgray 0 setlinecap stroke  grestore
 grestore end
 625 3590 a 625 3590 a
 tx@Dict begin tx@NodeDict begin /t 0.5  def LPutCoor end PutBegin
 end
 625 3590 a 625 3590 a
 tx@Dict begin langle Rot  end
 625 3590
a 625 3590 a
 tx@Dict begin { 3.0 4.72495 3.87498 2.0 langle 90 add  langle  sub
Uput exch pop add a PtoC h1 add exch w1 add exch } PutCoor PutBegin
 end
 625 3590 a 605 3598 a Fv(g)625 3590 y
 tx@Dict begin PutEnd  end
 625
3590 a 625 3590 a
 tx@Dict begin langle neg Rot  end
 625 3590 a 625 3590 a
 tx@Dict begin PutEnd  end
 625 3590 a 625
3590 a
 tx@Dict begin gsave STV newpath 1.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 /TheNodea1 /TheNodea2 InitNC
{ NCLine  } if end gsave 1.0 SLW 0. setgray 0 setlinecap stroke  grestore
 grestore end
 625 3590 a 625 3590 a
 tx@Dict begin tx@NodeDict begin /t 0.5  def LPutCoor end PutBegin
 end
 625 3590 a 625 3590 a
 tx@Dict begin langle Rot  end
 625
3590 a 625 3590 a
 tx@Dict begin { 3.0 4.72495 4.98216 0.0 langle 90 add  langle  sub
Uput exch pop add a PtoC h1 add exch w1 add exch } PutCoor PutBegin
 end
 625 3590 a 605 3611 a Fv(t)625 3590
y
 tx@Dict begin PutEnd  end
 625 3590 a 625 3590 a
 tx@Dict begin langle neg Rot  end
 625 3590 a 625 3590 a
 tx@Dict begin PutEnd  end
 625 3590
a 625 3590 a
 tx@Dict begin gsave STV newpath 1.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 /TheNodea2 /TheNodea3 InitNC
{ NCLine  } if end gsave 1.0 SLW 0. setgray 0 setlinecap stroke  grestore
 grestore end
 625 3590 a 625 3590 a
 tx@Dict begin tx@NodeDict begin /t 0.5  def LPutCoor end PutBegin
 end
 625 3590 a 625 3590
a
 tx@Dict begin langle Rot  end
 625 3590 a 625 3590 a
 tx@Dict begin { 3.0 4.72495 3.87498 0.0 langle 90 add  langle  sub
Uput exch pop add a PtoC h1 add exch w1 add exch } PutCoor PutBegin
 end
 625 3590 a 605 3606 a Fv(a)625
3590 y
 tx@Dict begin PutEnd  end
 625 3590 a 625 3590 a
 tx@Dict begin langle neg Rot  end
 625 3590 a 625 3590 a
 tx@Dict begin PutEnd  end
 625
3590 a 625 3590 a
 tx@Dict begin gsave STV newpath 1.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 /TheNodea3 /TheNodea4 InitNC
{ NCLine  } if end gsave 1.0 SLW 0. setgray 0 setlinecap stroke  grestore
 grestore end
 625 3590 a 625 3590 a
 tx@Dict begin tx@NodeDict begin /t 0.5  def LPutCoor end PutBegin
 end
 625 3590 a 625
3590 a
 tx@Dict begin langle Rot  end
 625 3590 a 625 3590 a
 tx@Dict begin { 3.0 4.72495 3.87498 2.0 langle 90 add  langle  sub
Uput exch pop add a PtoC h1 add exch w1 add exch } PutCoor PutBegin
 end
 625 3590 a 605 3598 a Fv(g)625
3590 y
 tx@Dict begin PutEnd  end
 625 3590 a 625 3590 a
 tx@Dict begin langle neg Rot  end
 625 3590 a 625 3590 a
 tx@Dict begin PutEnd  end
 625
3590 a 625 3590 a
 tx@Dict begin gsave STV newpath 1.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 /TheNodea4 /TheNodea5 InitNC
{ NCLine  } if end gsave 1.0 SLW 0. setgray 0 setlinecap stroke  grestore
 grestore end
 625 3590 a 625 3590 a
 tx@Dict begin tx@NodeDict begin /t 0.5  def LPutCoor end PutBegin
 end
 625 3590 a 625
3590 a
 tx@Dict begin langle Rot  end
 625 3590 a 625 3590 a
 tx@Dict begin { 3.0 4.72495 4.98216 0.0 langle 90 add  langle  sub
Uput exch pop add a PtoC h1 add exch w1 add exch } PutCoor PutBegin
 end
 625 3590 a 605 3611 a Fv(t)625
3590 y
 tx@Dict begin PutEnd  end
 625 3590 a 625 3590 a
 tx@Dict begin langle neg Rot  end
 625 3590 a 625 3590 a
 tx@Dict begin PutEnd  end
 625
3590 a 625 3590 a
 tx@Dict begin gsave STV newpath 1.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 /TheNodea5 /TheNodea6 InitNC
{ NCLine  } if end gsave 1.0 SLW 0. setgray 0 setlinecap stroke  grestore
 grestore end
 625 3590 a 625 3590 a
 tx@Dict begin tx@NodeDict begin /t 0.5  def LPutCoor end PutBegin
 end
 625 3590 a 625
3590 a
 tx@Dict begin langle Rot  end
 625 3590 a 625 3590 a
 tx@Dict begin { 3.0 4.72495 3.87498 0.0 langle 90 add  langle  sub
Uput exch pop add a PtoC h1 add exch w1 add exch } PutCoor PutBegin
 end
 625 3590 a 605 3606 a Fv(a)625
3590 y
 tx@Dict begin PutEnd  end
 625 3590 a 625 3590 a
 tx@Dict begin langle neg Rot  end
 625 3590 a 625 3590 a
 tx@Dict begin PutEnd  end
 625
3590 a 625 3590 a
 tx@Dict begin gsave STV newpath 1.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 /TheNodea6 /TheNodea7 InitNC
{ NCLine  } if end gsave 1.0 SLW 0. setgray 0 setlinecap stroke  grestore
 grestore end
 625 3590 a 625 3590 a
 tx@Dict begin tx@NodeDict begin /t 0.5  def LPutCoor end PutBegin
 end
 625 3590 a 625
3590 a
 tx@Dict begin langle Rot  end
 625 3590 a 625 3590 a
 tx@Dict begin { 3.0 4.72495 3.87498 0.0 langle 90 add  langle  sub
Uput exch pop add a PtoC h1 add exch w1 add exch } PutCoor PutBegin
 end
 625 3590 a 605 3606 a Fv(a)625
3590 y
 tx@Dict begin PutEnd  end
 625 3590 a 625 3590 a
 tx@Dict begin langle neg Rot  end
 625 3590 a 625 3590 a
 tx@Dict begin PutEnd  end
 625
3590 a 625 3590 a
 tx@Dict begin gsave STV newpath 1.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 /TheNodea7 /TheNodea9 InitNC
{ NCLine  } if end gsave 1.0 SLW 0. setgray 0 setlinecap stroke  grestore
 grestore end
 625 3590 a 625 3590 a
 tx@Dict begin tx@NodeDict begin /t 0.5  def LPutCoor end PutBegin
 end
 625 3590 a 625
3590 a
 tx@Dict begin langle Rot  end
 625 3590 a 625 3590 a
 tx@Dict begin { 3.0 4.72495 3.87498 0.0 langle 90 add  langle  sub
Uput exch pop add a PtoC h1 add exch w1 add exch } PutCoor PutBegin
 end
 625 3590 a 605 3606 a Fv(a)625
3590 y
 tx@Dict begin PutEnd  end
 625 3590 a 625 3590 a
 tx@Dict begin langle neg Rot  end
 625 3590 a 625 3590 a
 tx@Dict begin PutEnd  end
 625
3590 a 625 3590 a
 tx@Dict begin gsave STV newpath 1.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 /TheNodea9 /TheNodeaF InitNC
{ NCLine  } if end gsave 1.0 SLW 0. setgray 0 setlinecap stroke  grestore
 grestore end
 625 3590 a 625 3590 a
 tx@Dict begin tx@NodeDict begin /t 0.5  def LPutCoor end PutBegin
 end
 625 3590 a 625
3590 a
 tx@Dict begin langle Rot  end
 625 3590 a 625 3590 a
 tx@Dict begin { 3.0 4.72495 3.87498 0.0 langle 90 add  langle  sub
Uput exch pop add a PtoC h1 add exch w1 add exch } PutCoor PutBegin
 end
 625 3590 a 605 3606 a Fv(c)625
3590 y
 tx@Dict begin PutEnd  end
 625 3590 a 625 3590 a
 tx@Dict begin langle neg Rot  end
 625 3590 a 625 3590 a
 tx@Dict begin PutEnd  end
 625
3590 a 625 3590 a
 tx@Dict begin gsave STV newpath 1.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 /TheNodea8 /TheNodea4 InitNC
{ GetAngle dup -40.  add /AngleA ED -40.  sub 180 add /AngleB ED 0.67
 0.67  NCCurve  } if end gsave 1.0 SLW 0. setgray 0 setlinecap stroke
 grestore  grestore end
 625 3590 a 625 3590 a
 tx@Dict begin tx@NodeDict begin /t 0.5  def LPutCoor end PutBegin
 end
 625 3590 a 625
3590 a
 tx@Dict begin { 3.0 4.72495 3.87498 2.0 langle 90 add  Uput exch pop
add a PtoC h1 add exch w1 add exch } PutCoor PutBegin  end
 625 3590 a 605 3598 a Fv(g)625 3590 y
 tx@Dict begin PutEnd  end
 625 3590
a 625 3590 a
 tx@Dict begin PutEnd  end
 625 3590 a 625 3590 a
 tx@Dict begin gsave STV newpath 1.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 /TheNodea8 /TheNodea10 InitNC
{ NCLine  } if end gsave 1.0 SLW 0. setgray 0 setlinecap stroke  grestore
 grestore end
 625 3590 a 625 3590
a
 tx@Dict begin tx@NodeDict begin /t 0.5  def LPutCoor end PutBegin
 end
 625 3590 a 625 3590 a
 tx@Dict begin langle Rot  end
 625 3590 a 625 3590 a
 tx@Dict begin { 3.0 4.72495 3.87498 0.0 langle 90 add  langle  sub
Uput exch pop add a PtoC h1 add exch w1 add exch } PutCoor PutBegin
 end
 625 3590
a 605 3606 a Fv(a)625 3590 y
 tx@Dict begin PutEnd  end
 625 3590 a 625 3590 a
 tx@Dict begin langle neg Rot  end
 625
3590 a 625 3590 a
 tx@Dict begin PutEnd  end
 625 3590 a 625 3590 a
 tx@Dict begin gsave STV newpath 1.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 /TheNodea10 /TheNodea9 InitNC
{ GetAngle dup -20.  add /AngleA ED -20.  sub 180 add /AngleB ED 0.67
 0.67  NCCurve  } if end gsave 1.0 SLW 0. setgray 0 setlinecap stroke
 grestore  grestore end
 625 3590 a 625
3590 a
 tx@Dict begin tx@NodeDict begin /t 0.5  def LPutCoor end PutBegin
 end
 625 3590 a 625 3590 a
 tx@Dict begin { 3.0 4.72495 3.87498 0.0 langle 90 add  Uput exch pop
add a PtoC h1 add exch w1 add exch } PutCoor PutBegin  end
 625 3590 a 605 3606 a Fv(a)625
3590 y
 tx@Dict begin PutEnd  end
 625 3590 a 625 3590 a
 tx@Dict begin PutEnd  end
 625 3590 a 625 3590 a
 tx@Dict begin gsave STV newpath 1.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 /TheNodea10 /TheNodeaF InitNC
{ GetAngle dup -20.  add /AngleA ED -20.  sub 180 add /AngleB ED 0.67
 0.67  NCCurve  } if end gsave 1.0 SLW 0. setgray 0 setlinecap stroke
 grestore  grestore end
 625
3590 a 625 3590 a
 tx@Dict begin tx@NodeDict begin /t 0.5  def LPutCoor end PutBegin
 end
 625 3590 a 625 3590 a
 tx@Dict begin { 3.0 4.72495 3.87498 0.0 langle 90 sub  Uput exch pop
add a PtoC h1 add exch w1 add exch } PutCoor PutBegin  end
 625 3590 a 605
3606 a Fv(c)625 3590 y
 tx@Dict begin PutEnd  end
 625 3590 a 625 3590 a
 tx@Dict begin PutEnd  end
 625 3590
a 625 3590 a
 tx@Dict begin gsave STV newpath 1.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 /TheNodeaI /TheNodeaF InitNC
{ tx@Dict begin /r 8.5359 def /Lineto { Arcto } def end /AngleA 90.
 def /AngleB 90.  def /armA 10.0  def /armB 28.45274  def NCAngle 
} if end gsave 1.0 SLW 0. setgray 0 setlinecap stroke  grestore  grestore
end
 625 3590 a 625 3590 a
 tx@Dict begin tx@NodeDict begin /t 1.5  def LPutCoor end PutBegin
 end
 625 3590 a 625 3590
a
 tx@Dict begin { 3.0 4.72495 3.87498 0.0 langle 90 add  Uput exch pop
add a PtoC h1 add exch w1 add exch } PutCoor PutBegin  end
 625 3590 a 605 3606 a Fv(c)625 3590 y
 tx@Dict begin PutEnd  end
 625 3590 a 625
3590 a
 tx@Dict begin PutEnd  end
 625 3590 a 625 3590 a
 tx@Dict begin gsave STV newpath 1.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 /TheNodeaI /TheNodea8 InitNC
{ tx@Dict begin /r 5.69046 def /Lineto { Arcto } def end /AngleA -90.
 def /AngleB 180.  def /armA 10.0  def /armB 10.0  def NCAngle  } if
end gsave 1.0 SLW 0. setgray 0 setlinecap stroke  grestore  grestore
end
 625 3590 a 625 3590 a
 tx@Dict begin tx@NodeDict begin /t 1.5  def LPutCoor end PutBegin
 end
 625
3590 a 625 3590 a
 tx@Dict begin { 3.0 4.72495 3.87498 0.0 langle 90 sub  Uput exch pop
add a PtoC h1 add exch w1 add exch } PutCoor PutBegin  end
 625 3590 a 605 3606 a Fv(a)625 3590
y
 tx@Dict begin PutEnd  end
 625 3590 a 625 3590 a
 tx@Dict begin PutEnd  end
 625 3590 a 625 3590 a
 tx@Dict begin gsave STV newpath 1.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 /TheNodea8 /TheNodeaF InitNC
{ tx@Dict begin /r 5.69046 def /Lineto { Arcto } def end /AngleA -90.
 def /AngleB -90.  def /armA 8.5359  def /armB 10.0  def NCAngles 
} if end gsave 1.0 SLW 0. setgray 0 setlinecap stroke  grestore  grestore
end
 625 3590
a 625 3590 a
 tx@Dict begin tx@NodeDict begin /t 1.5  def LPutCoor end PutBegin
 end
 625 3590 a 625 3590 a
 tx@Dict begin { 3.0 4.72495 3.87498 0.0 langle 90 sub  Uput exch pop
add a PtoC h1 add exch w1 add exch } PutCoor PutBegin  end
 625 3590 a 605 3606
a Fv(c)625 3590 y
 tx@Dict begin PutEnd  end
 625 3590 a 625 3590 a
 tx@Dict begin PutEnd  end
 625 3590 a 625
3590 a
 tx@Dict begin gsave STV newpath 1.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 /TheNodeaI /TheNodea2 InitNC
{ tx@Dict begin /r 5.69046 def /Lineto { Arcto } def end /AngleA 90.
 def /AngleB 90.  def /armA 10.0  def /armB 14.22636  def NCAngle 
} if end gsave 1.0 SLW 0. setgray 0 setlinecap stroke  grestore  grestore
end
 625 3590 a 625 3590 a
 tx@Dict begin tx@NodeDict begin /t 1.5  def LPutCoor end PutBegin
 end
 625 3590 a 625 3590 a
 tx@Dict begin { 3.0 4.72495 4.98216 0.0 langle 90 add  Uput exch pop
add a PtoC h1 add exch w1 add exch } PutCoor PutBegin  end
 625
3590 a 605 3611 a Fv(t)625 3590 y
 tx@Dict begin PutEnd  end
 625 3590 a 625 3590
a
 tx@Dict begin PutEnd  end
 625 3590 a 625 3590 a
 tx@Dict begin gsave STV newpath 1.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 /TheNodea3 /TheNodea7 InitNC
{ tx@Dict begin /r 5.69046 def /Lineto { Arcto } def end /AngleA 90.
 def /AngleB 90.  def /armA 10.0  def /armB 14.22636  def NCAngle 
} if end gsave 1.0 SLW 0. setgray 0 setlinecap stroke  grestore  grestore
end
 625 3590 a 625 3590 a
 tx@Dict begin tx@NodeDict begin /t 1.5  def LPutCoor end PutBegin
 end
 625 3590
a 625 3590 a
 tx@Dict begin { 3.0 4.72495 3.87498 0.0 langle 90 add  Uput exch pop
add a PtoC h1 add exch w1 add exch } PutCoor PutBegin  end
 625 3590 a 605 3606 a Fv(a)625 3590 y
 tx@Dict begin PutEnd  end
 625
3590 a 625 3590 a
 tx@Dict begin PutEnd  end
 625 3590 a 1329 3856 a Fm(Fig.)15 b(1.)27
b Fl(D)n(A)-8 b(WG)p Fw(\()p Fv(gtagtaaac)p Fw(\).)490
4128 y Fy(F)h(or)24 b(example,)h(Figure)f(1)h(sho)n(ws)f(the)h(D)n(A)-9
b(W)n(G)26 b(of)f(the)g(w)n(ord)f Fk(gtagtaaac)p Fy(.)e(States)j(that)
365 4228 y(are)i(double)g(circled)h(are)e(terminal)h(states.)365
4365 y Fm(Theorem)15 b(2.)41 b Fs(The)23 b(size)f(of)h(the)f(D)n(A)-8
b(WG)21 b(of)h(a)h(wor)l(d)g Fr(x)f Fs(is)g Fq(O)r Fy(\()p
Fq(j)p Fr(x)p Fq(j)p Fy(\))i Fs(and)e(the)g(automaton)g(c)l(an)365
4465 y(b)l(e)34 b(c)l(ompute)l(d)f(in)g(time)h Fq(O)r
Fy(\()p Fq(j)p Fr(x)p Fq(j)p Fy(\))p Fs(.)h(The)f(maximum)f(numb)l(er)g
(of)h(states)f(of)h(the)f(automaton)365 4565 y(is)d Fy(2)p
Fq(j)p Fr(x)p Fq(j)19 b(\000)f Fy(1)p Fs(,)30 b(and)g(the)g(maximum)f
(numb)l(er)g(of)i(e)l(dges)f(is)g Fy(3)p Fq(j)p Fr(x)p
Fq(j)19 b(\000)f Fy(4)p Fs(.)490 4664 y Fy(Recall)i(that)h(the)g(righ)n
(t)f(con)n(text)g(\(according)f(to)i Fr(S)5 b Fy(\()p
Fr(x)p Fy(\)\))22 b(of)e(a)g(factor)g Fr(u)g Fy(of)h
Fr(x)g Fy(is)g Fr(u)2968 4634 y Fp(\000)p Fn(1)3056 4664
y Fr(S)5 b Fy(\()p Fr(x)p Fy(\).)365 4764 y(The)20 b(syn)n(tactic)f
(congruence)f(asso)r(ciated)g(with)i Fr(S)5 b Fy(\()p
Fr(x)p Fy(\))20 b(is)f(denoted)h(b)n(y)f Fq(\021)2600
4779 y Fo(S)s Fn(\()p Fo(x)p Fn(\))2737 4764 y Fy(and)g(is)h
(de\014ned,)365 4863 y(for)27 b Fr(x;)14 b(u;)g(v)26
b Fq(2)e Fr(\006)876 4833 y Fp(\003)914 4863 y Fy(,)j(b)n(y:)p
eop
%%Page: 4 4
4 3 bop 1461 387 a Fr(u)22 b Fq(\021)1596 402 y Fo(S)s
Fn(\()p Fo(x)p Fn(\))1757 387 y Fr(v)49 b Fq(\()-14 b(\))46
b Fr(u)2092 357 y Fp(\000)p Fn(1)2181 387 y Fr(S)5 b
Fy(\()p Fr(x)p Fy(\))24 b(=)e Fr(v)2502 357 y Fp(\000)p
Fn(1)2592 387 y Fr(S)5 b Fy(\()p Fr(x)p Fy(\).)681 557
y(W)-7 b(e)45 b(call)f Fs(classes)31 b(of)f(factors)46
b Fy(the)f(congruence)e(classes)g(of)i(the)g(relation)f
Fq(\021)3215 572 y Fo(S)s Fn(\()p Fo(x)p Fn(\))3352 557
y Fy(.)h(The)681 657 y(longest)21 b(w)n(ord)f(of)i(a)f(class)g(of)h
(factors)e(is)i(called)f(the)h Fs(r)l(epr)l(esentative)h
Fy(of)e(the)h(class.)f(States)h(of)681 757 y Fs(D)n(A)-8
b(WG)o Fy(\()p Fr(x)p Fy(\))28 b(are)f(exactly)g(the)h(classes)e(of)i
(the)g(relation)e Fq(\021)2520 772 y Fo(S)s Fn(\()p Fo(x)p
Fn(\))2658 757 y Fy(.)h(Since)h(this)g(automaton)f(is)681
856 y(not)22 b(required)g(to)g(b)r(e)h(complete,)g(the)g(class)e(of)i
(w)n(ords)e(not)i(o)r(ccurring)e(in)i Fr(x)p Fy(,)g(corresp)r(onding)
681 956 y(to)k(the)h(empt)n(y)g(righ)n(t)f(con)n(text,)g(is)h(not)f(a)g
(state)h(of)f Fs(D)n(A)-8 b(WG)o Fy(\()p Fr(x)p Fy(\).)805
1057 y(Among)28 b(the)g(congruence)e(classes)h(w)n(e)g(mak)n(e)g(a)h
(selection)f(of)h(classes)e(that)i(are)f(called)681 1156
y Fs(strict)i(classes)i(of)f(factors)f Fy(of)f Fq(\021)1700
1171 y Fo(S)s Fn(\()p Fo(x)p Fn(\))1865 1156 y Fy(and)f(that)h(are)e
(de\014ned)i(as)f(follo)n(ws.)681 1328 y Fm(De\014nition)15
b(3.)40 b Fy(Let)30 b Fr(u)f Fy(b)r(e)h(a)f(w)n(ord)f(of)i
Fr(C)6 b Fy(,)30 b(a)f(class)f(of)i(factors)e(of)h Fq(\021)2859
1343 y Fo(S)s Fn(\()p Fo(x)p Fn(\))2997 1328 y Fy(.)g(If)h(at)f(least)h
(t)n(w)n(o)681 1427 y(letters)e Fr(a)g Fy(and)g Fr(b)f
Fy(of)i Fr(\006)j Fy(exist)c(suc)n(h)g(that)g Fr(ua)g
Fy(and)g Fr(ub)f Fy(are)g(factors)g(of)h Fr(x)p Fy(,)h(then)g
Fr(C)34 b Fy(is)28 b(called)681 1527 y(a)f Fm(strict)32
b(class)f(of)h(factors)d Fy(of)e Fq(\021)1800 1542 y
Fo(S)s Fn(\()p Fo(x)p Fn(\))1938 1527 y Fy(.)805 1697
y(W)-7 b(e)33 b(also)e(in)n(tro)r(duce)h(the)h(function)g
Fr(endpos)2229 1709 y Fo(x)2270 1697 y Fy(:)f Fr(F)12
b Fy(\()p Fr(x)p Fy(\))32 b Fq(!)f Fj(N)t Fy(,)39 b(de\014ned,)32
b(for)g(a)g(w)n(ord)f Fr(u)p Fy(,)681 1797 y(b)n(y:)1112
1904 y Fs(endp)l(os)1354 1924 y Fo(x)1396 1904 y Fy(\()p
Fr(u)p Fy(\))23 b(=)g(min)p Fq(fj)p Fr(w)r Fq(j)28 b(j)g
Fr(w)i Fy(pre\014x)d(of)h Fr(x)g Fy(and)g Fr(u)f Fy(su\016x)g(of)h
Fr(w)r Fq(g)681 2056 y Fy(and)f(the)h(function)g Fs(length)1524
2068 y Fo(x)1594 2056 y Fy(de\014ned)g(on)f(states)h(of)f
Fs(D)n(A)-8 b(WG)o Fy(\()p Fr(x)p Fy(\))29 b(b)n(y:)1327
2234 y Fs(length)1542 2255 y Fo(x)1583 2234 y Fy(\()p
Fr(p)p Fy(\))24 b(=)f Fq(j)p Fr(u)p Fq(j)p Fr(;)41 b
Fy(with)28 b Fr(u)f Fy(represen)n(tativ)n(e)f(of)h Fr(p:)681
2413 y Fy(The)37 b(w)n(ord)f Fr(u)g Fy(also)g(corresp)r(onds)f(to)i
(the)g(concatenated)f(lab)r(els)h(of)g(transitions)f(of)g(the)681
2512 y(longest)44 b(path)h(from)f(the)i(initial)f(state)f(to)h
Fr(p)g Fy(in)g Fs(D)n(A)-8 b(WG)o Fy(\()p Fr(x)p Fy(\).)46
b(T)-7 b(ransitions)44 b(that)h(b)r(e-)681 2612 y(long)e(to)g(the)h
(spanning)f(tree)h(of)f(longest)g(paths)h(from)f(the)h(initial)g(state)
f(are)g(called)681 2712 y Fs(solid)31 b(tr)l(ansitions)p
Fy(.)25 b(Equiv)-5 b(alen)n(tly)e(,)25 b(for)g(eac)n(h)g(transition)f
(\()p Fr(p;)14 b(a;)g(q)s Fy(\))26 b(w)n(e)f(ha)n(v)n(e)f(the)i(prop)r
(ert)n(y:)1215 2890 y(\()p Fr(p;)14 b(a;)g(q)s Fy(\))28
b(is)f(solid)73 b Fq(\()-14 b(\))47 b Fs(length)2243
2910 y Fo(x)2285 2890 y Fy(\()p Fr(q)s Fy(\))23 b(=)g
Fs(length)2714 2910 y Fo(x)2756 2890 y Fy(\()p Fr(p)p
Fy(\))c(+)f(1)p Fr(:)681 3068 y Fy(The)h(function)h Fs(length)1374
3080 y Fo(x)1435 3068 y Fy(w)n(orks)e(as)h(w)n(ell)g(for)f(m)n
(ulti-letter)i(transitions)e(\(transitions)h(lab)r(eled)681
3168 y(b)n(y)25 b(non-empt)n(y)h(w)n(ords\),)e(just)j(replacing)e(1)g
(in)h(the)g(ab)r(o)n(v)n(e)f(equiv)-5 b(alence)25 b(b)n(y)h(the)g
(length)g(of)681 3268 y(the)21 b(lab)r(el)g(of)g(the)g(transition)f
(from)g Fr(p)h Fy(to)f Fr(q)s Fy(.)h(This)g(extends)g(the)g(notion)g
(of)f(solid)h(transitions)681 3367 y(to)27 b(m)n(ulti-letter)h
(transitions:)1181 3546 y(\()p Fr(p;)14 b(\013;)g(q)s
Fy(\))28 b(is)g(solid)73 b Fq(\()-14 b(\))46 b Fs(length)2219
3566 y Fo(x)2261 3546 y Fy(\()p Fr(q)s Fy(\))23 b(=)g
Fs(length)2690 3566 y Fo(x)2732 3546 y Fy(\()p Fr(p)p
Fy(\))c(+)f Fq(j)p Fr(\013)p Fq(j)p Fr(:)805 3725 y Fy(In)29
b(addition,)g(w)n(e)g(de\014ne)g(the)g Fs(su\016x)h(link)g
Fy(function)f(on)g(states)f(of)h Fs(D)n(A)-8 b(WG)o Fy(\()p
Fr(x)p Fy(\))30 b(b)n(y)e(the)681 3825 y(next)g(statemen)n(t.)681
3996 y Fm(De\014nition)15 b(4.)40 b Fy(Let)24 b Fr(p)f
Fy(b)r(e)g(a)g(state)g(of)g Fs(D)n(A)-8 b(WG)o Fy(\()p
Fr(x)p Fy(\),)25 b(di\013eren)n(t)e(from)g(the)g(initial)h(state,)f
(and)681 4096 y(let)36 b Fr(u)g Fy(b)r(e)h(a)f(w)n(ord)f(of)h(the)h
(equiv)-5 b(alence)36 b(class)f Fr(p)p Fy(.)i(The)f Fm(su\016x)41
b(link)36 b Fy(of)g Fr(p)p Fy(,)h(denoted)f(b)n(y)681
4195 y Fr(s)720 4207 y Fo(x)761 4195 y Fy(\()p Fr(p)p
Fy(\),)28 b(is)g(the)g(state)f Fr(q)j Fy(whic)n(h)e(represen)n(tativ)n
(e)d Fr(v)31 b Fy(is)c(the)h(longest)f(su\016x)g Fr(z)k
Fy(of)c Fr(u)g Fy(suc)n(h)g(that)681 4295 y Fr(u)22 b
Fq(6\021)816 4310 y Fo(S)s Fn(\()p Fo(x)p Fn(\))977 4295
y Fr(z)t Fy(.)681 4465 y(Note)37 b(that,)h(consequen)n(tly)e(to)i(this)
f(de\014nition,)h(w)n(e)f(ha)n(v)n(e)f Fs(length)2837
4477 y Fo(x)2879 4465 y Fy(\()p Fr(q)s Fy(\))65 b Fr(<)f
Fs(length)3391 4485 y Fo(x)3433 4465 y Fy(\()p Fr(p)p
Fy(\).)681 4565 y(Then,)38 b(b)n(y)g(iteration,)g(su\016x)g(links)g
(induce)g Fs(su\016x)h(p)l(aths)g Fy(in)f Fs(D)n(A)-8
b(WG)o Fy(\()p Fr(x)p Fy(\),)40 b(whic)n(h)e(is)g(an)681
4664 y(imp)r(ortan)n(t)27 b(notion)h(used)f(b)n(y)h(the)g(construction)
f(algorithm.)f(Indeed,)i(as)f(a)h(consequence)681 4764
y(of)d(the)g(ab)r(o)n(v)n(e)f(inequalit)n(y)-7 b(,)25
b(the)g(sequence)g(\()p Fr(p;)14 b(s)2177 4776 y Fo(x)2218
4764 y Fy(\()p Fr(p)p Fy(\))p Fr(;)g(s)2400 4734 y Fn(2)2400
4784 y Fo(x)2442 4764 y Fy(\()p Fr(p)p Fy(\))p Fr(;)g(:::)p
Fy(\))26 b(is)f(\014nite)h(and)e(ends)h(at)g(the)681
4863 y(initial)j(state)f(of)h Fs(D)n(A)-8 b(WG)o Fy(\()p
Fr(x)p Fy(\).)28 b(This)g(sequence)f(is)g(called)h(the)g
Fs(su\016x)h(p)l(ath)h(of)e Fr(p)p Fy(.)p eop
%%Page: 5 5
5 4 bop 365 387 a Ft(3)112 b(Compact)37 b(Directed)f(Acyclic)f(W)-9
b(ord)37 b(Graphs)365 584 y Fm(3.1)95 b(De\014nition)365
747 y Fy(Compaction)19 b(of)h(D)n(A)-9 b(W)n(Gs)20 b(is)g(based)g(on)f
(the)h(deletion)g(of)g(some)g(states)f(and)h(their)g(outgoing)365
847 y(transitions.)26 b(This)g(is)h(p)r(ossible)f(b)n(y)g(using)g(m)n
(ulti-letter)h(transitions)e(and)h(selecting)g(strict)365
946 y(classes)h(of)g(factors)g(de\014ned)h(in)f(the)h(previous)f
(section)g(\(De\014nition)f(3\).)p 3 setlinewidth np
1020 1787 a 1536 1975 li st 0 setgray 3 setlinewidth
np 1472 1968 a 1536 1975 li 1483 1939 li closepath fil
0 setgray np 1472 1968 a 1536 1975 li 1483 1939 li closepath
st 3 setlinewidth np 2076 1435 a 2593 1622 li st 0 setgray
3 setlinewidth np 2529 1616 a 2593 1622 li 2539 1586
li closepath fil 0 setgray np 2529 1616 a 2593 1622 li
2539 1586 li closepath st 3 setlinewidth np 2593 1787
a 2076 1975 li st 0 setgray 3 setlinewidth np 2130 1939
a 2076 1975 li 2140 1968 li closepath fil 0 setgray np
2130 1939 a 2076 1975 li 2140 1968 li closepath st 3
setlinewidth np 1638 2060 125 90.00 180.00 arc st 3 setlinewidth
np 1638 2076 125 180.00 270.00 arc st 3 setlinewidth
np 1975 2076 125 270.00 360.00 arc st 3 setlinewidth
np 1975 2060 125 0.00 90.00 arc st 3 setlinewidth np
1513 2061 a 1513 2077 li st 3 setlinewidth np 1638 1951
a 1974 1951 li st 3 setlinewidth np 2100 2077 a 2100
2061 li st 3 setlinewidth np 1974 2186 a 1638 2186 li
st 3 setlinewidth np 2695 1708 125 90.00 180.00 arc st
3 setlinewidth np 2695 1724 125 180.00 270.00 arc st
3 setlinewidth np 3031 1724 125 270.00 360.00 arc st
3 setlinewidth np 3031 1708 125 0.00 90.00 arc st 3 setlinewidth
np 2569 1709 a 2569 1724 li st 3 setlinewidth np 2695
1599 a 3031 1599 li st 3 setlinewidth np 3156 1724 a
3156 1709 li st 3 setlinewidth np 3031 1834 a 2695 1834
li st 3 setlinewidth np 1638 1356 125 90.00 180.00 arc
st 3 setlinewidth np 1638 1372 125 180.00 270.00 arc
st 3 setlinewidth np 1975 1372 125 270.00 360.00 arc
st 3 setlinewidth np 1975 1356 125 0.00 90.00 arc st
3 setlinewidth np 1513 1357 a 1513 1372 li st 3 setlinewidth
np 1638 1247 a 1974 1247 li st 3 setlinewidth np 2100
1372 a 2100 1357 li st 3 setlinewidth np 1974 1481 a
1638 1481 li st 3 setlinewidth np 581 1708 125 90.00
180.00 arc st 3 setlinewidth np 581 1724 125 180.00 270.00
arc st 3 setlinewidth np 918 1724 125 270.00 360.00 arc
st 3 setlinewidth np 918 1708 125 0.00 90.00 arc st 3
setlinewidth np 456 1709 a 456 1724 li st 3 setlinewidth
np 581 1599 a 918 1599 li st 3 setlinewidth np 1043 1724
a 1043 1709 li st 3 setlinewidth np 918 1834 a 581 1834
li st 3 setlinewidth np 1536 1435 a 1020 1646 li st 0 setgray
3 setlinewidth np 1071 1608 a 1020 1646 li 1083 1637
li closepath fil 0 setgray np 1071 1608 a 1020 1646 li
1083 1637 li closepath st 2358 1505 a Fs(minimization)1583
1387 y Fi(Su\016x)34 b(T)-8 b(rie)2335 1982 y Fs(c)l(omp)l(action)1630
2045 y Fi(Compact)1654 2162 y(D)m(A)d(W)m(G)527 1740
y(Su\016x)33 b(T)-8 b(ree)1724 b(D)m(A)-11 b(W)m(G)808
1974 y Fs(minimization)855 1513 y(c)l(omp)l(action)365
2463 y Fm(Fig.)15 b(2.)25 b Fw(Consider)f(a)g(w)n(ord)g(that)f(has)h
(an)f(end-mark)n(er.)f(Its)h(su\016x)g(tree)h(is)g(the)f(compact)g(v)n
(ersion)365 2562 y(of)j(the)e(digital)h(trie)g(of)g(its)g(su\016xes.)g
(Its)f(D)n(A)-9 b(W)n(G)24 b(is)h(the)f(minimized)f(\(in)h(the)g(sense)
h(of)g(automata)365 2662 y(theory\))f(v)n(ersion)g(of)h(the)e(trie.)i
(The)f(compact)f(D)n(A)-9 b(W)n(G)24 b(can)g(b)r(e)g(obtained)g(either)
g(b)n(y)f(minimizing)365 2762 y(the)j(su\016x)f(tree)g(of)i(the)e(w)n
(ord)h(or)g(b)n(y)f(compacting)h(its)g(D)n(A)-9 b(W)n(G.)490
3043 y Fy(The)35 b(de\014nition)g(of)g(CD)n(A)-9 b(W)n(Gs)35
b(parallels)f(the)h(de\014nition)g(of)g(su\016x)g(trees)g(obtained)365
3142 y(from)25 b(ordinary)e(digital)h(tries)h(of)f(all)h(su\016xes)f
(of)h(a)f(w)n(ord.)g(Indeed,)h(disregarding)e(ho)n(w)h(the)365
3242 y(end-mark)n(er)35 b(required)g(b)n(y)h(su\016x)g(trees)g(is)h
(managed,)e(the)i(CD)n(A)-9 b(W)n(G)36 b(ma)n(y)g(b)r(e)h(view)n(ed)365
3342 y(as)32 b(w)n(ell)g(as)f(a)h(compact)f(v)n(ersion)g(of)h(the)h(D)n
(A)-9 b(W)n(G)32 b(or)f(as)h(a)g(minimized)g(\(in)h(the)g(sense)e(of)
365 3441 y(automata)c(theory\))g(v)n(ersion)f(of)i(the)g(su\016x)f
(tree)g(\(see)h(Figure)c(2\).)490 3541 y(The)j(compact)h(D)n(A)-9
b(W)n(G)28 b(is)f(de\014ned)h(as)f(follo)n(ws.)365 3704
y Fm(De\014nition)15 b(5.)41 b Fy(The)31 b Fm(Compact)36
b(Directed)g(Acyclic)h(W)-8 b(ord)36 b(Graph)c Fy(of)g(a)e(w)n(ord)h
Fr(x)p Fy(,)365 3804 y(denoted)36 b(b)n(y)f Fs(CD)n(A)-8
b(WG)o Fy(\()p Fr(x)p Fy(\),)36 b(is)f(the)h(compaction)f(of)g
Fs(D)n(A)-8 b(WG)o Fy(\()p Fr(x)p Fy(\))36 b(obtained)f(b)n(y)g(k)n
(eeping)365 3903 y(only)c(states)g(that)h(are)f(either)g(terminal)g
(states)g(or)g(strict)g(classes)f(of)i(factors)e(according)365
4003 y(to)e Fq(\021)532 4018 y Fo(S)s Fn(\()p Fo(x)p
Fn(\))669 4003 y Fy(,)g(and)f(b)n(y)g(lab)r(eling)h(transitions)e
(accordingly)-7 b(.)365 4166 y(Consequen)n(tly)30 b(to)h(De\014nition)
25 b(3,)30 b(strict)h(classes)e(of)i(factors)e(corresp)r(ond)g(to)i
(states)f(that)365 4266 y(ha)n(v)n(e)h(an)h(outdegree)e(greater)g(than)
i(one.)g(So,)f(w)n(e)h(can)f(delete)i(ev)n(ery)d(state)i(ha)n(ving)f
(out-)365 4365 y(degree)c(one)h(exactly)-7 b(,)27 b(except)h(terminal)g
(states.)f(Note)h(that)g(initial)g(and)g(\014nal)g(states)f(are)365
4465 y(terminal)f(states,)h(so)e(they)i(are)f(not)g(deleted.)h(An)g
(example)f(of)g(CD)n(A)-9 b(W)n(G)27 b(is)g(displa)n(y)n(ed)e(in)365
4565 y(Figure)g(3.)490 4664 y(The)j(construction)f(of)i(the)f(D)n(A)-9
b(W)n(G)29 b(of)f(a)g(w)n(ord)f(con)n(taining)g(rep)r(etitions)h(sho)n
(ws)f(that)365 4764 y(man)n(y)32 b(states)f(ha)n(v)n(e)g(outdegree)g
(one)h(only)-7 b(.)32 b(F)-7 b(or)31 b(example,)h(in)g(Figure)25
b(1,)31 b(the)i(D)n(A)-9 b(W)n(G)32 b(of)365 4863 y(the)38
b(w)n(ord)e Fk(gtagtaaac)e Fy(has)i(12)h(states,)g(7)f(of)i(whic)n(h)f
(ha)n(v)n(e)f(outdegree)g(one;)h(it)g(has)g(18)p eop
%%Page: 6 6
6 5 bop 1280 699 a
 tx@Dict begin tx@NodeDict begin { 3.61111 2 div 6.83331 0.0 add 2
div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add 2.6 add } /TheNodeaI 11 {
InitCnode  } NewNode end end
 1280 699 a @beginspecial @setspecial
 tx@Dict begin STP newpath 2.6 SLW 0. setgray  3.61111 2 div 6.83331
0.0 add 2 div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add CLW 2 div add 0
360 arc closepath gsave 2.6 SLW 0. setgray 0 setlinecap stroke  grestore
gsave 1.0 SLW 1. setgray stroke grestore end


@endspecial Fy(I)1983 532 y
 tx@Dict begin tx@NodeDict begin { 5.00002 2 div 6.44444 0.0 add 2
div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add 0.8 add } /TheNodea2 11 {
InitCnode  } NewNode end end
 1983 532 a @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  5.00002 2 div 6.44444
0.0 add 2 div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add CLW 2 div add 0
360 arc closepath gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore
end
 
@endspecial Fy(2)1747 934 y
 tx@Dict begin tx@NodeDict begin { 5.00002 2 div 6.44444 0.0 add 2
div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add 0.8 add } /TheNodea3 11 {
InitCnode  } NewNode end end
 1747 934 a @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  5.00002 2 div 6.44444
0.0 add 2 div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add CLW 2 div add 0
360 arc closepath gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore
end
 
@endspecial Fy(3)2219 934 y
 tx@Dict begin tx@NodeDict begin { 5.00002 2 div 6.44444 0.0 add 2
div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add 0.8 add } /TheNodea4 11 {
InitCnode  } NewNode end end
 2219 934 a @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  5.00002 2 div 6.44444
0.0 add 2 div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add CLW 2 div add 0
360 arc closepath gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore
end
 
@endspecial Fy(4)2921 699 y
 tx@Dict begin tx@NodeDict begin { 6.5278 2 div 6.83331 0.0 add 2 div
2 copy 0.0 sub 4 2 roll Pyth 3.0 add 2.6 add } /TheNodeaF 11 { InitCnode
 } NewNode end end
 2921 699 a @beginspecial
@setspecial
 tx@Dict begin STP newpath 2.6 SLW 0. setgray  6.5278 2 div 6.83331
0.0 add 2 div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add CLW 2 div add 0
360 arc closepath gsave 2.6 SLW 0. setgray 0 setlinecap stroke  grestore
gsave 1.0 SLW 1. setgray stroke grestore end
 
@endspecial Fy(F)1059 1025 y
 tx@Dict begin gsave STV newpath 1.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 /TheNodeaI /TheNodeaF InitNC
{ tx@Dict begin /r 8.5359 def /Lineto { Arcto } def end /AngleA 90.
 def /AngleB 90.  def /armA 10.0  def /armB 28.45274  def NCAngle 
} if end gsave 1.0 SLW 0. setgray 0 setlinecap stroke  grestore  grestore
end
 1059 1025 a
1059 1025 a
 tx@Dict begin tx@NodeDict begin /t 1.5  def LPutCoor end PutBegin
 end
 1059 1025 a 1059 1025 a
 tx@Dict begin { 3.0 4.72495 3.87498 0.0 langle 90 add  Uput exch pop
add a PtoC h1 add exch w1 add exch } PutCoor PutBegin  end
 1059 1025 a 1039
1041 a Fv(c)1059 1025 y
 tx@Dict begin PutEnd  end
 1059 1025 a 1059 1025 a
 tx@Dict begin PutEnd  end
 1059
1025 a 1059 1025 a
 tx@Dict begin gsave STV newpath 1.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 /TheNodeaI /TheNodea3 InitNC
{ tx@Dict begin /r 5.69046 def /Lineto { Arcto } def end /AngleA -90.
 def /AngleB 180.  def /armA 10.0  def /armB 10.0  def NCAngle  } if
end gsave 1.0 SLW 0. setgray 0 setlinecap stroke  grestore  grestore
end
 1059 1025 a 1059 1025 a
 tx@Dict begin tx@NodeDict begin /t 1.5  def LPutCoor end PutBegin
 end
 1059 1025
a 1059 1025 a
 tx@Dict begin { 3.0 4.72495 3.87498 0.0 langle 90 sub  Uput exch pop
add a PtoC h1 add exch w1 add exch } PutCoor PutBegin  end
 1059 1025 a 1039 1041 a Fv(a)1059 1025
y
 tx@Dict begin PutEnd  end
 1059 1025 a 1059 1025 a
 tx@Dict begin PutEnd  end
 1059 1025 a 1059 1025 a
 tx@Dict begin gsave STV newpath 1.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 /TheNodeaI /TheNodea2 InitNC
{ GetAngle dup 6.  add /AngleA ED 6.  sub 180 add /AngleB ED 0.67 
0.67  NCCurve  } if end gsave 1.0 SLW 0. setgray 0 setlinecap stroke
 grestore  grestore end
 1059
1025 a 1059 1025 a
 tx@Dict begin tx@NodeDict begin /t 0.5  def LPutCoor end PutBegin
 end
 1059 1025 a 1059 1025 a
 tx@Dict begin langle Rot  end
 1059 1025
a 1059 1025 a
 tx@Dict begin { 3.0 14.17484 4.98216 2.0 langle 90 add  langle  sub
Uput exch pop add a PtoC h1 add exch w1 add exch } PutCoor PutBegin
 end
 1059 1025 a 1000 1037 a Fv(gta)1059 1025
y
 tx@Dict begin PutEnd  end
 1059 1025 a 1059 1025 a
 tx@Dict begin langle neg Rot  end
 1059 1025 a 1059 1025 a
 tx@Dict begin PutEnd  end
 1059
1025 a 1059 1025 a
 tx@Dict begin gsave STV newpath 1.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 /TheNodeaI /TheNodea2 InitNC
{ GetAngle dup -6.  add /AngleA ED -6.  sub 180 add /AngleB ED 0.67
 0.67  NCCurve  } if end gsave 1.0 SLW 0. setgray 0 setlinecap stroke
 grestore  grestore end
 1059 1025 a 1059 1025 a
 tx@Dict begin tx@NodeDict begin /t 0.5  def LPutCoor end PutBegin
 end
 1059 1025
a 1059 1025 a
 tx@Dict begin langle Rot  end
 1059 1025 a 1059 1025 a
 tx@Dict begin { 3.0 9.44989 4.98216 0.0 langle 90 sub  langle  sub
Uput exch pop add a PtoC h1 add exch w1 add exch } PutCoor PutBegin
 end
 1059 1025 a 1020
1046 a Fv(ta)1059 1025 y
 tx@Dict begin PutEnd  end
 1059 1025 a 1059 1025 a
 tx@Dict begin langle neg Rot  end
 1059
1025 a 1059 1025 a
 tx@Dict begin PutEnd  end
 1059 1025 a 1059 1025 a
 tx@Dict begin gsave STV newpath 1.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 /TheNodea2 /TheNodeaF InitNC
{ GetAngle dup 5.  add /AngleA ED 5.  sub 180 add /AngleB ED 0.67 
0.67  NCCurve  } if end gsave 1.0 SLW 0. setgray 0 setlinecap stroke
 grestore  grestore end
 1059 1025
a 1059 1025 a
 tx@Dict begin tx@NodeDict begin /t 0.5  def LPutCoor end PutBegin
 end
 1059 1025 a 1059 1025 a
 tx@Dict begin langle Rot  end
 1059 1025 a 1059
1025 a
 tx@Dict begin { 3.0 28.34967 4.98216 2.0 langle 90 add  langle  sub
Uput exch pop add a PtoC h1 add exch w1 add exch } PutCoor PutBegin
 end
 1059 1025 a 941 1037 a Fv(gtaaac)1059 1025 y
 tx@Dict begin PutEnd  end
 1059
1025 a 1059 1025 a
 tx@Dict begin langle neg Rot  end
 1059 1025 a 1059 1025 a
 tx@Dict begin PutEnd  end
 1059 1025
a 1059 1025 a
 tx@Dict begin gsave STV newpath 1.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 /TheNodea2 /TheNodeaF InitNC
{ GetAngle dup -5.  add /AngleA ED -5.  sub 180 add /AngleB ED 0.67
 0.67  NCCurve  } if end gsave 1.0 SLW 0. setgray 0 setlinecap stroke
 grestore  grestore end
 1059 1025 a 1059 1025 a
 tx@Dict begin tx@NodeDict begin /t 0.5  def LPutCoor end PutBegin
 end
 1059 1025 a 1059
1025 a
 tx@Dict begin langle Rot  end
 1059 1025 a 1059 1025 a
 tx@Dict begin { 3.0 14.17484 3.87498 0.0 langle 90 sub  langle  sub
Uput exch pop add a PtoC h1 add exch w1 add exch } PutCoor PutBegin
 end
 1059 1025 a 1000 1041
a Fv(aac)1059 1025 y
 tx@Dict begin PutEnd  end
 1059 1025 a 1059 1025 a
 tx@Dict begin langle neg Rot  end
 1059 1025
a 1059 1025 a
 tx@Dict begin PutEnd  end
 1059 1025 a 1059 1025 a
 tx@Dict begin gsave STV newpath 1.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 /TheNodea3 /TheNodea4 InitNC
{ NCLine  } if end gsave 1.0 SLW 0. setgray 0 setlinecap stroke  grestore
 grestore end
 1059 1025 a 1059
1025 a
 tx@Dict begin tx@NodeDict begin /t 0.5  def LPutCoor end PutBegin
 end
 1059 1025 a 1059 1025 a
 tx@Dict begin langle Rot  end
 1059 1025 a 1059 1025
a
 tx@Dict begin { 3.0 4.72495 3.87498 0.0 langle 90 add  langle  sub
Uput exch pop add a PtoC h1 add exch w1 add exch } PutCoor PutBegin
 end
 1059 1025 a 1039 1041 a Fv(a)1059 1025 y
 tx@Dict begin PutEnd  end
 1059 1025
a 1059 1025 a
 tx@Dict begin langle neg Rot  end
 1059 1025 a 1059 1025 a
 tx@Dict begin PutEnd  end
 1059 1025 a 1059
1025 a
 tx@Dict begin gsave STV newpath 1.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 /TheNodea3 /TheNodeaF InitNC
{ tx@Dict begin /r 5.69046 def /Lineto { Arcto } def end /AngleA -90.
 def /AngleB -90.  def /armA 14.22636  def /armB 10.0  def NCAngles
 } if end gsave 1.0 SLW 0. setgray 0 setlinecap stroke  grestore  grestore
end
 1059 1025 a 1059 1025 a
 tx@Dict begin tx@NodeDict begin /t 1.5  def LPutCoor end PutBegin
 end
 1059 1025 a 1059 1025
a
 tx@Dict begin { 3.0 28.34967 4.98216 2.0 langle 90 add  Uput exch
pop add a PtoC h1 add exch w1 add exch } PutCoor PutBegin  end
 1059 1025 a 941 1037 a Fv(gtaaac)1059 1025 y
 tx@Dict begin PutEnd  end
 1059 1025
a 1059 1025 a
 tx@Dict begin PutEnd  end
 1059 1025 a 1059 1025 a
 tx@Dict begin gsave STV newpath 1.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 /TheNodea3 /TheNodeaF InitNC
{ tx@Dict begin /r 5.69046 def /Lineto { Arcto } def end /AngleA -90.
 def /AngleB -90.  def /armA 22.76227  def /armB 10.0  def NCAngles
 } if end gsave 1.0 SLW 0. setgray 0 setlinecap stroke  grestore  grestore
end
 1059 1025 a 1059
1025 a
 tx@Dict begin tx@NodeDict begin /t 1.5  def LPutCoor end PutBegin
 end
 1059 1025 a 1059 1025 a
 tx@Dict begin { 3.0 4.72495 3.87498 0.0 langle 90 sub  Uput exch pop
add a PtoC h1 add exch w1 add exch } PutCoor PutBegin  end
 1059 1025 a 1039 1041
a Fv(c)1059 1025 y
 tx@Dict begin PutEnd  end
 1059 1025 a 1059 1025 a
 tx@Dict begin PutEnd  end
 1059 1025
a 1059 1025 a
 tx@Dict begin gsave STV newpath 1.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 /TheNodea4 /TheNodeaF InitNC
{ GetAngle dup 6.  add /AngleA ED 6.  sub 180 add /AngleB ED 0.67 
0.67  NCCurve  } if end gsave 1.0 SLW 0. setgray 0 setlinecap stroke
 grestore  grestore end
 1059 1025 a 1059 1025 a
 tx@Dict begin tx@NodeDict begin /t 0.5  def LPutCoor end PutBegin
 end
 1059 1025 a 1059
1025 a
 tx@Dict begin langle Rot  end
 1059 1025 a 1059 1025 a
 tx@Dict begin { 3.0 9.44989 3.87498 0.0 langle 90 add  langle  sub
Uput exch pop add a PtoC h1 add exch w1 add exch } PutCoor PutBegin
 end
 1059 1025 a 1020 1041
a Fv(ac)1059 1025 y
 tx@Dict begin PutEnd  end
 1059 1025 a 1059 1025 a
 tx@Dict begin langle neg Rot  end
 1059 1025
a 1059 1025 a
 tx@Dict begin PutEnd  end
 1059 1025 a 1059 1025 a
 tx@Dict begin gsave STV newpath 1.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 /TheNodea4 /TheNodeaF InitNC
{ GetAngle dup -6.  add /AngleA ED -6.  sub 180 add /AngleB ED 0.67
 0.67  NCCurve  } if end gsave 1.0 SLW 0. setgray 0 setlinecap stroke
 grestore  grestore end
 1059 1025 a 1059
1025 a
 tx@Dict begin tx@NodeDict begin /t 0.5  def LPutCoor end PutBegin
 end
 1059 1025 a 1059 1025 a
 tx@Dict begin langle Rot  end
 1059 1025 a 1059 1025
a
 tx@Dict begin { 3.0 4.72495 3.87498 0.0 langle 90 sub  langle  sub
Uput exch pop add a PtoC h1 add exch w1 add exch } PutCoor PutBegin
 end
 1059 1025 a 1039 1041 a Fv(c)1059 1025 y
 tx@Dict begin PutEnd  end
 1059 1025
a 1059 1025 a
 tx@Dict begin langle neg Rot  end
 1059 1025 a 1059 1025 a
 tx@Dict begin PutEnd  end
 1059 1025 a 1617
1291 a Fm(Fig.)15 b(3.)27 b Fl(CD)n(A)-8 b(WG)p Fw(\()p
Fv(gtagtaaac)p Fw(\).)681 1588 y Fy(transitions.)29 b(Figure)24
b(3)30 b(displa)n(ys)f(the)i(compacted)e(v)n(ersion,)g(obtained)h
(after)g(deletion)g(of)681 1687 y(the)f(7)f(states,)h(using)f(m)n
(ulti-letter)h(transitions.)f(The)h(resulting)f(automaton)g(has)h(only)
f(5)681 1787 y(states)f(and)g(11)g(edges.)805 1889 y(According)36
b(to)g(exp)r(erimen)n(ts)g(made)g(on)g(biological)e(DNA)k(sequences,)d
(considering)681 1989 y(them)28 b(as)e(w)n(ords)g(o)n(v)n(er)f(the)j
(alphab)r(et)f Fr(\006)h Fy(=)22 b Fq(f)p Fr(a;)14 b(c;)g(g)s(;)g(t)p
Fq(g)p Fy(,)26 b(w)n(e)h(got)f(that)i(more)e(than)h(60\045)g(of)681
2089 y(states)j(ha)n(v)n(e)f(outdegree)g(one.)h(So,)g(the)g(deletion)h
(of)f(these)g(states)g(is)g(w)n(orth,)g(it)g(pro)n(vides)681
2188 y(an)d(imp)r(ortan)n(t)f(sa)n(ving.)g(The)h(a)n(v)n(erage)d
(analysis)i(of)h(the)h(n)n(um)n(b)r(er)f(of)g(states)f(and)h(edges)f
(in)681 2288 y(done)h(in)h([5])f(in)h(a)f(Bernouilly)g(mo)r(del)h(of)f
(probabilit)n(y)-7 b(.)805 2426 y(When)34 b(a)e(state)h
Fr(p)g Fy(is)g(deleted,)g(the)g(deletion)g(of)g(its)g(outgoing)f(edges)
g(is)h(realized)f(b)n(y)681 2526 y(concatenating)23 b(their)i(lab)r(el)
g(to)f(the)h(lab)r(els)f(of)h(incoming)f(edges.)g(F)-7
b(or)24 b(example,)g(let)h Fr(r)j Fy(and)681 2626 y Fr(p)36
b Fy(b)r(e)h(states)g(link)n(ed)f(b)n(y)h(a)f(transition)g(\()p
Fr(r)n(;)14 b(b;)g(p)p Fy(\).)37 b(The)g(edges)f(\()p
Fr(r)n(;)14 b(b;)g(p)p Fy(\))36 b(and)h(\()p Fr(p;)14
b(a;)g(q)s Fy(\))37 b(are)681 2725 y(replaced)25 b(b)n(y)h(the)h(edge)e
(\()p Fr(r)n(;)14 b(ba;)g(q)s Fy(\))27 b(if)g Fr(p)f
Fy(is)g(deleted.)g(By)g(recursion,)f(this)i(extends)f(to)g(ev)n(ery)681
2825 y(m)n(ulti-letter)h(transition)g(\()p Fr(r)n(;)14
b(\013;)g(p)p Fy(\).)805 2927 y(In)32 b(the)g(example)f(of)h(Figure)24
b(3,)31 b(one)h(can)f(note)g(that,)h(inside)g(the)g(w)n(ord)e
Fk(gtagtaaac)p Fy(,)681 3027 y(o)r(ccurrences)22 b(of)i
Fk(g)g Fy(are)f(follo)n(w)n(ed)g(b)n(y)h Fk(ta)p Fy(,)f(and)h(those)g
(of)g Fk(t)g Fy(and)g Fk(gt)f Fy(b)n(y)h Fk(a)p Fy(.)g(The)g(w)n(ord)f
Fk(gta)g Fy(is)681 3127 y(the)j(represen)n(tativ)n(e)e(of)i(state)f(2,)
h(and)f(there)h(is)f(no)h(state)f(corresp)r(onding)f(to)i(sub)n(w)n
(ords)e Fk(g)p Fy(,)681 3226 y Fk(gt)p Fy(,)f(nor)h Fk(t)p
Fy(.)g(State)g(I)g(is)g(directly)g(connected)g(to)g(state)g(2)g(b)n(y)g
(edges)f(\(I,)p Fk(gta)p Fy(,2\))g(and)h(\(I,)p Fk(ta)p
Fy(,2\).)681 3326 y(States)j(1)g(and)h(2)f(of)h(Figure)c(1)j(no)g
(longer)g(exist.)805 3464 y(The)33 b(su\016x)g(links)g(de\014ned)g(on)g
(states)f(of)h(D)n(A)-9 b(W)n(Gs)33 b(remain)g(v)-5 b(alid)33
b(when)g(w)n(e)f(reduce)681 3564 y(them)c(to)f(CD)n(A)-9
b(W)n(Gs)28 b(due)g(to)f(the)h(next)g(lemma,)g(whic)n(h)f(pro)r(of)g
(is)h(straigh)n(tforw)n(ard.)681 3742 y Fm(Lemma)13 b(6.)41
b Fs(If)29 b Fr(p)g Fs(is)g(a)g(state)f(of)i(CD)n(A)-8
b(WG)o(\()p Fr(x)p Fs(\),)30 b(then)e Fr(s)2442 3754
y Fo(x)2484 3742 y Fy(\()p Fr(p)p Fy(\))h Fs(is)g(a)g(state)f(of)i(CD)n
(A)-8 b(WG)o(\()p Fr(x)p Fs(\).)681 4006 y Fm(3.2)94
b(Size)32 b(b)s(ounds)681 4187 y Fy(By)i(Theorem)24 b(2)35
b Fs(D)n(A)-8 b(WG)o Fy(\()p Fr(x)p Fy(\))36 b(is)f(linear)f(in)h
Fq(j)p Fr(x)p Fq(j)p Fy(.)h(As)f(w)n(e)f(shall)h(see)g(b)r(elo)n(w)f
(\(Section)25 b(3.3\),)681 4287 y(lab)r(els)h(of)g(m)n(ulti-letter)g
(transitions)f(are)g(implemen)n(ted)i(in)g(constan)n(t)e(space.)h(So,)g
(the)g(size)681 4386 y(of)32 b Fs(CD)n(A)-8 b(WG)o Fy(\()p
Fr(x)p Fy(\))34 b(is)e(also)f Fq(O)r Fy(\()p Fq(j)p Fr(x)p
Fq(j)p Fy(\).)j(Mean)n(while,)e(as)g(w)n(e)g(delete)h(man)n(y)e(states)
h(and)g(edges,)681 4486 y(w)n(e)d(review)f(the)i(exact)f(b)r(ounds)h
(on)f(the)h(n)n(um)n(b)r(er)f(of)g(states)g(and)g(edges)g(of)g
Fs(CD)n(A)-8 b(WG)p Fy(\()p Fr(x)p Fy(\).)681 4586 y(They)27
b(are)g(resp)r(ectiv)n(ely)g(denoted)g(b)n(y)h Fs(States)o
Fy(\()p Fr(x)p Fy(\))h(and)e Fs(Edges)q Fy(\()p Fr(x)p
Fy(\).)681 4764 y Fm(Lemma)13 b(7.)41 b Fs(Given)h Fr(x)h
Fq(2)h Fr(\006)1632 4734 y Fp(\003)1670 4764 y Fs(,)d(if)h
Fq(j)p Fr(x)p Fq(j)i Fy(=)f(0)p Fs(,)d(then)h(States)p
Fy(\()p Fr(x)p Fy(\))j(=)f(1)p Fs(;)e(if)g Fq(j)p Fr(x)p
Fq(j)j Fy(=)f(1)p Fs(,)e(then)681 4863 y Fr(S)5 b(tates)p
Fy(\()p Fr(x)p Fy(\))23 b(=)g(2)p Fs(;)29 b(otherwise)i
Fq(j)p Fr(x)p Fq(j)24 b(\025)f Fy(2)29 b Fs(and)h Fy(2)23
b Fq(\024)f Fs(States)p Fy(\()p Fr(x)p Fy(\))i Fq(\024)e(j)p
Fr(x)p Fq(j)d Fy(+)f(1)p Fs(.)p eop
%%Page: 7 7
7 6 bop 490 387 a Fs(The)35 b(upp)l(er)f(b)l(ound)g(on)g(the)h(numb)l
(er)e(of)i(states)e(is)i(r)l(e)l(ache)l(d)g(when)f Fr(x)h
Fs(is)f(in)g(the)g(form)365 487 y Fr(a)409 457 y Fp(j)p
Fo(x)p Fp(j)490 487 y Fs(,)d(for)f Fr(a)23 b Fq(2)h Fr(\006)5
b Fs(.)365 654 y(Pr)l(o)l(of.)43 b Fy(F)-7 b(or)27 b
Fq(j)p Fr(x)p Fq(j)d(\024)j Fy(1,)h(this)f(is)h(a)f(mere)g(v)n
(eri\014cation.)g(Assume)g(no)n(w)g Fq(j)p Fr(x)p Fq(j)d(\025)j
Fy(2.)1201 1236 y
 tx@Dict begin tx@NodeDict begin { 3.61111 2 div 6.83331 0.0 add 2
div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add 2.6 add } /TheNodeaI 11 {
InitCnode  } NewNode end end
 1201 1236 a @beginspecial @setspecial
 tx@Dict begin STP newpath 2.6 SLW 0. setgray  3.61111 2 div 6.83331
0.0 add 2 div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add CLW 2 div add 0
360 arc closepath gsave 2.6 SLW 0. setgray 0 setlinecap stroke  grestore
gsave 1.0 SLW 1. setgray stroke grestore end


@endspecial Fy(I)2133 1236 y
 tx@Dict begin tx@NodeDict begin { 6.5278 2 div 6.83331 0.0 add 2 div
2 copy 0.0 sub 4 2 roll Pyth 3.0 add 2.6 add } /TheNodeaF 11 { InitCnode
 } NewNode end end
 2133 1236 a @beginspecial
@setspecial
 tx@Dict begin STP newpath 2.6 SLW 0. setgray  6.5278 2 div 6.83331
0.0 add 2 div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add CLW 2 div add 0
360 arc closepath gsave 2.6 SLW 0. setgray 0 setlinecap stroke  grestore
gsave 1.0 SLW 1. setgray stroke grestore end
 
@endspecial Fy(F)1216 1302 y
 tx@Dict begin gsave STV newpath 1.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 /TheNodeaI /TheNodeaF InitNC
{ tx@Dict begin /r 2.84544 def /Lineto { Arcto } def end /AngleA 90.
 def /AngleB 90.  def /armA 22.76227  def /armB 10.0  def NCAngles
 } if end gsave 1.0 SLW 0. setgray 0 setlinecap stroke  grestore  grestore
end
 1216 1302 a
1216 1302 a
 tx@Dict begin tx@NodeDict begin /t 1.5  def LPutCoor end PutBegin
 end
 1216 1302 a 1216 1302 a
 tx@Dict begin { 3.0 23.62473 5.49998 0.0 langle 90 add  Uput exch
pop add a PtoC h1 add exch w1 add exch } PutCoor PutBegin  end
 1216 1302 a 1118
1325 a Fv(abcde)1216 1302 y
 tx@Dict begin PutEnd  end
 1216 1302 a 1216 1302 a
 tx@Dict begin PutEnd  end
 1216
1302 a 1216 1302 a
 tx@Dict begin gsave STV newpath 1.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 /TheNodeaI /TheNodeaF InitNC
{ tx@Dict begin /r 2.84544 def /Lineto { Arcto } def end /AngleA 90.
 def /AngleB 90.  def /armA 11.38092  def /armB 10.0  def NCAngles
 } if end gsave 1.0 SLW 0. setgray 0 setlinecap stroke  grestore  grestore
end
 1216 1302 a 1216 1302 a
 tx@Dict begin tx@NodeDict begin /t 1.5  def LPutCoor end PutBegin
 end
 1216 1302
a 1216 1302 a
 tx@Dict begin { 3.0 18.89978 5.49998 0.0 langle 90 add  Uput exch
pop add a PtoC h1 add exch w1 add exch } PutCoor PutBegin  end
 1216 1302 a 1137 1325 a Fv(bcde)1216 1302
y
 tx@Dict begin PutEnd  end
 1216 1302 a 1216 1302 a
 tx@Dict begin PutEnd  end
 1216 1302 a 1216 1302 a
 tx@Dict begin gsave STV newpath 1.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 /TheNodeaI /TheNodeaF InitNC
{ NCLine  } if end gsave 1.0 SLW 0. setgray 0 setlinecap stroke  grestore
 grestore end
 1216
1302 a 1216 1302 a
 tx@Dict begin tx@NodeDict begin /t 0.5  def LPutCoor end PutBegin
 end
 1216 1302 a 1216 1302 a
 tx@Dict begin langle Rot  end
 1216 1302
a 1216 1302 a
 tx@Dict begin { 3.0 14.17484 5.49998 0.0 langle 90 add  langle  sub
Uput exch pop add a PtoC h1 add exch w1 add exch } PutCoor PutBegin
 end
 1216 1302 a 1157 1325 a Fv(cde)1216 1302
y
 tx@Dict begin PutEnd  end
 1216 1302 a 1216 1302 a
 tx@Dict begin langle neg Rot  end
 1216 1302 a 1216 1302 a
 tx@Dict begin PutEnd  end
 1216
1302 a 1216 1302 a
 tx@Dict begin gsave STV newpath 1.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 /TheNodeaI /TheNodeaF InitNC
{ tx@Dict begin /r 2.84544 def /Lineto { Arcto } def end /AngleA -90.
 def /AngleB -90.  def /armA 11.38092  def /armB 10.0  def NCAngles
 } if end gsave 1.0 SLW 0. setgray 0 setlinecap stroke  grestore  grestore
end
 1216 1302 a 1216 1302 a
 tx@Dict begin tx@NodeDict begin /t 1.5  def LPutCoor end PutBegin
 end
 1216 1302
a 1216 1302 a
 tx@Dict begin { 3.0 9.44989 5.49998 0.0 langle 90 add  Uput exch pop
add a PtoC h1 add exch w1 add exch } PutCoor PutBegin  end
 1216 1302 a 1177 1325 a Fv(de)1216 1302
y
 tx@Dict begin PutEnd  end
 1216 1302 a 1216 1302 a
 tx@Dict begin PutEnd  end
 1216 1302 a 1216 1302 a
 tx@Dict begin gsave STV newpath 1.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 /TheNodeaI /TheNodeaF InitNC
{ tx@Dict begin /r 2.84544 def /Lineto { Arcto } def end /AngleA -90.
 def /AngleB -90.  def /armA 22.76227  def /armB 10.0  def NCAngles
 } if end gsave 1.0 SLW 0. setgray 0 setlinecap stroke  grestore  grestore
end
 1216
1302 a 1216 1302 a
 tx@Dict begin tx@NodeDict begin /t 1.5  def LPutCoor end PutBegin
 end
 1216 1302 a 1216 1302 a
 tx@Dict begin { 3.0 4.72495 3.87498 0.0 langle 90 add  Uput exch pop
add a PtoC h1 add exch w1 add exch } PutCoor PutBegin  end
 1216 1302
a 1196 1318 a Fv(e)1216 1302 y
 tx@Dict begin PutEnd  end
 1216 1302 a 1216 1302
a
 tx@Dict begin PutEnd  end
 1216 1302 a 548 1568 a Fm(Fig.)15 b(4.)27 b Fw(A)e(CD)n(A)-9
b(W)n(G)26 b(with)g(the)f(minim)n(um)d(n)n(um)n(b)r(er)i(of)i(states,)h
Fl(CD)n(A)-8 b(WG)p Fw(\()p Fv(abcde)p Fw(\).)490 1856
y Fy(The)34 b(lo)n(w)n(er)f(b)r(ound)i(is)f(ob)n(vious)f(and)h
(obtained)g(when)g Fr(x)h Fy(is)f(comp)r(osed)g(of)g(pairwise)365
1955 y(di\013eren)n(t)28 b(letters.)490 2055 y(Consider)20
b(the)i(su\016x)f(tree)g(of)h Fr(x)p Fy($,)f(where)g($)g(is)h(a)f(mark)
n(er.)e(It)j(has)f(exactly)g Fq(j)p Fr(x)p Fq(j)6 b Fy(+)g(1)21
b(lea)n(v)n(es)365 2155 y(and)30 b(at)g(most)f Fq(j)p
Fr(x)p Fq(j)i Fy(in)n(ternal)e(no)r(des.)h(Its)g(minimization)g(in)n
(to)f Fs(CD)n(A)-8 b(WG)p Fy(\()p Fr(x)p Fy(\))30 b(compacts)g(all)365
2254 y(lea)n(v)n(es)g(in)n(to)h(the)h(\014nal)f(state)g(F,)h(and)f(p)r
(ossibly)g(put)h(together)e(other)h(no)r(des.)g(Remo)n(ving)365
2354 y(the)22 b(mark)n(er)d(do)r(es)i(not)g(c)n(hange)f(the)i(n)n(um)n
(b)r(er)f(of)g(states.)g(So,)g(w)n(e)g(ha)n(v)n(e)f Fs(States)o
Fy(\()p Fr(x)p Fy(\))k Fq(\024)f(j)p Fr(x)p Fq(j)6 b
Fy(+)g(1.)490 2454 y(The)28 b(w)n(ord)g Fr(a)912 2424
y Fp(j)p Fo(x)p Fp(j)1021 2454 y Fy(satis\014es)g(this)h(prop)r(ert)n
(y)e(since)i(eac)n(h)e(su\016x)i Fr(a)2488 2424 y Fp(j)p
Fn(0)p Fp(j)2564 2454 y Fy(,)g Fr(a)2660 2424 y Fp(j)p
Fn(1)p Fp(j)2736 2454 y Fy(,)g(.)14 b(.)g(.)g(,)28 b
Fr(a)2994 2424 y Fp(j)p Fo(x)p Fp(j)3104 2454 y Fy(rep-)365
2554 y(resen)n(ts)37 b(exactly)f(one)h(class.)f(So,)h(w)n(e)g(ha)n(v)n
(e)f Fq(j)p Fr(x)p Fq(j)p Fy(+1)h(classes)f(and)h(the)h(same)e(n)n(um)n
(b)r(er)h(of)365 2653 y(states.)846 3140 y
 tx@Dict begin tx@NodeDict begin { 3.61111 2 div 6.83331 0.0 add 2
div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add 2.6 add } /TheNodeaI 11 {
InitCnode  } NewNode end end
 846 3140 a
@beginspecial @setspecial
 tx@Dict begin STP newpath 2.6 SLW 0. setgray  3.61111 2 div 6.83331
0.0 add 2 div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add CLW 2 div add 0
360 arc closepath gsave 2.6 SLW 0. setgray 0 setlinecap stroke  grestore
gsave 1.0 SLW 1. setgray stroke grestore end
 
@endspecial Fy(I)1195 3138
y
 tx@Dict begin tx@NodeDict begin { 5.00002 2 div 6.44444 0.0 add 2
div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add 2.6 add } /TheNodea2 11 {
InitCnode  } NewNode end end
 1195 3138 a @beginspecial @setspecial
 tx@Dict begin STP newpath 2.6 SLW 0. setgray  5.00002 2 div 6.44444
0.0 add 2 div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add CLW 2 div add 0
360 arc closepath gsave 2.6 SLW 0. setgray 0 setlinecap stroke  grestore
gsave 1.0 SLW 1. setgray stroke grestore end
 
@endspecial
Fy(2)1549 3138 y
 tx@Dict begin tx@NodeDict begin { 5.00002 2 div 6.44444 0.0 add 2
div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add 2.6 add } /TheNodea3 11 {
InitCnode  } NewNode end end
 1549 3138 a @beginspecial @setspecial
 tx@Dict begin STP newpath 2.6 SLW 0. setgray  5.00002 2 div 6.44444
0.0 add 2 div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add CLW 2 div add 0
360 arc closepath gsave 2.6 SLW 0. setgray 0 setlinecap stroke  grestore
gsave 1.0 SLW 1. setgray stroke grestore end


@endspecial Fy(3)1904 3138 y
 tx@Dict begin tx@NodeDict begin { 5.00002 2 div 6.44444 0.0 add 2
div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add 2.6 add } /TheNodea4 11 {
InitCnode  } NewNode end end
 1904 3138 a @beginspecial
@setspecial
 tx@Dict begin STP newpath 2.6 SLW 0. setgray  5.00002 2 div 6.44444
0.0 add 2 div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add CLW 2 div add 0
360 arc closepath gsave 2.6 SLW 0. setgray 0 setlinecap stroke  grestore
gsave 1.0 SLW 1. setgray stroke grestore end
 
@endspecial Fy(4)2258 3138 y
 tx@Dict begin tx@NodeDict begin { 5.00002 2 div 6.44444 0.0 add 2
div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add 2.6 add } /TheNodea5 11 {
InitCnode  } NewNode end end
 2258 3138 a
@beginspecial @setspecial
 tx@Dict begin STP newpath 2.6 SLW 0. setgray  5.00002 2 div 6.44444
0.0 add 2 div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add CLW 2 div add 0
360 arc closepath gsave 2.6 SLW 0. setgray 0 setlinecap stroke  grestore
gsave 1.0 SLW 1. setgray stroke grestore end
 
@endspecial Fy(5)2606 3140
y
 tx@Dict begin tx@NodeDict begin { 6.5278 2 div 6.83331 0.0 add 2 div
2 copy 0.0 sub 4 2 roll Pyth 3.0 add 2.6 add } /TheNodeaF 11 { InitCnode
 } NewNode end end
 2606 3140 a @beginspecial @setspecial
 tx@Dict begin STP newpath 2.6 SLW 0. setgray  6.5278 2 div 6.83331
0.0 add 2 div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add CLW 2 div add 0
360 arc closepath gsave 2.6 SLW 0. setgray 0 setlinecap stroke  grestore
gsave 1.0 SLW 1. setgray stroke grestore end
 
@endspecial
Fy(F)861 3040 y
 tx@Dict begin gsave STV newpath 1.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 /TheNodeaI /TheNodea2 InitNC
{ NCLine  } if end gsave 1.0 SLW 0. setgray 0 setlinecap stroke  grestore
 grestore end
 861 3040 a 861 3040 a
 tx@Dict begin tx@NodeDict begin /t 0.5  def LPutCoor end PutBegin
 end
 861 3040 a 861
3040 a
 tx@Dict begin langle Rot  end
 861 3040 a 861 3040 a
 tx@Dict begin { 3.0 4.72495 3.87498 0.0 langle 90 add  langle  sub
Uput exch pop add a PtoC h1 add exch w1 add exch } PutCoor PutBegin
 end
 861 3040 a 841 3057 a Fv(a)861
3040 y
 tx@Dict begin PutEnd  end
 861 3040 a 861 3040 a
 tx@Dict begin langle neg Rot  end
 861 3040 a 861 3040 a
 tx@Dict begin PutEnd  end
 861
3040 a 861 3040 a
 tx@Dict begin gsave STV newpath 1.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 /TheNodea2 /TheNodea3 InitNC
{ NCLine  } if end gsave 1.0 SLW 0. setgray 0 setlinecap stroke  grestore
 grestore end
 861 3040 a 861 3040 a
 tx@Dict begin tx@NodeDict begin /t 0.5  def LPutCoor end PutBegin
 end
 861 3040 a 861
3040 a
 tx@Dict begin langle Rot  end
 861 3040 a 861 3040 a
 tx@Dict begin { 3.0 4.72495 3.87498 0.0 langle 90 add  langle  sub
Uput exch pop add a PtoC h1 add exch w1 add exch } PutCoor PutBegin
 end
 861 3040 a 841 3057 a Fv(a)861
3040 y
 tx@Dict begin PutEnd  end
 861 3040 a 861 3040 a
 tx@Dict begin langle neg Rot  end
 861 3040 a 861 3040 a
 tx@Dict begin PutEnd  end
 861
3040 a 861 3040 a
 tx@Dict begin gsave STV newpath 1.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 /TheNodea3 /TheNodea4 InitNC
{ NCLine  } if end gsave 1.0 SLW 0. setgray 0 setlinecap stroke  grestore
 grestore end
 861 3040 a 861 3040 a
 tx@Dict begin tx@NodeDict begin /t 0.5  def LPutCoor end PutBegin
 end
 861 3040 a 861
3040 a
 tx@Dict begin langle Rot  end
 861 3040 a 861 3040 a
 tx@Dict begin { 3.0 4.72495 3.87498 0.0 langle 90 add  langle  sub
Uput exch pop add a PtoC h1 add exch w1 add exch } PutCoor PutBegin
 end
 861 3040 a 841 3057 a Fv(a)861
3040 y
 tx@Dict begin PutEnd  end
 861 3040 a 861 3040 a
 tx@Dict begin langle neg Rot  end
 861 3040 a 861 3040 a
 tx@Dict begin PutEnd  end
 861
3040 a 861 3040 a
 tx@Dict begin gsave STV newpath 1.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 /TheNodea4 /TheNodea5 InitNC
{ NCLine  } if end gsave 1.0 SLW 0. setgray 0 setlinecap stroke  grestore
 grestore end
 861 3040 a 861 3040 a
 tx@Dict begin tx@NodeDict begin /t 0.5  def LPutCoor end PutBegin
 end
 861 3040 a 861
3040 a
 tx@Dict begin langle Rot  end
 861 3040 a 861 3040 a
 tx@Dict begin { 3.0 4.72495 3.87498 0.0 langle 90 add  langle  sub
Uput exch pop add a PtoC h1 add exch w1 add exch } PutCoor PutBegin
 end
 861 3040 a 841 3057 a Fv(a)861
3040 y
 tx@Dict begin PutEnd  end
 861 3040 a 861 3040 a
 tx@Dict begin langle neg Rot  end
 861 3040 a 861 3040 a
 tx@Dict begin PutEnd  end
 861
3040 a 861 3040 a
 tx@Dict begin gsave STV newpath 1.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 /TheNodea5 /TheNodeaF InitNC
{ NCLine  } if end gsave 1.0 SLW 0. setgray 0 setlinecap stroke  grestore
 grestore end
 861 3040 a 861 3040 a
 tx@Dict begin tx@NodeDict begin /t 0.5  def LPutCoor end PutBegin
 end
 861 3040 a 861
3040 a
 tx@Dict begin langle Rot  end
 861 3040 a 861 3040 a
 tx@Dict begin { 3.0 4.72495 3.87498 0.0 langle 90 add  langle  sub
Uput exch pop add a PtoC h1 add exch w1 add exch } PutCoor PutBegin
 end
 861 3040 a 841 3057 a Fv(a)861
3040 y
 tx@Dict begin PutEnd  end
 861 3040 a 861 3040 a
 tx@Dict begin langle neg Rot  end
 861 3040 a 861 3040 a
 tx@Dict begin PutEnd  end
 861
3040 a 541 3306 a Fm(Fig.)14 b(5.)27 b Fw(A)f(CD)n(A)-9
b(W)n(G)25 b(with)h(the)f(maxim)n(um)e(n)n(um)n(b)r(er)g(of)k(states,)g
Fl(CD)n(A)-8 b(WG)p Fw(\()p Fv(aaaaa)p Fw(\).)490 3614
y Fy(Figures)24 b(4)e(and)h(5)f(displa)n(y)g(CD)n(A)-9
b(W)n(Gs)23 b(whose)f(n)n(um)n(b)r(ers)g(of)h(states)f(are)g(minim)n
(um)h(and)365 3714 y(maxim)n(um,)28 b(resp)r(ectiv)n(ely)-7
b(,)27 b(for)g(w)n(ords)f(of)h(length)h(5.)365 3898 y
Fm(Lemma)14 b(8.)41 b Fs(Given)34 b Fr(x)d Fq(2)f Fr(\006)1283
3868 y Fp(\003)1321 3898 y Fs(,)k(if)h Fq(j)p Fr(x)p
Fq(j)30 b Fy(=)g(0)p Fs(,)k(Edges)q Fy(\()p Fr(x)p Fy(\))d(=)f(0)p
Fs(;)j(if)i Fq(j)p Fr(x)p Fq(j)c Fy(=)f(1)p Fs(,)j(Edges)q
Fy(\()p Fr(x)p Fy(\))e(=)f(1)p Fs(;)365 3998 y(otherwise)h
Fq(j)p Fr(x)p Fq(j)24 b(\025)f Fy(2)29 b Fs(and)h(Edges)q
Fy(\()p Fr(x)p Fy(\))24 b Fq(\024)f Fy(2)p Fq(j)p Fr(x)p
Fq(j)18 b(\000)g Fy(2)p Fs(.)490 4098 y(The)36 b(upp)l(er)f(b)l(ound)h
(on)f(the)g(numb)l(er)g(of)h(e)l(dges)f(is)h(r)l(e)l(ache)l(d)g(when)g
Fr(x)f Fs(is)h(in)f(the)g(form)365 4197 y Fr(a)409 4167
y Fp(j)p Fo(x)p Fp(j\000)p Fn(1)575 4197 y Fr(c)p Fs(,)30
b(for)h Fr(a)f Fs(and)g Fr(c)g Fs(two)f(di\013er)l(ent)h(letters)g(of)g
Fr(\006)5 b Fs(.)365 4365 y(Pr)l(o)l(of.)43 b Fy(F)-7
b(or)27 b Fq(j)p Fr(x)p Fq(j)d(\024)f Fy(1,)k(this)h(is)f(a)g(mere)h(v)
n(eri\014cation.)e(Assume)i(no)n(w)f Fq(j)p Fr(x)p Fq(j)c(\025)g
Fy(2.)490 4465 y(If)34 b Fr(x)g Fy(is)g(in)f(the)h(form)g
Fr(a)1248 4435 y Fp(j)p Fo(x)p Fp(j)1329 4465 y Fy(,)g(the)g(n)n(um)n
(b)r(er)f(of)h(edges)e(is)i(exactly)f Fq(j)p Fr(x)p Fq(j)p
Fy(.)h(So,)g(w)n(e)f(ha)n(v)n(e)f(to)365 4565 y(pro)n(v)n(e)j(the)h
(upp)r(er)h(b)r(ound)f(for)g(a)f(w)n(ord)g Fr(x)i Fy(con)n(taining)e
(at)h(least)g(t)n(w)n(o)f(di\013eren)n(t)h(letters.)365
4664 y(Consider)24 b(the)i(su\016x)f(tree)g(of)g Fr(x)p
Fy($.)g(It)h(has)e(exactly)h Fq(j)p Fr(x)p Fq(j)14 b
Fy(+)g(1)24 b(lea)n(v)n(es.)f(It)j(has)e(at)i(most)e
Fq(j)p Fr(x)p Fq(j)14 b(\000)g Fy(1)365 4764 y(in)n(ternal)26
b(no)r(des)f(in)h(this)h(situation)e(\(b)r(ecause)h(the)g(ro)r(ot)g
(has)f(outdegree)g(3\).)h(The)g(n)n(um)n(b)r(er)365 4863
y(of)g(edges)e(in)i(the)f(tree)g(is)g(at)g(most)g(2)p
Fq(j)p Fr(x)p Fq(j)14 b(\000)g Fy(1.)25 b(After)g(minimization)h(in)n
(to)f Fs(CD)n(A)-8 b(WG)o Fy(\()p Fr(x)p Fy(\))26 b(and)p
eop
%%Page: 8 8
8 7 bop 681 387 a Fy(remo)n(ving)28 b(the)j(mark)n(er,)e(all)g(edges)h
(ma)n(y)f(remain)h(except)g(the)h(edge)f(lab)r(eled)g(b)n(y)g($.)g
(This)681 487 y(giv)n(e)c(the)i(upp)r(er)g(b)r(ound)g(of)g(2)p
Fq(j)p Fr(x)p Fq(j)18 b(\000)g Fy(2.)805 591 y(The)27
b(automaton)f Fs(CD)n(A)-8 b(WG)o Fy(\()p Fr(a)1790 561
y Fp(j)p Fo(x)p Fp(j\000)p Fn(1)1956 591 y Fr(c)p Fy(\),)27
b(for)f Fr(a)h Fy(and)f Fr(c)h Fy(t)n(w)n(o)f(di\013eren)n(t)g(letters)
h(of)f Fr(\006)5 b Fy(,)26 b(has)681 691 y Fq(j)p Fr(x)p
Fq(j)f Fy(states)f(and)g(exactly)f(2)p Fq(j)p Fr(x)p
Fq(j)12 b(\000)g Fy(2)24 b(edges,)f(distributed)i(as)f
Fq(j)p Fr(x)p Fq(j)12 b(\000)g Fy(1)24 b(solid)g(edges)f(and)h
Fq(j)p Fr(x)p Fq(j)12 b(\000)g Fy(1)681 790 y(non-solid)26
b(edges.)1162 1781 y
 tx@Dict begin tx@NodeDict begin { 3.61111 2 div 6.83331 0.0 add 2
div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add 2.6 add } /TheNodeaI 11 {
InitCnode  } NewNode end end
 1162 1781 a @beginspecial @setspecial
 tx@Dict begin STP newpath 2.6 SLW 0. setgray  3.61111 2 div 6.83331
0.0 add 2 div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add CLW 2 div add 0
360 arc closepath gsave 2.6 SLW 0. setgray 0 setlinecap stroke  grestore
gsave 1.0 SLW 1. setgray stroke grestore end


@endspecial Fy(I)1510 1779 y
 tx@Dict begin tx@NodeDict begin { 5.00002 2 div 6.44444 0.0 add 2
div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add 0.8 add } /TheNodea2 11 {
InitCnode  } NewNode end end
 1510 1779 a @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  5.00002 2 div 6.44444
0.0 add 2 div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add CLW 2 div add 0
360 arc closepath gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore
end
 
@endspecial Fy(2)1865 1779 y
 tx@Dict begin tx@NodeDict begin { 5.00002 2 div 6.44444 0.0 add 2
div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add 0.8 add } /TheNodea3 11 {
InitCnode  } NewNode end end
 1865 1779 a
@beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  5.00002 2 div 6.44444
0.0 add 2 div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add CLW 2 div add 0
360 arc closepath gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore
end
 
@endspecial Fy(3)2219 1779
y
 tx@Dict begin tx@NodeDict begin { 5.00002 2 div 6.44444 0.0 add 2
div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add 0.8 add } /TheNodea4 11 {
InitCnode  } NewNode end end
 2219 1779 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  5.00002 2 div 6.44444
0.0 add 2 div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add CLW 2 div add 0
360 arc closepath gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore
end
 
@endspecial
Fy(4)2573 1779 y
 tx@Dict begin tx@NodeDict begin { 5.00002 2 div 6.44444 0.0 add 2
div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add 0.8 add } /TheNodea5 11 {
InitCnode  } NewNode end end
 2573 1779 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  5.00002 2 div 6.44444
0.0 add 2 div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add CLW 2 div add 0
360 arc closepath gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore
end


@endspecial Fy(5)2921 1781 y
 tx@Dict begin tx@NodeDict begin { 6.5278 2 div 6.83331 0.0 add 2 div
2 copy 0.0 sub 4 2 roll Pyth 3.0 add 2.6 add } /TheNodeaF 11 { InitCnode
 } NewNode end end
 2921 1781 a @beginspecial
@setspecial
 tx@Dict begin STP newpath 2.6 SLW 0. setgray  6.5278 2 div 6.83331
0.0 add 2 div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add CLW 2 div add 0
360 arc closepath gsave 2.6 SLW 0. setgray 0 setlinecap stroke  grestore
gsave 1.0 SLW 1. setgray stroke grestore end
 
@endspecial Fy(F)1177 1635 y
 tx@Dict begin gsave STV newpath 1.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 /TheNodeaI /TheNodea2 InitNC
{ NCLine  } if end gsave 1.0 SLW 0. setgray 0 setlinecap stroke  grestore
 grestore end
 1177 1635 a
1177 1635 a
 tx@Dict begin tx@NodeDict begin /t 0.5  def LPutCoor end PutBegin
 end
 1177 1635 a 1177 1635 a
 tx@Dict begin langle Rot  end
 1177 1635 a 1177
1635 a
 tx@Dict begin { 3.0 4.72495 3.87498 0.0 langle 90 add  langle  sub
Uput exch pop add a PtoC h1 add exch w1 add exch } PutCoor PutBegin
 end
 1177 1635 a 1157 1651 a Fv(a)1177 1635 y
 tx@Dict begin PutEnd  end
 1177
1635 a 1177 1635 a
 tx@Dict begin langle neg Rot  end
 1177 1635 a 1177 1635 a
 tx@Dict begin PutEnd  end
 1177 1635
a 1177 1635 a
 tx@Dict begin gsave STV newpath 1.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 /TheNodea2 /TheNodea3 InitNC
{ NCLine  } if end gsave 1.0 SLW 0. setgray 0 setlinecap stroke  grestore
 grestore end
 1177 1635 a 1177 1635 a
 tx@Dict begin tx@NodeDict begin /t 0.5  def LPutCoor end PutBegin
 end
 1177 1635 a 1177
1635 a
 tx@Dict begin langle Rot  end
 1177 1635 a 1177 1635 a
 tx@Dict begin { 3.0 4.72495 3.87498 0.0 langle 90 add  langle  sub
Uput exch pop add a PtoC h1 add exch w1 add exch } PutCoor PutBegin
 end
 1177 1635 a 1157 1651
a Fv(a)1177 1635 y
 tx@Dict begin PutEnd  end
 1177 1635 a 1177 1635 a
 tx@Dict begin langle neg Rot  end
 1177 1635
a 1177 1635 a
 tx@Dict begin PutEnd  end
 1177 1635 a 1177 1635 a
 tx@Dict begin gsave STV newpath 1.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 /TheNodea3 /TheNodea4 InitNC
{ NCLine  } if end gsave 1.0 SLW 0. setgray 0 setlinecap stroke  grestore
 grestore end
 1177 1635 a 1177
1635 a
 tx@Dict begin tx@NodeDict begin /t 0.5  def LPutCoor end PutBegin
 end
 1177 1635 a 1177 1635 a
 tx@Dict begin langle Rot  end
 1177 1635 a 1177 1635
a
 tx@Dict begin { 3.0 4.72495 3.87498 0.0 langle 90 add  langle  sub
Uput exch pop add a PtoC h1 add exch w1 add exch } PutCoor PutBegin
 end
 1177 1635 a 1157 1651 a Fv(a)1177 1635 y
 tx@Dict begin PutEnd  end
 1177 1635
a 1177 1635 a
 tx@Dict begin langle neg Rot  end
 1177 1635 a 1177 1635 a
 tx@Dict begin PutEnd  end
 1177 1635 a 1177
1635 a
 tx@Dict begin gsave STV newpath 1.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 /TheNodea4 /TheNodea5 InitNC
{ NCLine  } if end gsave 1.0 SLW 0. setgray 0 setlinecap stroke  grestore
 grestore end
 1177 1635 a 1177 1635 a
 tx@Dict begin tx@NodeDict begin /t 0.5  def LPutCoor end PutBegin
 end
 1177 1635 a 1177 1635
a
 tx@Dict begin langle Rot  end
 1177 1635 a 1177 1635 a
 tx@Dict begin { 3.0 4.72495 3.87498 0.0 langle 90 add  langle  sub
Uput exch pop add a PtoC h1 add exch w1 add exch } PutCoor PutBegin
 end
 1177 1635 a 1157 1651 a Fv(a)1177
1635 y
 tx@Dict begin PutEnd  end
 1177 1635 a 1177 1635 a
 tx@Dict begin langle neg Rot  end
 1177 1635 a 1177 1635
a
 tx@Dict begin PutEnd  end
 1177 1635 a 1177 1635 a
 tx@Dict begin gsave STV newpath 1.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 /TheNodea5 /TheNodeaF InitNC
{ NCLine  } if end gsave 1.0 SLW 0. setgray 0 setlinecap stroke  grestore
 grestore end
 1177 1635 a 1177 1635 a
 tx@Dict begin tx@NodeDict begin /t 0.5  def LPutCoor end PutBegin
 end
 1177
1635 a 1177 1635 a
 tx@Dict begin langle Rot  end
 1177 1635 a 1177 1635 a
 tx@Dict begin { 3.0 9.44989 3.87498 0.0 langle 90 add  langle  sub
Uput exch pop add a PtoC h1 add exch w1 add exch } PutCoor PutBegin
 end
 1177 1635
a 1138 1651 a Fv(ac)1177 1635 y
 tx@Dict begin PutEnd  end
 1177 1635 a 1177 1635
a
 tx@Dict begin langle neg Rot  end
 1177 1635 a 1177 1635 a
 tx@Dict begin PutEnd  end
 1177 1635 a 1177 1635 a
 tx@Dict begin gsave STV newpath 1.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 /TheNodea5 /TheNodeaF InitNC
{ tx@Dict begin /r 2.84544 def /Lineto { Arcto } def end /AngleA 90.
 def /AngleB 90.  def /armA 14.22636  def /armB 10.0  def NCAngles
 } if end gsave 1.0 SLW 0. setgray 0 setlinecap stroke  grestore  grestore
end
 1177
1635 a 1177 1635 a
 tx@Dict begin tx@NodeDict begin /t 1.5  def LPutCoor end PutBegin
 end
 1177 1635 a 1177 1635 a
 tx@Dict begin { 3.0 4.72495 3.87498 0.0 langle 90 add  Uput exch pop
add a PtoC h1 add exch w1 add exch } PutCoor PutBegin  end
 1177 1635
a 1157 1651 a Fv(c)1177 1635 y
 tx@Dict begin PutEnd  end
 1177 1635 a 1177 1635
a
 tx@Dict begin PutEnd  end
 1177 1635 a 1177 1635 a
 tx@Dict begin gsave STV newpath 1.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 /TheNodea4 /TheNodeaF InitNC
{ tx@Dict begin /r 5.69046 def /Lineto { Arcto } def end /AngleA 90.
 def /AngleB 90.  def /armA 25.60728  def /armB 10.0  def NCAngles
 } if end gsave 1.0 SLW 0. setgray 0 setlinecap stroke  grestore  grestore
end
 1177 1635 a 1177 1635 a
 tx@Dict begin tx@NodeDict begin /t 1.5  def LPutCoor end PutBegin
 end
 1177
1635 a 1177 1635 a
 tx@Dict begin { 3.0 4.72495 3.87498 0.0 langle 90 add  Uput exch pop
add a PtoC h1 add exch w1 add exch } PutCoor PutBegin  end
 1177 1635 a 1157 1651 a Fv(c)1177
1635 y
 tx@Dict begin PutEnd  end
 1177 1635 a 1177 1635 a
 tx@Dict begin PutEnd  end
 1177 1635 a 1177 1635
a
 tx@Dict begin gsave STV newpath 1.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 /TheNodea3 /TheNodeaF InitNC
{ tx@Dict begin /r 5.69046 def /Lineto { Arcto } def end /AngleA 90.
 def /AngleB 90.  def /armA 36.98865  def /armB 10.0  def NCAngles
 } if end gsave 1.0 SLW 0. setgray 0 setlinecap stroke  grestore  grestore
end
 1177 1635 a 1177 1635 a
 tx@Dict begin tx@NodeDict begin /t 1.5  def LPutCoor end PutBegin
 end
 1177 1635 a 1177 1635 a
 tx@Dict begin { 3.0 4.72495 3.87498 0.0 langle 90 add  Uput exch pop
add a PtoC h1 add exch w1 add exch } PutCoor PutBegin  end
 1177
1635 a 1157 1651 a Fv(c)1177 1635 y
 tx@Dict begin PutEnd  end
 1177 1635 a 1177
1635 a
 tx@Dict begin PutEnd  end
 1177 1635 a 1177 1635 a
 tx@Dict begin gsave STV newpath 1.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 /TheNodea2 /TheNodeaF InitNC
{ tx@Dict begin /r 5.69046 def /Lineto { Arcto } def end /AngleA 90.
 def /AngleB 90.  def /armA 48.36957  def /armB 10.0  def NCAngles
 } if end gsave 1.0 SLW 0. setgray 0 setlinecap stroke  grestore  grestore
end
 1177 1635 a 1177 1635
a
 tx@Dict begin tx@NodeDict begin /t 1.5  def LPutCoor end PutBegin
 end
 1177 1635 a 1177 1635 a
 tx@Dict begin { 3.0 4.72495 3.87498 0.0 langle 90 add  Uput exch pop
add a PtoC h1 add exch w1 add exch } PutCoor PutBegin  end
 1177 1635 a 1157 1651 a Fv(c)1177
1635 y
 tx@Dict begin PutEnd  end
 1177 1635 a 1177 1635 a
 tx@Dict begin PutEnd  end
 1177 1635 a 1177 1635
a
 tx@Dict begin gsave STV newpath 1.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 /TheNodeaI /TheNodeaF InitNC
{ tx@Dict begin /r 5.69046 def /Lineto { Arcto } def end /AngleA 90.
 def /AngleB 90.  def /armA 59.75093  def /armB 10.0  def NCAngles
 } if end gsave 1.0 SLW 0. setgray 0 setlinecap stroke  grestore  grestore
end
 1177 1635 a 1177 1635 a
 tx@Dict begin tx@NodeDict begin /t 1.5  def LPutCoor end PutBegin
 end
 1177 1635 a 1177 1635 a
 tx@Dict begin { 3.0 4.72495 3.87498 0.0 langle 90 add  Uput exch pop
add a PtoC h1 add exch w1 add exch } PutCoor PutBegin  end
 1177
1635 a 1157 1651 a Fv(c)1177 1635 y
 tx@Dict begin PutEnd  end
 1177 1635 a 1177
1635 a
 tx@Dict begin PutEnd  end
 1177 1635 a 843 1900 a Fm(Fig.)15 b(6.)27 b Fw(A)e(CD)n(A)-9
b(W)n(G)26 b(with)g(the)f(maxim)n(um)d(n)n(um)n(b)r(er)i(of)i(edges,)h
Fl(CD)n(A)-8 b(WG)p Fw(\()p Fv(aaaaac)p Fw(\).)805 2200
y Fy(Figure)25 b(6)37 b(displa)n(ys)g(a)g Fs(CD)n(A)-8
b(WG)37 b Fy(ha)n(ving)g(the)h(maxim)n(um)g(n)n(um)n(b)r(er)f(of)h
(edges)f(for)g(a)681 2300 y(w)n(ord)26 b(of)i(length)f(6.)681
2570 y Fm(3.3)94 b(Implemen)m(tation)29 b(and)j(exp)s(erimen)m(ts)681
2758 y Fy(T)-7 b(ransition)25 b(matrices)g(and)h(adjacency)f(lists)h
(are)f(t)n(w)n(o)g(classical)g(implemen)n(tations)g(of)h(au-)681
2858 y(tomata.)f(The)h(\014rst)g(one)g(giv)n(es)e(a)i(direct)g(access)e
(to)i(transitions,)f(but)i(the)f(memory)f(space)681 2957
y(required)e(is)h Fq(O)r Fy(\()p Fr(S)5 b(tates)p Fy(\()p
Fr(x)p Fy(\))11 b Fq(\002)36 b Fy(card)o(\()p Fr(\006)5
b Fy(\)\).)25 b(The)f(second)g(implemen)n(tation)g(stores)f(only)g(the)
681 3057 y(exact)31 b(n)n(um)n(b)r(er)g(of)g(transitions)f(in)i(memory)
-7 b(,)30 b(but)i(needs)g Fq(O)r Fy(\(log)46 b(card)o(\()p
Fr(\006)5 b Fy(\)\))32 b(time)f(to)h(ac-)681 3157 y(cess)26
b(them)i(with)g(standard)e(searc)n(hing)g(tec)n(hniques.)h(When)g(the)h
(size)f(of)g(the)h(alphab)r(et)f(is)681 3256 y(great)19
b(and)h(the)g(transition)g(matrix)f(is)h(sparse,)f(adjacency)h(lists)g
(are)f(ob)n(viously)g(preferable.)681 3356 y(Otherwise,)33
b(lik)n(e)h(for)f(genomic)h(sequences,)f(transition)g(matrix)h(is)g(a)g
(b)r(etter)g(c)n(hoice,)f(as)681 3456 y(sho)n(wn)28 b(b)n(y)h(the)h
(exp)r(erimen)n(ts)f(b)r(elo)n(w.)g(So,)g(w)n(e)g(only)g(consider)f
(here)h(transition)g(matrices)681 3555 y(to)e(implemen)n(t)h(CD)n(A)-9
b(W)n(Gs.)805 3659 y(W)i(e)31 b(no)n(w)f(describ)r(e)g(the)h(exact)g
(implemen)n(tation)f(of)h(states)f(and)g(edges.)g(W)-7
b(e)31 b(do)f(this)681 3759 y(on)c(a)g(four-letter)g(alphab)r(et,)h(so)
f(c)n(haracters)f(tak)n(e)h(0)p Fr(:)p Fy(25)f(b)n(yte.)i(W)-7
b(e)27 b(use)f(in)n(tegers)g(enco)r(ded)681 3858 y(with)h(4)g(b)n
(ytes.)g(F)-7 b(or)26 b(eac)n(h)h(state,)g(to)g(enco)r(de)g(the)g
(target)f(state)h(of)g(outgoing)f(edges,)h(tran-)681
3958 y(sitions)f(matrices)h(need)g(a)g(v)n(ector)e(of)i(4)g(in)n
(tegers.)f(Adjacency)h(lists)g(need,)g(for)g(eac)n(h)f(edge,)681
4058 y(2)j(in)n(tegers,)g(one)g(for)h(the)g(target)f(state)h(and)f
(another)g(one)h(for)f(the)h(p)r(oin)n(ter)g(to)f(the)i(next)681
4157 y(edge.)805 4261 y(The)37 b(basic)g(information)f(required)g(to)h
(construct)f(the)i(D)n(A)-9 b(W)n(G)37 b(is)g(comp)r(osed)f(of)h(a)681
4361 y(table)27 b(to)h(implemen)n(t)g(the)g(function)g
Fr(s)1905 4373 y Fo(x)1974 4361 y Fy(and)f(one)h(b)r(o)r(olean)e(v)-5
b(alue)28 b(\(0)p Fr(:)p Fy(125)e(b)n(yte\))i(for)f(eac)n(h)681
4461 y(edge)d(to)h(kno)n(w)f(if)i(it)f(is)g(solid)f(or)g(not.)h(F)-7
b(or)25 b(the)g(CD)n(A)-9 b(W)n(G,)25 b(in)h(order)d(to)i(implemen)n(t)
h(m)n(ulti-)681 4560 y(letter)31 b(transitions,)f(w)n(e)h(need)g(one)g
(in)n(teger)f(for)g(the)i Fs(endp)l(os)2619 4572 y Fo(x)2693
4560 y Fy(v)-5 b(alue)31 b(of)g(eac)n(h)f(state,)h(and)681
4660 y(another)26 b(in)n(teger)h(for)g(the)h(lab)r(el)g(length)f(of)h
(eac)n(h)f(edge.)g(And)h(that)g(is)g(all.)805 4764 y(Indeed,)39
b(w)n(e)g(can)f(\014nd)h(the)g(lab)r(el)g(of)f(a)h(transition)f(b)n(y)g
(cutting)h(o\013)g(the)g(length)g(of)681 4863 y(this)26
b(transition)g(from)g(the)h Fs(endp)l(os)1797 4875 y
Fo(x)1866 4863 y Fy(v)-5 b(alue)26 b(of)h(its)f(target)g(state.)g
(Then,)g(w)n(e)g(get)h(b)r(oth)f(the)p eop
%%Page: 9 9
9 8 bop 7 setlinewidth np 1361 562 82 0.00 360.00 arc
st 1340 572 a Fr(p)p 1444 565 914 7 v 2274 562 a Fh(-)1722
485 y Fr(x)1769 497 y Fo(i)1797 485 y Fr(x)1844 497 y
Fo(i)p Fn(+1)1970 485 y Fr(:)14 b(:)g(:)f(x)2127 497
y Fo(j)p 7 setlinewidth np 2440 562 82 0.00 360.00 arc
st 2420 572 a Fr(q)846 840 y Fy(\023)-39 b(etat)27 b
Fr(p)p 789 1568 5 4 v 789 904 V 1117 1568 V 1117 904
V 801 1568 9 4 v 818 1568 V 834 1568 V 851 1568 V 868
1568 V 884 1568 V 901 1568 V 917 1568 V 934 1568 V 951
1568 V 967 1568 V 984 1568 V 1001 1568 V 1017 1568 V
1034 1568 V 1050 1568 V 1067 1568 V 1084 1568 V 1100
1568 V 801 904 V 818 904 V 834 904 V 851 904 V 868 904
V 884 904 V 901 904 V 917 904 V 934 904 V 951 904 V 967
904 V 984 904 V 1001 904 V 1017 904 V 1034 904 V 1050
904 V 1067 904 V 1084 904 V 1100 904 V 787 1566 4 5 v
1119 1566 V 787 906 V 1119 906 V 787 923 4 9 v 787 939
V 787 956 V 787 973 V 787 989 V 787 1006 V 787 1022 V
787 1039 V 787 1056 V 787 1072 V 787 1089 V 787 1106
V 787 1122 V 787 1139 V 787 1155 V 787 1172 V 787 1189
V 787 1205 V 787 1222 V 787 1238 V 787 1255 V 787 1272
V 787 1288 V 787 1305 V 787 1321 V 787 1338 V 787 1355
V 787 1371 V 787 1388 V 787 1404 V 787 1421 V 787 1438
V 787 1454 V 787 1471 V 787 1487 V 787 1504 V 787 1521
V 787 1537 V 787 1554 V 1119 923 V 1119 939 V 1119 956
V 1119 973 V 1119 989 V 1119 1006 V 1119 1022 V 1119
1039 V 1119 1056 V 1119 1072 V 1119 1089 V 1119 1106
V 1119 1122 V 1119 1139 V 1119 1155 V 1119 1172 V 1119
1189 V 1119 1205 V 1119 1222 V 1119 1238 V 1119 1255
V 1119 1272 V 1119 1288 V 1119 1305 V 1119 1321 V 1119
1338 V 1119 1355 V 1119 1371 V 1119 1388 V 1119 1404
V 1119 1421 V 1119 1438 V 1119 1454 V 1119 1471 V 1119
1487 V 1119 1504 V 1119 1521 V 1119 1537 V 1119 1554
V 645 1169 a(a)p 782 1068 346 7 v 782 1234 7 167 v 899
1172 a(`;)14 b(q)p 1121 1234 V 782 1241 346 7 v 1802
840 a Fy(\023)-39 b(etat)27 b Fr(q)p 1744 1569 5 7 v
1744 905 V 2072 1569 V 2072 905 V 1756 1569 9 7 v 1773
1569 V 1789 1569 V 1806 1569 V 1822 1569 V 1839 1569
V 1856 1569 V 1872 1569 V 1889 1569 V 1905 1569 V 1922
1569 V 1939 1569 V 1955 1569 V 1972 1569 V 1988 1569
V 2005 1569 V 2022 1569 V 2038 1569 V 2055 1569 V 1756
905 V 1773 905 V 1789 905 V 1806 905 V 1822 905 V 1839
905 V 1856 905 V 1872 905 V 1889 905 V 1905 905 V 1922
905 V 1939 905 V 1955 905 V 1972 905 V 1988 905 V 2005
905 V 2022 905 V 2038 905 V 2055 905 V 1740 1566 7 5
v 2072 1566 V 1740 906 V 2072 906 V 1740 923 7 9 v 1740
939 V 1740 956 V 1740 973 V 1740 989 V 1740 1006 V 1740
1022 V 1740 1039 V 1740 1056 V 1740 1072 V 1740 1089
V 1740 1106 V 1740 1122 V 1740 1139 V 1740 1155 V 1740
1172 V 1740 1189 V 1740 1205 V 1740 1222 V 1740 1238
V 1740 1255 V 1740 1272 V 1740 1288 V 1740 1305 V 1740
1321 V 1740 1338 V 1740 1355 V 1740 1371 V 1740 1388
V 1740 1404 V 1740 1421 V 1740 1438 V 1740 1454 V 1740
1471 V 1740 1487 V 1740 1504 V 1740 1521 V 1740 1537
V 1740 1554 V 2072 923 V 2072 939 V 2072 956 V 2072 973
V 2072 989 V 2072 1006 V 2072 1022 V 2072 1039 V 2072
1056 V 2072 1072 V 2072 1089 V 2072 1106 V 2072 1122
V 2072 1139 V 2072 1155 V 2072 1172 V 2072 1189 V 2072
1205 V 2072 1222 V 2072 1238 V 2072 1255 V 2072 1272
V 2072 1288 V 2072 1305 V 2072 1321 V 2072 1338 V 2072
1355 V 2072 1371 V 2072 1388 V 2072 1404 V 2072 1421
V 2072 1438 V 2072 1454 V 2072 1471 V 2072 1487 V 2072
1504 V 2072 1521 V 2072 1537 V 2072 1554 V 1414 1338
a Fs(end-p)l(os)p 1737 1234 346 7 v 1737 1400 7 167 v
1890 1337 a Fr(j)p 2076 1400 V 1737 1407 346 7 v 2627
1143 a(a)22 b Fy(=)h Fr(x)2828 1155 y Fo(i)2513 1314
y Fr(`)f Fy(=)h Fr(j)g Fq(\000)18 b Fr(i)g Fy(+)g(1)863
1798 y Fm(Fig.)d(7.)27 b Fw(Implemen)n(tation)c(of)k(states)f(and)g
(arcs)g(in)g(CD)n(A)-9 b(W)n(Gs.)365 2121 y Fy(p)r(osition)26
b(of)g(the)g(lab)r(el)g(in)h(the)f(source)f(and)h(its)g(length.)g
(Figure)e(7)i(illustrates)f(this)h(imple-)365 2221 y(men)n(tation.)21
b(Keeping)f(the)h(source)e(in)i(memory)e(is)i(negligible)f(considering)
f(the)i(global)f(size)365 2321 y(of)32 b(the)g(automaton)f(\(0)p
Fr(:)p Fy(25)g(b)n(yte)h(b)n(y)f(c)n(haracter\).)f(This)i(is)g(quite)g
(a)f(con)n(v)n(enien)n(t)g(solution)365 2420 y(also)c(used)g(for)g
(su\016x)h(trees.)490 2537 y(Then,)38 b(resp)r(ectiv)n(ely)f(for)g
(transitions)g(matrices)g(and)h(adjacency)f(lists,)g(eac)n(h)g(state)
365 2637 y(requires)29 b(20)p Fr(:)p Fy(5)h(and)g(17)p
Fr(:)p Fy(13)f(b)n(ytes)h(for)g(the)h(D)n(A)-9 b(W)n(G,)31
b(and)f(40)p Fr(:)p Fy(5)g(and)g(41)p Fr(:)p Fy(21)f(b)n(ytes)h(for)g
(the)365 2736 y(CD)n(A)-9 b(W)n(G.)32 b(As)g(a)g(reference,)e(su\016x)i
(trees,)f(as)g(implemen)n(ted)i(b)n(y)e(McCreigh)n(t)24
b([18)o(],)32 b(need)365 2836 y(28)p Fr(:)p Fy(25)38
b(and)g(20)p Fr(:)p Fy(25)g(b)n(ytes)g(p)r(er)h(state.)g(Moreo)n(v)n
(er,)e(for)h(CD)n(A)-9 b(W)n(G)40 b(and)e(su\016x)h(trees)g(the)365
2936 y(source)25 b(has)g(to)g(b)r(e)h(stored)f(in)h(main)g(memory)-7
b(.)25 b(Theoretical)f(a)n(v)n(erage)f(n)n(um)n(b)r(ers)i(of)h(states,)
365 3035 y(calculated)i(b)n(y)f(Blumer)g Fs(et)j(al.)f
Fy(\([5]\),)f(are)f(0)p Fr(:)p Fy(54)p Fr(n)f Fy(for)h(CD)n(A)-9
b(W)n(G,)29 b(1)p Fr(:)p Fy(62)p Fr(n)d Fy(for)h(D)n(A)-9
b(W)n(G,)28 b(and)365 3135 y(1)p Fr(;)14 b Fy(62)p Fr(n)31
b Fy(for)h(su\016x)g(trees,)f(when)i Fr(n)f Fy(is)g(the)h(length)f(of)g
Fr(x)p Fy(.)h(This)f(giv)n(es)f(resp)r(ectiv)n(e)g(sizes)h(in)365
3235 y(b)n(ytes)21 b(p)r(er)g(c)n(haracter)e(of)j(the)f(source:)f(45)p
Fr(:)p Fy(68)g(and)h(32)p Fr(:)p Fy(70)e(for)i(su\016x)g(trees,)g(33)p
Fr(:)p Fy(26)e(and)i(27)p Fr(:)p Fy(80)365 3334 y(for)27
b(D)n(A)-9 b(W)n(Gs,)28 b(and)g(22)p Fr(:)p Fy(40)d(and)j(22)p
Fr(:)p Fy(78)e(for)h(CD)n(A)-9 b(W)n(Gs.)490 3451 y(Considering)22
b(the)j(complete)e(data)h(structures)f(required)g(for)g(applications,)g
(the)h(func-)365 3551 y(tion)32 b Fs(endp)l(os)781 3563
y Fo(x)856 3551 y Fy(has)f(to)h(b)r(e)g(added)f(for)h(the)g(D)n(A)-9
b(W)n(G)32 b(and)g(the)g(Su\016x)g(T)-7 b(ree.)31 b(In)h(addition,)365
3650 y(the)f(o)r(ccurrence)f(n)n(um)n(b)r(er)g(of)h(eac)n(h)f(factor)g
(has)g(to)h(b)r(e)g(stored)f(in)h(eac)n(h)f(state)g(for)g(all)h(the)365
3750 y(structures.)i(Therefore,)f(the)i(resp)r(ectiv)n(e)f(sizes)g(in)h
(b)n(ytes)f(p)r(er)h(c)n(haracter)d(of)j(the)f(source)365
3850 y(b)r(ecome)25 b(:)f(58)p Fr(:)p Fy(66)f(and)g(45)p
Fr(:)p Fy(68)g(for)g(su\016x)h(trees,)g(46)p Fr(:)p Fy(24)e(and)i(40)p
Fr(:)p Fy(78)e(for)i(D)n(A)-9 b(W)n(Gs,)24 b(and)g(24)p
Fr(:)p Fy(26)365 3949 y(and)k(24)p Fr(:)p Fy(72)e(for)h(CD)n(A)-9
b(W)n(Gs.)490 4066 y(T)i(able)24 b(1)40 b(compares)e(the)j(sizes)e(of)h
(implemen)n(tations)f(of)h(D)n(A)-9 b(W)n(Gs)40 b(and)g(CD)n(A)-9
b(W)n(Gs)365 4166 y(mean)n(t)33 b(for)f(applications)g(to)h(DNA)g
(sequences.)f(Sizes)h(for)f(random)g(w)n(ords)f(of)i(di\013eren)n(t)365
4266 y(lengths)39 b(on)f(a)g(four-letter)g(alphab)r(et)h(are)e(also)h
(giv)n(en.)f(DNA)j(sequences)e(are)f Fs(Sac)l(cha-)365
4365 y(r)l(omyc)l(es)e(c)l(er)l(evisiae)f Fy(y)n(east)d(c)n(hromosome)f
(I)r(I)i(\(c)n(hro)g(I)r(I\),)h(a)e(con)n(tig)h(of)g
Fs(Escherichia)37 b(Coli)365 4465 y Fy(DNA)31 b(sequence)e(\(coli\),)g
(and)h(con)n(tigs)e(1)h(and)g(115)f(of)i Fs(Bacil)t(lus)j(Subtilis)c
Fy(DNA)i(sequence)365 4565 y(\(bs\).)e(Num)n(b)r(er)g(of)f(states)g
(and)h(edges)f(according)e(to)j(the)f(length)h(of)f(the)h(source)f(and)
g(the)365 4664 y(memory)20 b(space)h(gain)f(are)g(displa)n(y)n(ed.)g
(Theoretical)g(a)n(v)n(erage)e(ratios)i(are)g(giv)n(en,)g(computed)365
4764 y(from)33 b([5].)g(First,)h(w)n(e)e(observ)n(e)g(there)h(are)f(2)p
Fr(=)p Fy(3)g(less)h(states)g(in)h(the)f(CD)n(A)-9 b(W)n(G,)34
b(and)f(near)365 4863 y(of)d(half)f(edges.)g(Second,)g(the)g(memory)g
(space)g(sa)n(ving)e(is)j(ab)r(out)f(50\045.)f(Third,)i(the)f(n)n(um-)p
eop
%%Page: 10 10
10 9 bop 879 391 2459 4 v 877 507 4 117 v 905 472 a Fy(Source)1002
572 y Fr(x)p 1177 507 V 1194 507 V 1361 514 a Fq(j)p
Fr(x)p Fq(j)p 1528 507 V 1545 507 V 1612 431 a Fo(N)6
b(b)27 b(states)p 1612 445 297 4 v 1721 492 a Fp(j)p
Fo(x)p Fp(j)p 1971 507 4 117 v 1988 507 V 2011 431 a
Fo(N)6 b(b)28 b(tr)r(ansitions)p 2011 445 459 4 v 2202
492 a Fp(j)p Fo(x)p Fp(j)p 2490 507 4 117 v 2507 507
V 2530 431 a Fo(N)6 b(b)28 b(tr)r(ansitions)p 2530 445
459 4 v 2611 492 a(N)6 b(b)28 b(states)p 3009 507 4 117
v 3025 507 V 3047 454 a Fy(memory)3106 553 y(gain)p 3335
507 V 1547 510 443 4 v 1990 510 519 4 v 2508 510 V 877
607 4 100 v 1177 607 V 1194 607 V 1528 607 V 1545 607
V 1558 577 a Fw(da)n(wg)p 1740 607 V 24 w(cda)n(wg)p
1970 607 V 1988 607 V 41 w(da)n(wg)p 2183 607 V 62 w(cda)n(wg)p
2490 607 V 2507 607 V 79 w(da)n(wg)p 2702 607 V 62 w(cda)n(wg)p
3009 607 V 3025 607 V 3335 607 V 879 610 2459 4 v 877
709 4 100 v 891 680 a Fy(c)n(hro)e(I)r(I)p 1177 709 V
1194 709 V 134 w(807188)p 1531 709 V 1548 709 V 50 w(1,64)p
1741 709 V 64 w(0,54)p 1971 709 V 1988 709 V 81 w(2,54)p
2184 709 V 102 w(1,44)p 2490 709 V 2507 709 V 118 w(1,55)p
2703 709 V 103 w(2,66)p 3009 709 V 3026 709 V 120 w(50,36\045)p
3335 709 V 879 713 2459 4 v 877 812 4 100 v 891 783 a(coli)p
1177 812 V 1194 812 V 253 w(499951)p 1531 812 V 1548
812 V 50 w(1,64)p 1741 812 V 64 w(0,54)p 1971 812 V 1988
812 V 81 w(2,54)p 2184 812 V 102 w(1,44)p 2490 812 V
2507 812 V 118 w(1,53)p 2703 812 V 103 w(2,66)p 3009
812 V 3026 812 V 120 w(51,95\045)p 3335 812 V 879 816
2459 4 v 877 915 4 100 v 891 885 a(bs)h(1)p 1177 915
V 1194 915 V 230 w(183313)p 1531 915 V 1548 915 V 50
w(1,66)p 1741 915 V 64 w(0,50)p 1971 915 V 1988 915 V
81 w(2,50)p 2184 915 V 102 w(1,34)p 2490 915 V 2507 915
V 118 w(1,50)p 2703 915 V 103 w(2,66)p 3009 915 V 3026
915 V 120 w(54,78\045)p 3335 915 V 879 919 2459 4 v 877
1018 4 100 v 891 988 a(bs)g(115)p 1177 1018 V 1194 1018
V 188 w(49951)p 1531 1018 V 1548 1018 V 50 w(1,64)p 1741
1018 V 64 w(0,54)p 1971 1018 V 1988 1018 V 81 w(2,54)p
2184 1018 V 102 w(1,44)p 2490 1018 V 2507 1018 V 118
w(1,55)p 2703 1018 V 103 w(2,66)p 3009 1018 V 3026 1018
V 120 w(50,16\045)p 3335 1018 V 879 1022 2459 4 v 877
1121 4 100 v 891 1091 a(random)p 1179 1121 V 1196 1121
V 100 w(500000)p 1531 1121 V 1548 1121 V 50 w(1,62)p
1741 1121 V 64 w(0,55)p 1971 1121 V 1988 1121 V 81 w(2,54)p
2184 1121 V 102 w(1,47)p 2490 1121 V 2507 1121 V 118
w(1,57)p 2703 1121 V 103 w(2,68)p 3009 1121 V 3026 1121
V 120 w(49,53\045)p 3335 1121 V 879 1125 2459 4 v 877
1224 4 100 v 891 1194 a(random)p 1179 1224 V 1196 1224
V 100 w(100000)p 1531 1224 V 1548 1224 V 50 w(1,62)p
1741 1224 V 64 w(0,55)p 1971 1224 V 1988 1224 V 81 w(2,55)p
2184 1224 V 102 w(1,47)p 2490 1224 V 2507 1224 V 118
w(1,57)p 2703 1224 V 103 w(2,68)p 3009 1224 V 3026 1224
V 120 w(49,35\045)p 3335 1224 V 879 1228 2459 4 v 877
1327 4 100 v 891 1297 a(random)p 1179 1327 V 1196 1327
V 142 w(50000)p 1531 1327 V 1548 1327 V 50 w(1,62)p 1741
1327 V 64 w(0,54)p 1971 1327 V 1988 1327 V 81 w(2,54)p
2184 1327 V 102 w(1,46)p 2490 1327 V 2507 1327 V 118
w(1,56)p 2703 1327 V 103 w(2,68)p 3009 1327 V 3026 1327
V 120 w(49,68\045)p 3335 1327 V 879 1330 2459 4 v 877
1430 4 100 v 891 1400 a(random)p 1179 1430 V 1196 1430
V 142 w(10000)p 1531 1430 V 1548 1430 V 50 w(1,62)p 1741
1430 V 64 w(0,54)p 1971 1430 V 1988 1430 V 81 w(2,54)p
2184 1430 V 102 w(1,46)p 2490 1430 V 2507 1430 V 118
w(1,56)p 2703 1430 V 103 w(2,68)p 3009 1430 V 3026 1430
V 120 w(49,47\045)p 3335 1430 V 879 1433 2459 4 v 877
1533 4 100 v 891 1503 a(theor.)g(a)n(v)n(er.)e(ratios)p
1546 1533 V 24 w Fm(1,63)p 1742 1533 V 42 w(0,54)p 1971
1533 V 1988 1533 V 59 w(2,54)p 2185 1533 V 80 w(1,46)p
2490 1533 V 2507 1533 V 96 w(1,56)p 2703 1533 V 80 w(2,67)p
3009 1533 V 3026 1533 V 96 w(50,55)p Fy(\045)p 3337 1533
V 879 1536 2459 4 v 1049 1685 a Fm(T)-8 b(able)32 b(1.)27
b Fw(Statistics)g(on)f(the)f(sizes)i(of)f(real)h(D)n(A)-9
b(W)n(Gs)25 b(and)g(CD)n(A)-9 b(W)n(Gs.)681 2057 y Fy(b)r(er)31
b(of)h(edges)f(p)r(er)g(state)h(is)f(going)g(up)h(to)f(2)p
Fr(:)p Fy(66)g(when)h(considering)e(CD)n(A)-9 b(W)n(Gs.)32
b(With)g(a)681 2157 y(four-letter)g(alphab)r(et,)g(this)h(is)g(in)n
(teresting)e(to)i(note)f(b)r(ecause)g(the)h(implemen)n(tation)g(b)n(y)
681 2256 y(transition)25 b(matrix)g(requires)f(less)h(space)f(than)i
(an)f(implemen)n(tation)h(b)n(y)f(adjacency)g(lists.)681
2356 y(A)n(t)j(the)g(same)f(time,)h(this)g(k)n(eeps)f(a)g(direct)g
(access)g(to)g(transitions.)681 2580 y Fm(3.4)94 b(Constructing)32
b(CD)m(A)-11 b(W)m(Gs)33 b(from)d(D)m(A)-11 b(W)m(Gs)681
2721 y Fy(The)29 b(D)n(A)-9 b(W)n(G)29 b(construction)f(is)h(fully)g
(exp)r(osed)g(and)f(demonstrated)g(in)e([3)o(],)j([9])g(and)f([11].)681
2821 y(As)f(w)n(e)h(sho)n(w)e(in)i(this)g(section,)f(the)h(CD)n(A)-9
b(W)n(G)28 b(is)g(easily)f(deriv)n(ed)f(from)i(the)g(D)n(A)-9
b(W)n(G.)805 2921 y(Indeed,)20 b(w)n(e)g(just)g(need)g(to)f(apply)g
(the)i(de\014nition)f(of)f(the)h(CD)n(A)-9 b(W)n(G.)20
b(The)g(computation)681 3020 y(is)f(done)f(b)n(y)h(the)g(function)h
Fs(R)l(e)l(duction)f Fy(b)r(elo)n(w.)f(Observ)n(e)g(that,)h(in)g(this)g
(function,)h Fs(state)p Fy(\()p Fr(p;)14 b(a)p Fy(])681
3120 y(denotes)25 b(the)h(target)e(state)h(of)h(the)f(transition)g(\()p
Fr(p;)14 b(a)p Fy(].)25 b(The)h(computation)f(is)g(done)g(during)681
3220 y(a)j(depth-\014rst)g(tra)n(v)n(ersal)d(of)j(the)h(automaton,)e
(and)i(runs)e(in)i(time)f(linear)g(in)g(the)h(n)n(um)n(b)r(er)681
3319 y(of)g(transitions)f(of)i Fs(D)n(A)-8 b(WG)o Fy(\()p
Fr(x)p Fy(\).)30 b(Then,)g(b)n(y)f(theorem)24 b(2,)29
b(the)h(computation)f(runs)g(in)g(time)681 3419 y(linear)e(in)g(the)h
(length)g(of)g(the)g(text.)805 3518 y(The)i(main)g(dra)n(wbac)n(k)d(of)
j(this)g(construction)e(of)i(CD)n(A)-9 b(W)n(Gs)30 b(is)f(that)h(it)g
(requires)e(the)681 3618 y(previous)c(construction)g(of)h(D)n(A)-9
b(W)n(Gs.)25 b(Therefore,)f(the)i(o)n(v)n(erall)d(construction)h(tak)n
(es)g(time)681 3718 y(and)39 b(memory)g(space)g(prop)r(ortional)f(to)i
Fs(D)n(A)-8 b(WG)o Fy(\()p Fr(x)p Fy(\),)41 b(though)e
Fs(CD)n(A)-8 b(WG)p Fy(\()p Fr(x)p Fy(\))41 b(is)e(signi\014-)681
3817 y(can)n(tly)27 b(smaller.)g(So,)g(it)h(is)f(b)r(etter)h(to)g
(construct)f(the)h(CD)n(A)-9 b(W)n(G)28 b(directly)-7
b(.)p 883 3897 2477 4 v 883 4860 4 964 v 937 3986 a Fu(Reduction)28
b Fw(\(state)e Fg(E)t Fw(\))f(returns)g(\(ending)g(state,)i(length)f
(of)g(redirected)g(edge\))937 4077 y(1.)88 b Fu(If)26
b Fw(\()p Fg(E)k Fw(not)25 b(mark)n(ed\))f Fu(Then)937
4169 y Fw(2.)236 b Fu(F)-7 b(or)29 b(all)e Fw(existing)f(edge)g(\()p
Fg(E)t(;)13 b(a)p Fw(])25 b Fu(Do)937 4260 y Fw(3.)383
b(\()p Fl(state)r Fw(\()p Fg(E)t(;)12 b(a)p Fw(])26 b(,)g
Ff(j)p Fl(lab)l(el)p Fw(\(\()p Fg(E)t(;)13 b(a)p Fw(]\))p
Ff(j)p Fw(\))26 b Ff( )f Fw(Reduction\(\020tastate\()p
Fg(E)t(;)13 b(a)p Fw(]\);)937 4351 y(4.)236 b(mark\()p
Fg(E)t Fw(\))24 b Ff( )h Fw(TR)n(UE;)937 4442 y(5.)88
b Fu(If)26 b Fw(\()p Fg(E)k Fw(is)c(of)g(outdegree)g(one\))g
Fu(Then)937 4534 y Fw(6.)236 b(Let)25 b(\()p Fg(E)t(;)13
b(a)p Fw(])26 b(this)f(edge)14 b(;)937 4625 y(7.)236
b Fu(Return)26 b Fw(\()p Fl(state)r Fw(\()p Fg(E)t(;)13
b(a)p Fw(])25 b(,)h(1)18 b(+)e Ff(j)p Fl(lab)l(el)q Fw(\(\()p
Fg(E)t(;)c(a)p Fw(]\))p Ff(j)p Fw(\);)937 4716 y(8.)88
b Fu(Else)937 4808 y Fw(9.)236 b Fu(Return)26 b Fw(\()p
Fg(E)t Fw(,1\);)p 3357 4860 V 883 4863 2477 4 v eop
%%Page: 11 11
11 10 bop 365 387 a Ft(4)112 b(Direct)36 b(Construction)g(of)i(CD)m(A)
-12 b(W)m(G)365 601 y Fy(In)30 b(this)h(section,)e(w)n(e)h(giv)n(e)e
(the)j(direct)e(construction)g(of)h(CD)n(A)-9 b(W)n(Gs.)30
b(The)g(running)g(time)365 701 y(of)23 b(the)g(algorithm)f(is)h(linear)
f(in)h(the)h(size)e(of)h(the)g(input)h(w)n(ord)e Fr(x)h
Fy(on)g(a)f(\014xed)h(alphab)r(et.)g(The)365 800 y(memory)j(space)g(is)
g(prop)r(ortional)f(to)h(the)h(size)f(of)h(the)g(automaton,)e(and)i
(consequen)n(tly)e(is)365 900 y(also)i(linear)g(b)n(y)g(Lemmas)d(7)j
(and)h(8.)365 1163 y Fm(4.1)95 b(Algorithm)365 1344 y
Fy(Since)25 b(the)f(CD)n(A)-9 b(W)n(G)25 b(of)f Fr(x)h
Fy(is)f(a)g(minimization)h(of)f(its)g(su\016x)h(tree,)f(it)g(is)h
(rather)e(natural)g(to)365 1444 y(base)k(the)i(direct)e(construction)g
(on)h(McCreigh)n(t's)e(algorithm)e([18)o(].)k(Mean)n(while,)g(prop)r
(er-)365 1543 y(ties)h(of)f(the)h(D)n(A)-9 b(W)n(G)29
b(construction)f(are)f(also)g(used,)i(esp)r(ecially)f(the)h(su\016x)f
(link)h(function)365 1643 y(\(notion)e(that)g(is)g(di\013eren)n(t)g
(from)f(the)h(su\016x)g(links)g(of)g(McCreigh)n(t's)e(algorithm\),)h
(lengths)365 1742 y(of)i(longest)f(paths,)g(and)h(p)r(ositions,)f(as)g
(explained)g(in)h(the)g(previous)e(section.)490 1845
y(First,)38 b(w)n(e)g(in)n(tro)r(duce)h(the)g(notions)f(used)g(b)n(y)g
(the)h(algorithm,)f(some)g(of)g(them)h(are)365 1945 y(tak)n(en)28
b(from)c([18)o(].)k(The)g(algorithm)f(constructs)g(the)i(CD)n(A)-9
b(W)n(G)28 b(of)g(the)g(w)n(ord)f Fr(x)h Fy(of)g(length)365
2044 y Fr(n)p Fy(,)34 b(noted)h Fs(x)748 2056 y Fn(0)p
Fo(::n)p Fp(\000)p Fn(1)951 2044 y Fy(.)f(The)g(automaton)g(is)g
(de\014ned)g(b)n(y)g(a)g(set)g(of)g(states)g(and)g(transitions,)365
2144 y(where)24 b(I)h(and)g(F)f(denotes)h(the)g(initial)g(and)f(the)h
(\014nal)g(states)f(resp)r(ectiv)n(ely)-7 b(.)24 b(A)h
Fs(p)l(artial)31 b(p)l(ath)365 2243 y Fy(represen)n(ts)c(a)h(connected)
g(sequence)g(of)g(edges)g(b)r(et)n(w)n(een)g(t)n(w)n(o)f(states)h(of)g
(the)h(automaton.)365 2343 y(A)24 b Fs(p)l(ath)f Fy(is)g(a)g(partial)f
(path)i(that)f(b)r(egins)g(at)g(I.)g(The)g(lab)r(el)g(of)g(a)g(path)g
(is)g(the)g(concatenation)365 2443 y(of)28 b(the)g(lab)r(els)f(of)h
(corresp)r(onding)d(edges.)490 2545 y(The)33 b Fs(lo)l(cus)p
Fy(,)h(or)f Fs(exact)c(lo)l(cus)p Fy(,)34 b(of)f(a)h(string)e(is)i(the)
g(end)f(of)h(the)g(path)f(lab)r(eled)h(b)n(y)f(the)365
2645 y(string.)d(The)g Fs(c)l(ontr)l(acte)l(d)f(lo)l(cus)h
Fy(of)g(a)g(string)f Fr(\013)h Fy(is)g(the)g(lo)r(cus)g(of)g(the)g
(longest)f(pre\014x)h(of)g Fr(\013)365 2745 y Fy(whose)d(lo)r(cus)h(is)
f(de\014ned.)h(-)365 3008 y Fm(Preliminary)k(Algorithm)41
b Fy(Basically)-7 b(,)28 b(the)h(algorithm)f(that)h(builds)g
Fs(CD)n(A)-8 b(WG)p Fy(\()p Fr(x)p Fy(\))29 b(in-)365
3108 y(serts)i(in)n(to)h(the)g(curren)n(t)e(automaton)h(the)h(paths)g
(corresp)r(onding)d(to)j(all)f(the)h(su\016xes)f(of)365
3207 y Fr(x)p Fy(,)f(from)f(the)h(longest)f(to)g(the)h(shortest)f
(su\016x.)g(W)-7 b(e)30 b(de\014ne)g Fs(suf)2392 3228
y Fo(i)2449 3207 y Fy(as)f(the)h(su\016x)f Fs(x)2958
3219 y Fo(i::n)p Fp(\000)p Fn(1)3180 3207 y Fy(of)365
3307 y Fr(x)p Fy(.)c(W)-7 b(e)25 b(denote)f(b)n(y)g Fq(A)1042
3319 y Fo(i)1094 3307 y Fy(the)h(automaton)e(constructed)h(after)f(the)
i(insertion)f(of)g(all)g(the)g Fs(suf)3212 3327 y Fo(j)365
3407 y Fy(for)j(0)c Fq(\024)g Fr(j)28 b Fq(\024)22 b
Fr(i)p Fy(.)490 3509 y(Figure)i(8)33 b(displa)n(ys)f(six)h(steps)g
(during)g(the)h(construction)e(of)i Fs(CD)n(A)-8 b(WG)o
Fy(\()p Fk(aabbabbc)p Fy(\).)365 3609 y(In)31 b(this)g(\014gure)e
(\(and)i(the)g(follo)n(wing\),)f(the)g(dashed)h(edges)e(represen)n(t)h
(su\016x)g(links,)g(links)365 3708 y(that)e(are)f(de\014ned)h(on)f
(states)g(and)h(that)g(are)e(used)i(in)g(the)g(next)f(section.)490
3811 y(A)n(t)h(the)h(b)r(eginning)f(of)g(the)h(algorithm)e(the)i
(automaton)e(is)h(initialized)h(with)f(the)h(t)n(w)n(o)365
3910 y(states)23 b(I)h(and)g(F)f(only)-7 b(.)24 b(A)n(t)g(step)f
Fr(i)h Fy(\()p Fr(i)f(>)f Fy(0\),)i(the)g(algorithm)e(inserts)h(a)g
(path)h(corresp)r(onding)365 4010 y(to)j Fs(suf)570 4030
y Fo(i)625 4010 y Fy(in)n(to)g Fq(A)859 4022 y Fo(i)p
Fp(\000)p Fn(1)999 4010 y Fy(and)g(pro)r(duces)g Fq(A)1575
4022 y Fo(i)1603 4010 y Fy(.)g(The)g(main)g(lo)r(op)g(of)g(the)h
(algorithm)e(satis\014es)g(the)365 4110 y(follo)n(wing)h(in)n(v)-5
b(arian)n(t)26 b(prop)r(erties:)329 4287 y Fm(P1)p Fy(:)41
b(at)28 b(the)g(b)r(eginning)f(of)h(step)g Fr(i)p Fy(,)f(all)g
(su\016xes)h Fs(suf)1989 4308 y Fo(j)2024 4287 y Fy(,)g(0)23
b Fq(\024)f Fr(j)28 b(<)23 b(i)p Fy(,)k(are)g(paths)g(in)h
Fq(A)2985 4299 y Fo(i)p Fp(\000)p Fn(1)3097 4287 y Fy(.)329
4390 y Fm(P2)p Fy(:)41 b(at)20 b(the)f(b)r(eginning)h(of)f(step)g
Fr(i)p Fy(,)g(the)h(states)f(of)g Fq(A)1947 4402 y Fo(i)p
Fp(\000)p Fn(1)2079 4390 y Fy(are)f(in)h(one-to-one)f(corresp)r
(ondence)506 4489 y(with)29 b(the)f(longest)e(common)h(pre\014xes)g(of)
h(pairs)e(of)i(su\016xes)f(longer)f(than)i Fs(suf)2984
4510 y Fo(j)3019 4489 y Fy(.)490 4664 y(W)-7 b(e)27 b(de\014ne)h
Fs(he)l(ad)1033 4676 y Fo(i)1088 4664 y Fy(as)f(the)g(longest)g
(pre\014x)f(of)i Fs(suf)2045 4684 y Fo(i)2099 4664 y
Fy(whic)n(h)g(is)f(also)f(a)h(pre\014x)f(of)i Fs(suf)3086
4684 y Fo(j)3148 4664 y Fy(for)365 4764 y(some)i Fr(j)h(<)c(i)p
Fy(.)i(Equiv)-5 b(alen)n(tly)e(,)29 b Fs(he)l(ad)1475
4776 y Fo(i)1532 4764 y Fy(is)h(the)g(longest)f(pre\014x)h(of)f
Fs(suf)2483 4784 y Fo(i)2541 4764 y Fy(that)h(is)g(also)e(lab)r(el)i
(of)365 4863 y(a)d(path)h(in)g Fq(A)791 4875 y Fo(i)p
Fp(\000)p Fn(1)904 4863 y Fy(.)g(W)-7 b(e)28 b(de\014ne)g
Fs(tail)1454 4875 y Fo(i)1510 4863 y Fy(as)e Fs(he)l(ad)1773
4826 y Fp(\000)p Fn(1)1773 4885 y Fo(i)1862 4863 y Fs(suf)1966
4884 y Fo(i)1993 4863 y Fy(.)p eop
%%Page: 12 12
12 11 bop 634 811 a
 tx@Dict begin tx@NodeDict begin {  } /TheNodei 16 { .5 10.39525 3.8
false .5 11.04514 InitRnode  } NewNode end end
 634 811 a 31 w @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  0. true 3.8 neg 3.8
neg 7.24513 10.39525 .5 Frame  gsave 0.8 SLW 0. setgray 0 setlinecap
stroke  grestore end


@endspecial Fr(i)2145 811 y
 tx@Dict begin tx@NodeDict begin {  } /TheNodeii 16 { .5 10.39525 3.8
false .5 14.49026 InitRnode  } NewNode end end
 2145 811 a 32 w @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  0. true 3.8 neg 3.8
neg 10.69026 10.39525 .5 Frame  gsave 0.8 SLW 0. setgray 0 setlinecap
stroke  grestore end
 
@endspecial Fr(ii)634 1354 y
 tx@Dict begin tx@NodeDict begin {  } /TheNodeiii 16 { .5 10.39525
3.8 false .5 17.9354 InitRnode  } NewNode end end
 634 1354 a
31 w @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  0. true 3.8 neg 3.8
neg 14.13539 10.39525 .5 Frame  gsave 0.8 SLW 0. setgray 0 setlinecap
stroke  grestore end
 
@endspecial Fr(iii)2145
1354 y
 tx@Dict begin tx@NodeDict begin {  } /TheNodeiv 16 { .5 10.39525 3.8
false .5 16.25114 InitRnode  } NewNode end end
 2145 1354 a 32 w @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  0. true 3.8 neg 3.8
neg 12.45114 10.39525 .5 Frame  gsave 0.8 SLW 0. setgray 0 setlinecap
stroke  grestore end
 
@endspecial
Fr(iv)634 2162 y
 tx@Dict begin tx@NodeDict begin {  } /TheNodev 16 { .5 8.10555 3.8
false .5 12.80602 InitRnode  } NewNode end end
 634 2162 a 31 w @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  0. true 3.8 neg 3.8
neg 9.00601 8.10555 .5 Frame  gsave 0.8 SLW 0. setgray 0 setlinecap
stroke  grestore end


@endspecial Fr(v)2145 2181 y
 tx@Dict begin tx@NodeDict begin {  } /TheNodevi 16 { .5 10.39525 3.8
false .5 16.25114 InitRnode  } NewNode end end
 2145 2181 a 32 w @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  0. true 3.8 neg 3.8
neg 12.45114 10.39525 .5 Frame  gsave 0.8 SLW 0. setgray 0 setlinecap
stroke  grestore end
 
@endspecial Fr(v)s(i)787 981 y
 tx@Dict begin tx@NodeDict begin { 2.88892 2 div 4.78334 0.0 add 2
div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add 2.6 add } /TheNodeaI1 11 {
InitCnode  } NewNode end end
 787 981 a
@beginspecial @setspecial
 tx@Dict begin STP newpath 2.6 SLW 0. setgray  2.88892 2 div 4.78334
0.0 add 2 div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add CLW 2 div add 0
360 arc closepath gsave 2.6 SLW 0. setgray 0 setlinecap stroke  grestore
gsave 1.0 SLW 1. setgray stroke grestore end
 
@endspecial Fn(I)1959 981
y
 tx@Dict begin tx@NodeDict begin { 5.15974 2 div 4.78334 0.0 add 2
div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add 2.6 add } /TheNodeaF1 11 {
InitCnode  } NewNode end end
 1959 981 a @beginspecial @setspecial
 tx@Dict begin STP newpath 2.6 SLW 0. setgray  5.15974 2 div 4.78334
0.0 add 2 div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add CLW 2 div add 0
360 arc closepath gsave 2.6 SLW 0. setgray 0 setlinecap stroke  grestore
gsave 1.0 SLW 1. setgray stroke grestore end
 
@endspecial Fn(F)2322
981 y
 tx@Dict begin tx@NodeDict begin { 2.88892 2 div 4.78334 0.0 add 2
div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add 2.6 add } /TheNodeaI2 11 {
InitCnode  } NewNode end end
 2322 981 a @beginspecial @setspecial
 tx@Dict begin STP newpath 2.6 SLW 0. setgray  2.88892 2 div 4.78334
0.0 add 2 div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add CLW 2 div add 0
360 arc closepath gsave 2.6 SLW 0. setgray 0 setlinecap stroke  grestore
gsave 1.0 SLW 1. setgray stroke grestore end
 
@endspecial
Fn(I)2672 980 y
 tx@Dict begin tx@NodeDict begin { 3.98613 2 div 4.51111 0.0 add 2
div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add 0.8 add } /TheNodea12 11 {
InitCnode  } NewNode end end
 2672 980 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  3.98613 2 div 4.51111
0.0 add 2 div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add CLW 2 div add 0
360 arc closepath gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore
end


@endspecial Fn(1)3494 981 y
 tx@Dict begin tx@NodeDict begin { 5.15974 2 div 4.78334 0.0 add 2
div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add 2.6 add } /TheNodeaF2 11 {
InitCnode  } NewNode end end
 3494 981 a @beginspecial
@setspecial
 tx@Dict begin STP newpath 2.6 SLW 0. setgray  5.15974 2 div 4.78334
0.0 add 2 div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add CLW 2 div add 0
360 arc closepath gsave 2.6 SLW 0. setgray 0 setlinecap stroke  grestore
gsave 1.0 SLW 1. setgray stroke grestore end
 
@endspecial Fn(F)787 1642 y
 tx@Dict begin tx@NodeDict begin { 2.88892 2 div 4.78334 0.0 add 2
div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add 2.6 add } /TheNodeaI3 11 {
InitCnode  } NewNode end end
 787 1642 a @beginspecial
@setspecial
 tx@Dict begin STP newpath 2.6 SLW 0. setgray  2.88892 2 div 4.78334
0.0 add 2 div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add CLW 2 div add 0
360 arc closepath gsave 2.6 SLW 0. setgray 0 setlinecap stroke  grestore
gsave 1.0 SLW 1. setgray stroke grestore end
 
@endspecial Fn(I)1137 1405 y
 tx@Dict begin tx@NodeDict begin { 3.98613 2 div 4.51111 0.0 add 2
div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add 0.8 add } /TheNodea13 11 {
InitCnode  } NewNode end end
 1137 1405 a
@beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  3.98613 2 div 4.51111
0.0 add 2 div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add CLW 2 div add 0
360 arc closepath gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore
end
 
@endspecial Fn(1)1137 1877
y
 tx@Dict begin tx@NodeDict begin { 3.98613 2 div 4.51111 0.0 add 2
div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add 0.8 add } /TheNodea23 11 {
InitCnode  } NewNode end end
 1137 1877 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  3.98613 2 div 4.51111
0.0 add 2 div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add CLW 2 div add 0
360 arc closepath gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore
end
 
@endspecial
Fn(2)1959 1642 y
 tx@Dict begin tx@NodeDict begin { 5.15974 2 div 4.78334 0.0 add 2
div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add 2.6 add } /TheNodeaF3 11 {
InitCnode  } NewNode end end
 1959 1642 a @beginspecial @setspecial
 tx@Dict begin STP newpath 2.6 SLW 0. setgray  5.15974 2 div 4.78334
0.0 add 2 div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add CLW 2 div add 0
360 arc closepath gsave 2.6 SLW 0. setgray 0 setlinecap stroke  grestore
gsave 1.0 SLW 1. setgray stroke grestore end


@endspecial Fn(F)2322 1642 y
 tx@Dict begin tx@NodeDict begin { 2.88892 2 div 4.78334 0.0 add 2
div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add 2.6 add } /TheNodeaI4 11 {
InitCnode  } NewNode end end
 2322 1642 a @beginspecial
@setspecial
 tx@Dict begin STP newpath 2.6 SLW 0. setgray  2.88892 2 div 4.78334
0.0 add 2 div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add CLW 2 div add 0
360 arc closepath gsave 2.6 SLW 0. setgray 0 setlinecap stroke  grestore
gsave 1.0 SLW 1. setgray stroke grestore end
 
@endspecial Fn(I)2648 1405 y
 tx@Dict begin tx@NodeDict begin { 3.98613 2 div 4.51111 0.0 add 2
div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add 0.8 add } /TheNodea14 11 {
InitCnode  } NewNode end end
 2648 1405 a
@beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  3.98613 2 div 4.51111
0.0 add 2 div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add CLW 2 div add 0
360 arc closepath gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore
end
 
@endspecial Fn(1)2648 1877
y
 tx@Dict begin tx@NodeDict begin { 3.98613 2 div 4.51111 0.0 add 2
div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add 0.8 add } /TheNodea24 11 {
InitCnode  } NewNode end end
 2648 1877 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  3.98613 2 div 4.51111
0.0 add 2 div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add CLW 2 div add 0
360 arc closepath gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore
end
 
@endspecial
Fn(2)3026 1641 y
 tx@Dict begin tx@NodeDict begin { 3.98613 2 div 4.51111 0.0 add 2
div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add 0.8 add } /TheNodea34 11 {
InitCnode  } NewNode end end
 3026 1641 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  3.98613 2 div 4.51111
0.0 add 2 div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add CLW 2 div add 0
360 arc closepath gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore
end


@endspecial Fn(3)3494 1642 y
 tx@Dict begin tx@NodeDict begin { 5.15974 2 div 4.78334 0.0 add 2
div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add 2.6 add } /TheNodeaF4 11 {
InitCnode  } NewNode end end
 3494 1642 a @beginspecial
@setspecial
 tx@Dict begin STP newpath 2.6 SLW 0. setgray  5.15974 2 div 4.78334
0.0 add 2 div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add CLW 2 div add 0
360 arc closepath gsave 2.6 SLW 0. setgray 0 setlinecap stroke  grestore
gsave 1.0 SLW 1. setgray stroke grestore end
 
@endspecial Fn(F)787 2469 y
 tx@Dict begin tx@NodeDict begin { 2.88892 2 div 4.78334 0.0 add 2
div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add 2.6 add } /TheNodeaI5 11 {
InitCnode  } NewNode end end
 787 2469 a @beginspecial
@setspecial
 tx@Dict begin STP newpath 2.6 SLW 0. setgray  2.88892 2 div 4.78334
0.0 add 2 div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add CLW 2 div add 0
360 arc closepath gsave 2.6 SLW 0. setgray 0 setlinecap stroke  grestore
gsave 1.0 SLW 1. setgray stroke grestore end
 
@endspecial Fn(I)1113 2232 y
 tx@Dict begin tx@NodeDict begin { 3.98613 2 div 4.51111 0.0 add 2
div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add 0.8 add } /TheNodea15 11 {
InitCnode  } NewNode end end
 1113 2232 a
@beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  3.98613 2 div 4.51111
0.0 add 2 div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add CLW 2 div add 0
360 arc closepath gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore
end
 
@endspecial Fn(1)1113 2704
y
 tx@Dict begin tx@NodeDict begin { 3.98613 2 div 4.51111 0.0 add 2
div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add 0.8 add } /TheNodea25 11 {
InitCnode  } NewNode end end
 1113 2704 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  3.98613 2 div 4.51111
0.0 add 2 div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add CLW 2 div add 0
360 arc closepath gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore
end
 
@endspecial
Fn(2)1467 2468 y
 tx@Dict begin tx@NodeDict begin { 3.98613 2 div 4.51111 0.0 add 2
div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add 0.8 add } /TheNodea35 11 {
InitCnode  } NewNode end end
 1467 2468 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  3.98613 2 div 4.51111
0.0 add 2 div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add CLW 2 div add 0
360 arc closepath gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore
end


@endspecial Fn(3)1959 2469 y
 tx@Dict begin tx@NodeDict begin { 5.15974 2 div 4.78334 0.0 add 2
div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add 2.6 add } /TheNodeaF5 11 {
InitCnode  } NewNode end end
 1959 2469 a @beginspecial
@setspecial
 tx@Dict begin STP newpath 2.6 SLW 0. setgray  5.15974 2 div 4.78334
0.0 add 2 div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add CLW 2 div add 0
360 arc closepath gsave 2.6 SLW 0. setgray 0 setlinecap stroke  grestore
gsave 1.0 SLW 1. setgray stroke grestore end
 
@endspecial Fn(F)2322 2469 y
 tx@Dict begin tx@NodeDict begin { 2.88892 2 div 4.78334 0.0 add 2
div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add 2.6 add } /TheNodeaI6 11 {
InitCnode  } NewNode end end
 2322 2469 a
@beginspecial @setspecial
 tx@Dict begin STP newpath 2.6 SLW 0. setgray  2.88892 2 div 4.78334
0.0 add 2 div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add CLW 2 div add 0
360 arc closepath gsave 2.6 SLW 0. setgray 0 setlinecap stroke  grestore
gsave 1.0 SLW 1. setgray stroke grestore end
 
@endspecial Fn(I)2648 2232
y
 tx@Dict begin tx@NodeDict begin { 3.98613 2 div 4.51111 0.0 add 2
div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add 0.8 add } /TheNodea16 11 {
InitCnode  } NewNode end end
 2648 2232 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  3.98613 2 div 4.51111
0.0 add 2 div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add CLW 2 div add 0
360 arc closepath gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore
end
 
@endspecial
Fn(1)2648 2704 y
 tx@Dict begin tx@NodeDict begin { 3.98613 2 div 4.51111 0.0 add 2
div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add 0.8 add } /TheNodea26 11 {
InitCnode  } NewNode end end
 2648 2704 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  3.98613 2 div 4.51111
0.0 add 2 div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add CLW 2 div add 0
360 arc closepath gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore
end


@endspecial Fn(2)3026 2468 y
 tx@Dict begin tx@NodeDict begin { 3.98613 2 div 4.51111 0.0 add 2
div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add 0.8 add } /TheNodea36 11 {
InitCnode  } NewNode end end
 3026 2468 a @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  3.98613 2 div 4.51111
0.0 add 2 div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add CLW 2 div add 0
360 arc closepath gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore
end
 
@endspecial Fn(3)3494 2469 y
 tx@Dict begin tx@NodeDict begin { 5.15974 2 div 4.78334 0.0 add 2
div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add 2.6 add } /TheNodeaF6 11 {
InitCnode  } NewNode end end
 3494 2469 a
@beginspecial @setspecial
 tx@Dict begin STP newpath 2.6 SLW 0. setgray  5.15974 2 div 4.78334
0.0 add 2 div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add CLW 2 div add 0
360 arc closepath gsave 2.6 SLW 0. setgray 0 setlinecap stroke  grestore
gsave 1.0 SLW 1. setgray stroke grestore end
 
@endspecial Fn(F)681 2685
y
 tx@Dict begin gsave STV newpath 1.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 /TheNodeaI1 /TheNodeaF1 InitNC
{ NCLine  } if end gsave 1.0 SLW 0. setgray 0 setlinecap stroke  grestore
 grestore end
 681 2685 a 681 2685 a
 tx@Dict begin tx@NodeDict begin /t 0.5  def LPutCoor end PutBegin
 end
 681 2685 a 681 2685 a
 tx@Dict begin langle Rot  end
 681 2685
a 681 2685 a
 tx@Dict begin { 1.0 37.79956 5.49998 0.0 langle 90 add  langle  sub
Uput exch pop add a PtoC h1 add exch w1 add exch } PutCoor PutBegin
 end
 681 2685 a 524 2708 a Fv(aabbabbc)681 2685
y
 tx@Dict begin PutEnd  end
 681 2685 a 681 2685 a
 tx@Dict begin langle neg Rot  end
 681 2685 a 681 2685 a
 tx@Dict begin PutEnd  end
 681 2685
a 681 2685 a
 tx@Dict begin gsave STV newpath 1.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 /TheNodeaF1 /TheNodeaI1 InitNC
{ GetAngle dup 10.  add /AngleA ED 10.  sub 180 add /AngleB ED 0.67
 0.67  NCCurve  } if end gsave 1.0 SLW 0. setgray 1.0 3.0 -2 0 add
DashLine  grestore  grestore end
 681 2685 a 681 2685 a
 tx@Dict begin gsave STV newpath 1.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 /TheNodeaI2 /TheNodea12 InitNC
{ NCLine  } if end gsave 1.0 SLW 0. setgray 0 setlinecap stroke  grestore
 grestore end
 681 2685 a 681 2685
a
 tx@Dict begin tx@NodeDict begin /t 0.5  def LPutCoor end PutBegin
 end
 681 2685 a 681 2685 a
 tx@Dict begin langle Rot  end
 681 2685 a 681 2685 a
 tx@Dict begin { 1.0 4.72495 3.87498 0.0 langle 90 add  langle  sub
Uput exch pop add a PtoC h1 add exch w1 add exch } PutCoor PutBegin
 end
 681 2685
a 661 2701 a Fv(a)681 2685 y
 tx@Dict begin PutEnd  end
 681 2685 a 681 2685 a
 tx@Dict begin langle neg Rot  end
 681
2685 a 681 2685 a
 tx@Dict begin PutEnd  end
 681 2685 a 681 2685 a
 tx@Dict begin gsave STV newpath 1.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 /TheNodea12 /TheNodeaF2 InitNC
{ GetAngle dup 10.  add /AngleA ED 10.  sub 180 add /AngleB ED 0.67
 0.67  NCCurve  } if end gsave 1.0 SLW 0. setgray 0 setlinecap stroke
 grestore  grestore end
 681 2685 a 681
2685 a
 tx@Dict begin tx@NodeDict begin /t 0.5  def LPutCoor end PutBegin
 end
 681 2685 a 681 2685 a
 tx@Dict begin langle Rot  end
 681 2685 a 681 2685 a
 tx@Dict begin { 1.0 33.07462 5.49998 0.0 langle 90 add  langle  sub
Uput exch pop add a PtoC h1 add exch w1 add exch } PutCoor PutBegin
 end
 681
2685 a 543 2708 a Fv(abbabbc)681 2685 y
 tx@Dict begin PutEnd  end
 681 2685 a 681
2685 a
 tx@Dict begin langle neg Rot  end
 681 2685 a 681 2685 a
 tx@Dict begin PutEnd  end
 681 2685 a 681 2685 a
 tx@Dict begin gsave STV newpath 1.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 /TheNodea12 /TheNodeaF2 InitNC
{ GetAngle dup -10.  add /AngleA ED -10.  sub 180 add /AngleB ED 0.67
 0.67  NCCurve  } if end gsave 1.0 SLW 0. setgray 0 setlinecap stroke
 grestore  grestore end
 681
2685 a 681 2685 a
 tx@Dict begin tx@NodeDict begin /t 0.5  def LPutCoor end PutBegin
 end
 681 2685 a 681 2685 a
 tx@Dict begin langle Rot  end
 681 2685 a 681
2685 a
 tx@Dict begin { 1.0 28.34967 5.49998 0.0 langle 90 sub  langle  sub
Uput exch pop add a PtoC h1 add exch w1 add exch } PutCoor PutBegin
 end
 681 2685 a 563 2708 a Fv(bbabbc)681 2685 y
 tx@Dict begin PutEnd  end
 681
2685 a 681 2685 a
 tx@Dict begin langle neg Rot  end
 681 2685 a 681 2685 a
 tx@Dict begin PutEnd  end
 681 2685 a 681
2685 a
 tx@Dict begin gsave STV newpath 1.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 /TheNodeaI2 /TheNodeaF2 InitNC
{ tx@Dict begin /r 2.84544 def /Lineto { Arcto } def end /AngleA -90.
 def /AngleB -90.  def /armA 17.07181  def /armB 10.0  def NCAngles
 } if end gsave 1.0 SLW 0. setgray 0 setlinecap stroke  grestore  grestore
end
 681 2685 a 681 2685 a
 tx@Dict begin tx@NodeDict begin /t 1.5  def LPutCoor end PutBegin
 end
 681 2685 a 681 2685 a
 tx@Dict begin { 1.0 28.34967 5.49998 0.0 langle 90 add  Uput exch
pop add a PtoC h1 add exch w1 add exch } PutCoor PutBegin  end
 681
2685 a 563 2708 a Fv(bbabbc)681 2685 y
 tx@Dict begin PutEnd  end
 681 2685 a 681
2685 a
 tx@Dict begin PutEnd  end
 681 2685 a 681 2685 a
 tx@Dict begin gsave STV newpath 1.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 /TheNodea12 /TheNodeaI2 InitNC
{ GetAngle dup 30.  add /AngleA ED 30.  sub 180 add /AngleB ED 0.67
 0.67  NCCurve  } if end gsave 1.0 SLW 0. setgray 1.0 3.0 -2 0 add
DashLine  grestore  grestore end
 681 2685 a 681 2685 a
 tx@Dict begin gsave STV newpath 1.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 /TheNodeaF2 /TheNodeaI2 InitNC
{ GetAngle dup -40.  add /AngleA ED -40.  sub 180 add /AngleB ED 0.67
 0.67  NCCurve  } if end gsave 1.0 SLW 0. setgray 1.0 3.0 -2 0 add
DashLine  grestore  grestore end
 681
2685 a 681 2685 a
 tx@Dict begin gsave STV newpath 1.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 /TheNodeaI3 /TheNodea13 InitNC
{ NCLine  } if end gsave 1.0 SLW 0. setgray 0 setlinecap stroke  grestore
 grestore end
 681 2685 a 681 2685 a
 tx@Dict begin tx@NodeDict begin /t 0.5  def LPutCoor end PutBegin
 end
 681 2685 a 681
2685 a
 tx@Dict begin langle Rot  end
 681 2685 a 681 2685 a
 tx@Dict begin { 1.0 4.72495 3.87498 0.0 langle 90 add  langle  sub
Uput exch pop add a PtoC h1 add exch w1 add exch } PutCoor PutBegin
 end
 681 2685 a 661 2701 a Fv(a)681
2685 y
 tx@Dict begin PutEnd  end
 681 2685 a 681 2685 a
 tx@Dict begin langle neg Rot  end
 681 2685 a 681 2685 a
 tx@Dict begin PutEnd  end
 681
2685 a 681 2685 a
 tx@Dict begin gsave STV newpath 1.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 /TheNodeaI3 /TheNodea23 InitNC
{ NCLine  } if end gsave 1.0 SLW 0. setgray 0 setlinecap stroke  grestore
 grestore end
 681 2685 a 681 2685 a
 tx@Dict begin tx@NodeDict begin /t 0.5  def LPutCoor end PutBegin
 end
 681 2685 a 681
2685 a
 tx@Dict begin langle Rot  end
 681 2685 a 681 2685 a
 tx@Dict begin { 1.0 4.72495 5.49998 0.0 langle 90 add  langle  sub
Uput exch pop add a PtoC h1 add exch w1 add exch } PutCoor PutBegin
 end
 681 2685 a 661 2708 a Fv(b)681
2685 y
 tx@Dict begin PutEnd  end
 681 2685 a 681 2685 a
 tx@Dict begin langle neg Rot  end
 681 2685 a 681 2685 a
 tx@Dict begin PutEnd  end
 681
2685 a 681 2685 a
 tx@Dict begin gsave STV newpath 1.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 /TheNodea13 /TheNodeaF3 InitNC
{ GetAngle dup 5.  add /AngleA ED 5.  sub 180 add /AngleB ED 0.67 
0.67  NCCurve  } if end gsave 1.0 SLW 0. setgray 0 setlinecap stroke
 grestore  grestore end
 681 2685 a 681 2685 a
 tx@Dict begin tx@NodeDict begin /t 0.5  def LPutCoor end PutBegin
 end
 681 2685 a 681
2685 a
 tx@Dict begin langle Rot  end
 681 2685 a 681 2685 a
 tx@Dict begin { 1.0 33.07462 5.49998 0.0 langle 90 add  langle  sub
Uput exch pop add a PtoC h1 add exch w1 add exch } PutCoor PutBegin
 end
 681 2685 a 543 2708 a Fv(abbabbc)681
2685 y
 tx@Dict begin PutEnd  end
 681 2685 a 681 2685 a
 tx@Dict begin langle neg Rot  end
 681 2685 a 681 2685 a
 tx@Dict begin PutEnd  end
 681
2685 a 681 2685 a
 tx@Dict begin gsave STV newpath 1.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 /TheNodea13 /TheNodeaF3 InitNC
{ GetAngle dup -5.  add /AngleA ED -5.  sub 180 add /AngleB ED 0.67
 0.67  NCCurve  } if end gsave 1.0 SLW 0. setgray 0 setlinecap stroke
 grestore  grestore end
 681 2685 a 681 2685 a
 tx@Dict begin tx@NodeDict begin /t 0.5  def LPutCoor end PutBegin
 end
 681 2685 a 681
2685 a
 tx@Dict begin langle Rot  end
 681 2685 a 681 2685 a
 tx@Dict begin { 1.0 28.34967 5.49998 0.0 langle 90 sub  langle  sub
Uput exch pop add a PtoC h1 add exch w1 add exch } PutCoor PutBegin
 end
 681 2685 a 563 2708 a Fv(bbabbc)681
2685 y
 tx@Dict begin PutEnd  end
 681 2685 a 681 2685 a
 tx@Dict begin langle neg Rot  end
 681 2685 a 681 2685 a
 tx@Dict begin PutEnd  end
 681
2685 a 681 2685 a
 tx@Dict begin gsave STV newpath 1.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 /TheNodea23 /TheNodeaF3 InitNC
{ GetAngle dup 5.  add /AngleA ED 5.  sub 180 add /AngleB ED 0.67 
0.67  NCCurve  } if end gsave 1.0 SLW 0. setgray 0 setlinecap stroke
 grestore  grestore end
 681 2685 a 681 2685 a
 tx@Dict begin tx@NodeDict begin /t 0.5  def LPutCoor end PutBegin
 end
 681 2685 a 681
2685 a
 tx@Dict begin langle Rot  end
 681 2685 a 681 2685 a
 tx@Dict begin { 1.0 23.62473 5.49998 0.0 langle 90 add  langle  sub
Uput exch pop add a PtoC h1 add exch w1 add exch } PutCoor PutBegin
 end
 681 2685 a 583 2708 a Fv(babbc)681
2685 y
 tx@Dict begin PutEnd  end
 681 2685 a 681 2685 a
 tx@Dict begin langle neg Rot  end
 681 2685 a 681 2685 a
 tx@Dict begin PutEnd  end
 681
2685 a 681 2685 a
 tx@Dict begin gsave STV newpath 1.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 /TheNodea23 /TheNodeaF3 InitNC
{ GetAngle dup -5.  add /AngleA ED -5.  sub 180 add /AngleB ED 0.67
 0.67  NCCurve  } if end gsave 1.0 SLW 0. setgray 0 setlinecap stroke
 grestore  grestore end
 681 2685 a 681 2685 a
 tx@Dict begin tx@NodeDict begin /t 0.5  def LPutCoor end PutBegin
 end
 681 2685 a 681
2685 a
 tx@Dict begin langle Rot  end
 681 2685 a 681 2685 a
 tx@Dict begin { 1.0 18.89978 5.49998 0.0 langle 90 sub  langle  sub
Uput exch pop add a PtoC h1 add exch w1 add exch } PutCoor PutBegin
 end
 681 2685 a 602 2708 a Fv(abbc)681
2685 y
 tx@Dict begin PutEnd  end
 681 2685 a 681 2685 a
 tx@Dict begin langle neg Rot  end
 681 2685 a 681 2685 a
 tx@Dict begin PutEnd  end
 681
2685 a 681 2685 a
 tx@Dict begin gsave STV newpath 1.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 /TheNodea13 /TheNodeaI3 InitNC
{ GetAngle dup 30.  add /AngleA ED 30.  sub 180 add /AngleB ED 0.67
 0.67  NCCurve  } if end gsave 1.0 SLW 0. setgray 1.0 3.0 -2 0 add
DashLine  grestore  grestore end
 681 2685 a 681 2685 a
 tx@Dict begin gsave STV newpath 1.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 /TheNodea23 /TheNodeaI3 InitNC
{ GetAngle dup 30.  add /AngleA ED 30.  sub 180 add /AngleB ED 0.67
 0.67  NCCurve  } if end gsave 1.0 SLW 0. setgray 1.0 3.0 -2 0 add
DashLine  grestore  grestore end
 681 2685 a 681
2685 a
 tx@Dict begin gsave STV newpath 1.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 /TheNodeaF3 /TheNodea23 InitNC
{ GetAngle dup 40.  add /AngleA ED 40.  sub 180 add /AngleB ED 0.67
 0.67  NCCurve  } if end gsave 1.0 SLW 0. setgray 1.0 3.0 -2 0 add
DashLine  grestore  grestore end
 681 2685 a 681 2685 a
 tx@Dict begin gsave STV newpath 1.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 /TheNodeaI4 /TheNodea14 InitNC
{ NCLine  } if end gsave 1.0 SLW 0. setgray 0 setlinecap stroke  grestore
 grestore end
 681 2685 a 681 2685 a
 tx@Dict begin tx@NodeDict begin /t 0.5  def LPutCoor end PutBegin
 end
 681
2685 a 681 2685 a
 tx@Dict begin langle Rot  end
 681 2685 a 681 2685 a
 tx@Dict begin { 3.0 4.72495 3.87498 0.0 langle 90 add  langle  sub
Uput exch pop add a PtoC h1 add exch w1 add exch } PutCoor PutBegin
 end
 681 2685 a 661
2701 a Fv(a)681 2685 y
 tx@Dict begin PutEnd  end
 681 2685 a 681 2685 a
 tx@Dict begin langle neg Rot  end
 681 2685
a 681 2685 a
 tx@Dict begin PutEnd  end
 681 2685 a 681 2685 a
 tx@Dict begin gsave STV newpath 1.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 /TheNodeaI4 /TheNodea24 InitNC
{ NCLine  } if end gsave 1.0 SLW 0. setgray 0 setlinecap stroke  grestore
 grestore end
 681 2685 a 681 2685
a
 tx@Dict begin tx@NodeDict begin /t 0.5  def LPutCoor end PutBegin
 end
 681 2685 a 681 2685 a
 tx@Dict begin langle Rot  end
 681 2685 a 681 2685 a
 tx@Dict begin { 3.0 4.72495 5.49998 0.0 langle 90 add  langle  sub
Uput exch pop add a PtoC h1 add exch w1 add exch } PutCoor PutBegin
 end
 681 2685
a 661 2708 a Fv(b)681 2685 y
 tx@Dict begin PutEnd  end
 681 2685 a 681 2685 a
 tx@Dict begin langle neg Rot  end
 681
2685 a 681 2685 a
 tx@Dict begin PutEnd  end
 681 2685 a 681 2685 a
 tx@Dict begin gsave STV newpath 1.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 /TheNodea14 /TheNodea34 InitNC
{ NCLine  } if end gsave 1.0 SLW 0. setgray 0 setlinecap stroke  grestore
 grestore end
 681 2685 a 681
2685 a
 tx@Dict begin tx@NodeDict begin /t 0.5  def LPutCoor end PutBegin
 end
 681 2685 a 681 2685 a
 tx@Dict begin langle Rot  end
 681 2685 a 681 2685 a
 tx@Dict begin { 3.0 9.44989 5.49998 0.0 langle 90 add  langle  sub
Uput exch pop add a PtoC h1 add exch w1 add exch } PutCoor PutBegin
 end
 681
2685 a 642 2708 a Fv(bb)681 2685 y
 tx@Dict begin PutEnd  end
 681 2685 a 681 2685
a
 tx@Dict begin langle neg Rot  end
 681 2685 a 681 2685 a
 tx@Dict begin PutEnd  end
 681 2685 a 681 2685 a
 tx@Dict begin gsave STV newpath 1.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 /TheNodea34 /TheNodeaF4 InitNC
{ GetAngle dup 5.  add /AngleA ED 5.  sub 180 add /AngleB ED 0.67 
0.67  NCCurve  } if end gsave 1.0 SLW 0. setgray 0 setlinecap stroke
 grestore  grestore end
 681 2685
a 681 2685 a
 tx@Dict begin tx@NodeDict begin /t 0.5  def LPutCoor end PutBegin
 end
 681 2685 a 681 2685 a
 tx@Dict begin langle Rot  end
 681 2685 a 681 2685
a
 tx@Dict begin { 1.0 18.89978 5.49998 0.0 langle 90 add  langle  sub
Uput exch pop add a PtoC h1 add exch w1 add exch } PutCoor PutBegin
 end
 681 2685 a 602 2708 a Fv(abbc)681 2685 y
 tx@Dict begin PutEnd  end
 681 2685 a
681 2685 a
 tx@Dict begin langle neg Rot  end
 681 2685 a 681 2685 a
 tx@Dict begin PutEnd  end
 681 2685 a 681 2685
a
 tx@Dict begin gsave STV newpath 1.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 /TheNodea34 /TheNodeaF4 InitNC
{ GetAngle dup -5.  add /AngleA ED -5.  sub 180 add /AngleB ED 0.67
 0.67  NCCurve  } if end gsave 1.0 SLW 0. setgray 0 setlinecap stroke
 grestore  grestore end
 681 2685 a 681 2685 a
 tx@Dict begin tx@NodeDict begin /t 0.5  def LPutCoor end PutBegin
 end
 681 2685 a 681 2685 a
 tx@Dict begin langle Rot  end
 681 2685
a 681 2685 a
 tx@Dict begin { 1.0 4.72495 3.87498 0.0 langle 90 sub  langle  sub
Uput exch pop add a PtoC h1 add exch w1 add exch } PutCoor PutBegin
 end
 681 2685 a 661 2701 a Fv(c)681 2685 y
 tx@Dict begin PutEnd  end
 681
2685 a 681 2685 a
 tx@Dict begin langle neg Rot  end
 681 2685 a 681 2685 a
 tx@Dict begin PutEnd  end
 681 2685 a 681
2685 a
 tx@Dict begin gsave STV newpath 1.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 /TheNodea14 /TheNodeaF4 InitNC
{ GetAngle dup 30.  add /AngleA ED 30.  sub 180 add /AngleB ED 0.67
 0.67  NCCurve  } if end gsave 1.0 SLW 0. setgray 0 setlinecap stroke
 grestore  grestore end
 681 2685 a 681 2685 a
 tx@Dict begin tx@NodeDict begin /t 0.5  def LPutCoor end PutBegin
 end
 681 2685 a 681 2685 a
 tx@Dict begin { 1.0 33.07462 5.49998 0.0 langle 90 add  Uput exch
pop add a PtoC h1 add exch w1 add exch } PutCoor PutBegin  end
 681
2685 a 543 2708 a Fv(abbabbc)681 2685 y
 tx@Dict begin PutEnd  end
 681 2685 a 681
2685 a
 tx@Dict begin PutEnd  end
 681 2685 a 681 2685 a
 tx@Dict begin gsave STV newpath 1.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 /TheNodea24 /TheNodeaF4 InitNC
{ GetAngle dup -20.  add /AngleA ED -20.  sub 180 add /AngleB ED 0.67
 0.67  NCCurve  } if end gsave 1.0 SLW 0. setgray 0 setlinecap stroke
 grestore  grestore end
 681 2685 a 681 2685 a
 tx@Dict begin tx@NodeDict begin /t 0.5  def LPutCoor end PutBegin
 end
 681
2685 a 681 2685 a
 tx@Dict begin { 1.0 23.62473 5.49998 0.0 langle 90 add  Uput exch
pop add a PtoC h1 add exch w1 add exch } PutCoor PutBegin  end
 681 2685 a 583 2708 a Fv(babbc)681
2685 y
 tx@Dict begin PutEnd  end
 681 2685 a 681 2685 a
 tx@Dict begin PutEnd  end
 681 2685 a 681 2685 a
 tx@Dict begin gsave STV newpath 1.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 /TheNodea24 /TheNodeaF4 InitNC
{ GetAngle dup -35.  add /AngleA ED -35.  sub 180 add /AngleB ED 0.67
 0.67  NCCurve  } if end gsave 1.0 SLW 0. setgray 0 setlinecap stroke
 grestore  grestore end
 681
2685 a 681 2685 a
 tx@Dict begin tx@NodeDict begin /t 0.5  def LPutCoor end PutBegin
 end
 681 2685 a 681 2685 a
 tx@Dict begin { 1.0 18.89978 5.49998 0.0 langle 90 sub  Uput exch
pop add a PtoC h1 add exch w1 add exch } PutCoor PutBegin  end
 681 2685 a 602
2708 a Fv(abbc)681 2685 y
 tx@Dict begin PutEnd  end
 681 2685 a 681 2685 a
 tx@Dict begin PutEnd  end
 681 2685
a 681 2685 a
 tx@Dict begin gsave STV newpath 1.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 /TheNodea14 /TheNodeaI4 InitNC
{ GetAngle dup 30.  add /AngleA ED 30.  sub 180 add /AngleB ED 0.67
 0.67  NCCurve  } if end gsave 1.0 SLW 0. setgray 1.0 3.0 -2 0 add
DashLine  grestore  grestore end
 681 2685 a 681 2685 a
 tx@Dict begin gsave STV newpath 1.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 /TheNodea24 /TheNodeaI4 InitNC
{ GetAngle dup 30.  add /AngleA ED 30.  sub 180 add /AngleB ED 0.67
 0.67  NCCurve  } if end gsave 1.0 SLW 0. setgray 1.0 3.0 -2 0 add
DashLine  grestore  grestore end
 681 2685 a 681 2685
a
 tx@Dict begin gsave STV newpath 1.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 /TheNodea34 /TheNodea24 InitNC
{ GetAngle dup -10.  add /AngleA ED -10.  sub 180 add /AngleB ED 0.67
 0.67  NCCurve  } if end gsave 1.0 SLW 0. setgray 1.0 3.0 -2 0 add
DashLine  grestore  grestore end
 681 2685 a 681 2685 a
 tx@Dict begin gsave STV newpath 1.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 /TheNodeaF4 /TheNodea34 InitNC
{ GetAngle dup -40.  add /AngleA ED -40.  sub 180 add /AngleB ED 0.67
 0.67  NCCurve  } if end gsave 1.0 SLW 0. setgray 1.0 3.0 -2 0 add
DashLine  grestore  grestore end
 681 2685 a 681 2685 a
 tx@Dict begin gsave STV newpath 1.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 /TheNodeaI5 /TheNodea15 InitNC
{ NCLine  } if end gsave 1.0 SLW 0. setgray 0 setlinecap stroke  grestore
 grestore end
 681 2685
a 681 2685 a
 tx@Dict begin tx@NodeDict begin /t 0.5  def LPutCoor end PutBegin
 end
 681 2685 a 681 2685 a
 tx@Dict begin langle Rot  end
 681 2685 a 681 2685
a
 tx@Dict begin { 3.0 4.72495 3.87498 0.0 langle 90 add  langle  sub
Uput exch pop add a PtoC h1 add exch w1 add exch } PutCoor PutBegin
 end
 681 2685 a 661 2701 a Fv(a)681 2685 y
 tx@Dict begin PutEnd  end
 681 2685 a 681
2685 a
 tx@Dict begin langle neg Rot  end
 681 2685 a 681 2685 a
 tx@Dict begin PutEnd  end
 681 2685 a 681 2685 a
 tx@Dict begin gsave STV newpath 1.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 /TheNodeaI5 /TheNodea25 InitNC
{ NCLine  } if end gsave 1.0 SLW 0. setgray 0 setlinecap stroke  grestore
 grestore end
 681
2685 a 681 2685 a
 tx@Dict begin tx@NodeDict begin /t 0.5  def LPutCoor end PutBegin
 end
 681 2685 a 681 2685 a
 tx@Dict begin langle Rot  end
 681 2685 a 681
2685 a
 tx@Dict begin { 3.0 4.72495 5.49998 0.0 langle 90 add  langle  sub
Uput exch pop add a PtoC h1 add exch w1 add exch } PutCoor PutBegin
 end
 681 2685 a 661 2708 a Fv(b)681 2685 y
 tx@Dict begin PutEnd  end
 681 2685
a 681 2685 a
 tx@Dict begin langle neg Rot  end
 681 2685 a 681 2685 a
 tx@Dict begin PutEnd  end
 681 2685 a 681 2685
a
 tx@Dict begin gsave STV newpath 1.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 /TheNodea15 /TheNodea35 InitNC
{ NCLine  } if end gsave 1.0 SLW 0. setgray 0 setlinecap stroke  grestore
 grestore end
 681 2685 a 681 2685 a
 tx@Dict begin tx@NodeDict begin /t 0.5  def LPutCoor end PutBegin
 end
 681 2685 a 681 2685 a
 tx@Dict begin langle Rot  end
 681 2685
a 681 2685 a
 tx@Dict begin { 3.0 9.44989 5.49998 0.0 langle 90 add  langle  sub
Uput exch pop add a PtoC h1 add exch w1 add exch } PutCoor PutBegin
 end
 681 2685 a 642 2708 a Fv(bb)681 2685 y
 tx@Dict begin PutEnd  end
 681
2685 a 681 2685 a
 tx@Dict begin langle neg Rot  end
 681 2685 a 681 2685 a
 tx@Dict begin PutEnd  end
 681 2685 a 681
2685 a
 tx@Dict begin gsave STV newpath 1.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 /TheNodea25 /TheNodea35 InitNC
{ NCLine  } if end gsave 1.0 SLW 0. setgray 0 setlinecap stroke  grestore
 grestore end
 681 2685 a 681 2685 a
 tx@Dict begin tx@NodeDict begin /t 0.5  def LPutCoor end PutBegin
 end
 681 2685 a 681 2685 a
 tx@Dict begin langle Rot  end
 681
2685 a 681 2685 a
 tx@Dict begin { 3.0 4.72495 5.49998 0.0 langle 90 add  langle  sub
Uput exch pop add a PtoC h1 add exch w1 add exch } PutCoor PutBegin
 end
 681 2685 a 661 2708 a Fv(b)681 2685
y
 tx@Dict begin PutEnd  end
 681 2685 a 681 2685 a
 tx@Dict begin langle neg Rot  end
 681 2685 a 681 2685 a
 tx@Dict begin PutEnd  end
 681 2685
a 681 2685 a
 tx@Dict begin gsave STV newpath 1.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 /TheNodea35 /TheNodeaF5 InitNC
{ GetAngle dup 5.  add /AngleA ED 5.  sub 180 add /AngleB ED 0.67 
0.67  NCCurve  } if end gsave 1.0 SLW 0. setgray 0 setlinecap stroke
 grestore  grestore end
 681 2685 a 681 2685 a
 tx@Dict begin tx@NodeDict begin /t 0.5  def LPutCoor end PutBegin
 end
 681 2685 a 681 2685
a
 tx@Dict begin langle Rot  end
 681 2685 a 681 2685 a
 tx@Dict begin { 1.0 18.89978 5.49998 0.0 langle 90 add  langle  sub
Uput exch pop add a PtoC h1 add exch w1 add exch } PutCoor PutBegin
 end
 681 2685 a 602 2708 a Fv(abbc)681
2685 y
 tx@Dict begin PutEnd  end
 681 2685 a 681 2685 a
 tx@Dict begin langle neg Rot  end
 681 2685 a 681 2685 a
 tx@Dict begin PutEnd  end
 681
2685 a 681 2685 a
 tx@Dict begin gsave STV newpath 1.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 /TheNodea35 /TheNodeaF5 InitNC
{ GetAngle dup -5.  add /AngleA ED -5.  sub 180 add /AngleB ED 0.67
 0.67  NCCurve  } if end gsave 1.0 SLW 0. setgray 0 setlinecap stroke
 grestore  grestore end
 681 2685 a 681 2685 a
 tx@Dict begin tx@NodeDict begin /t 0.5  def LPutCoor end PutBegin
 end
 681 2685 a 681
2685 a
 tx@Dict begin langle Rot  end
 681 2685 a 681 2685 a
 tx@Dict begin { 1.0 4.72495 3.87498 0.0 langle 90 sub  langle  sub
Uput exch pop add a PtoC h1 add exch w1 add exch } PutCoor PutBegin
 end
 681 2685 a 661 2701 a Fv(c)681
2685 y
 tx@Dict begin PutEnd  end
 681 2685 a 681 2685 a
 tx@Dict begin langle neg Rot  end
 681 2685 a 681 2685 a
 tx@Dict begin PutEnd  end
 681
2685 a 681 2685 a
 tx@Dict begin gsave STV newpath 1.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 /TheNodea15 /TheNodeaF5 InitNC
{ GetAngle dup 30.  add /AngleA ED 30.  sub 180 add /AngleB ED 0.67
 0.67  NCCurve  } if end gsave 1.0 SLW 0. setgray 0 setlinecap stroke
 grestore  grestore end
 681 2685 a 681 2685 a
 tx@Dict begin tx@NodeDict begin /t 0.5  def LPutCoor end PutBegin
 end
 681 2685 a 681
2685 a
 tx@Dict begin { 1.0 33.07462 5.49998 0.0 langle 90 add  Uput exch
pop add a PtoC h1 add exch w1 add exch } PutCoor PutBegin  end
 681 2685 a 543 2708 a Fv(abbabbc)681 2685 y
 tx@Dict begin PutEnd  end
 681
2685 a 681 2685 a
 tx@Dict begin PutEnd  end
 681 2685 a 681 2685 a
 tx@Dict begin gsave STV newpath 1.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 /TheNodea25 /TheNodeaF5 InitNC
{ GetAngle dup -25.  add /AngleA ED -25.  sub 180 add /AngleB ED 0.67
 0.67  NCCurve  } if end gsave 1.0 SLW 0. setgray 0 setlinecap stroke
 grestore  grestore end
 681 2685 a 681
2685 a
 tx@Dict begin tx@NodeDict begin /t 0.5  def LPutCoor end PutBegin
 end
 681 2685 a 681 2685 a
 tx@Dict begin { 1.0 18.89978 5.49998 0.0 langle 90 add  Uput exch
pop add a PtoC h1 add exch w1 add exch } PutCoor PutBegin  end
 681 2685 a 602 2708 a Fv(abbc)681
2685 y
 tx@Dict begin PutEnd  end
 681 2685 a 681 2685 a
 tx@Dict begin PutEnd  end
 681 2685 a 681 2685 a
 tx@Dict begin gsave STV newpath 1.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 /TheNodea15 /TheNodeaI5 InitNC
{ GetAngle dup 30.  add /AngleA ED 30.  sub 180 add /AngleB ED 0.67
 0.67  NCCurve  } if end gsave 1.0 SLW 0. setgray 1.0 3.0 -2 0 add
DashLine  grestore  grestore end
 681
2685 a 681 2685 a
 tx@Dict begin gsave STV newpath 1.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 /TheNodea25 /TheNodeaI5 InitNC
{ GetAngle dup 30.  add /AngleA ED 30.  sub 180 add /AngleB ED 0.67
 0.67  NCCurve  } if end gsave 1.0 SLW 0. setgray 1.0 3.0 -2 0 add
DashLine  grestore  grestore end
 681 2685 a 681 2685 a
 tx@Dict begin gsave STV newpath 1.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 /TheNodea35 /TheNodea25 InitNC
{ GetAngle dup -50.  add /AngleA ED -50.  sub 180 add /AngleB ED 0.67
 0.67  NCCurve  } if end gsave 1.0 SLW 0. setgray 1.0 3.0 -2 0 add
DashLine  grestore  grestore end
 681 2685 a 681
2685 a
 tx@Dict begin gsave STV newpath 1.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 /TheNodeaF5 /TheNodea35 InitNC
{ GetAngle dup -40.  add /AngleA ED -40.  sub 180 add /AngleB ED 0.67
 0.67  NCCurve  } if end gsave 1.0 SLW 0. setgray 1.0 3.0 -2 0 add
DashLine  grestore  grestore end
 681 2685 a 681 2685 a
 tx@Dict begin gsave STV newpath 1.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 /TheNodeaI6 /TheNodea16 InitNC
{ NCLine  } if end gsave 1.0 SLW 0. setgray 0 setlinecap stroke  grestore
 grestore end
 681 2685 a 681 2685 a
 tx@Dict begin tx@NodeDict begin /t 0.5  def LPutCoor end PutBegin
 end
 681
2685 a 681 2685 a
 tx@Dict begin langle Rot  end
 681 2685 a 681 2685 a
 tx@Dict begin { 3.0 4.72495 3.87498 0.0 langle 90 add  langle  sub
Uput exch pop add a PtoC h1 add exch w1 add exch } PutCoor PutBegin
 end
 681 2685 a 661
2701 a Fv(a)681 2685 y
 tx@Dict begin PutEnd  end
 681 2685 a 681 2685 a
 tx@Dict begin langle neg Rot  end
 681 2685
a 681 2685 a
 tx@Dict begin PutEnd  end
 681 2685 a 681 2685 a
 tx@Dict begin gsave STV newpath 1.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 /TheNodeaI6 /TheNodea26 InitNC
{ NCLine  } if end gsave 1.0 SLW 0. setgray 0 setlinecap stroke  grestore
 grestore end
 681 2685 a 681 2685
a
 tx@Dict begin tx@NodeDict begin /t 0.5  def LPutCoor end PutBegin
 end
 681 2685 a 681 2685 a
 tx@Dict begin langle Rot  end
 681 2685 a 681 2685 a
 tx@Dict begin { 3.0 4.72495 5.49998 0.0 langle 90 add  langle  sub
Uput exch pop add a PtoC h1 add exch w1 add exch } PutCoor PutBegin
 end
 681 2685
a 661 2708 a Fv(b)681 2685 y
 tx@Dict begin PutEnd  end
 681 2685 a 681 2685 a
 tx@Dict begin langle neg Rot  end
 681
2685 a 681 2685 a
 tx@Dict begin PutEnd  end
 681 2685 a 681 2685 a
 tx@Dict begin gsave STV newpath 1.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 /TheNodea16 /TheNodea36 InitNC
{ NCLine  } if end gsave 1.0 SLW 0. setgray 0 setlinecap stroke  grestore
 grestore end
 681 2685 a 681
2685 a
 tx@Dict begin tx@NodeDict begin /t 0.5  def LPutCoor end PutBegin
 end
 681 2685 a 681 2685 a
 tx@Dict begin langle Rot  end
 681 2685 a 681 2685 a
 tx@Dict begin { 3.0 9.44989 5.49998 0.0 langle 90 add  langle  sub
Uput exch pop add a PtoC h1 add exch w1 add exch } PutCoor PutBegin
 end
 681
2685 a 642 2708 a Fv(bb)681 2685 y
 tx@Dict begin PutEnd  end
 681 2685 a 681 2685
a
 tx@Dict begin langle neg Rot  end
 681 2685 a 681 2685 a
 tx@Dict begin PutEnd  end
 681 2685 a 681 2685 a
 tx@Dict begin gsave STV newpath 1.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 /TheNodea26 /TheNodea36 InitNC
{ NCLine  } if end gsave 1.0 SLW 0. setgray 0 setlinecap stroke  grestore
 grestore end
 681 2685
a 681 2685 a
 tx@Dict begin tx@NodeDict begin /t 0.5  def LPutCoor end PutBegin
 end
 681 2685 a 681 2685 a
 tx@Dict begin langle Rot  end
 681 2685 a 681 2685
a
 tx@Dict begin { 3.0 4.72495 5.49998 0.0 langle 90 add  langle  sub
Uput exch pop add a PtoC h1 add exch w1 add exch } PutCoor PutBegin
 end
 681 2685 a 661 2708 a Fv(b)681 2685 y
 tx@Dict begin PutEnd  end
 681 2685 a 681
2685 a
 tx@Dict begin langle neg Rot  end
 681 2685 a 681 2685 a
 tx@Dict begin PutEnd  end
 681 2685 a 681 2685 a
 tx@Dict begin gsave STV newpath 1.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 /TheNodea36 /TheNodeaF6 InitNC
{ GetAngle dup 5.  add /AngleA ED 5.  sub 180 add /AngleB ED 0.67 
0.67  NCCurve  } if end gsave 1.0 SLW 0. setgray 0 setlinecap stroke
 grestore  grestore end
 681
2685 a 681 2685 a
 tx@Dict begin tx@NodeDict begin /t 0.5  def LPutCoor end PutBegin
 end
 681 2685 a 681 2685 a
 tx@Dict begin langle Rot  end
 681 2685 a 681
2685 a
 tx@Dict begin { 1.0 18.89978 5.49998 0.0 langle 90 add  langle  sub
Uput exch pop add a PtoC h1 add exch w1 add exch } PutCoor PutBegin
 end
 681 2685 a 602 2708 a Fv(abbc)681 2685 y
 tx@Dict begin PutEnd  end
 681 2685
a 681 2685 a
 tx@Dict begin langle neg Rot  end
 681 2685 a 681 2685 a
 tx@Dict begin PutEnd  end
 681 2685 a 681 2685
a
 tx@Dict begin gsave STV newpath 1.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 /TheNodea36 /TheNodeaF6 InitNC
{ GetAngle dup -5.  add /AngleA ED -5.  sub 180 add /AngleB ED 0.67
 0.67  NCCurve  } if end gsave 1.0 SLW 0. setgray 0 setlinecap stroke
 grestore  grestore end
 681 2685 a 681 2685 a
 tx@Dict begin tx@NodeDict begin /t 0.5  def LPutCoor end PutBegin
 end
 681 2685 a 681 2685 a
 tx@Dict begin langle Rot  end
 681 2685
a 681 2685 a
 tx@Dict begin { 1.0 4.72495 3.87498 0.0 langle 90 sub  langle  sub
Uput exch pop add a PtoC h1 add exch w1 add exch } PutCoor PutBegin
 end
 681 2685 a 661 2701 a Fv(c)681 2685 y
 tx@Dict begin PutEnd  end
 681
2685 a 681 2685 a
 tx@Dict begin langle neg Rot  end
 681 2685 a 681 2685 a
 tx@Dict begin PutEnd  end
 681 2685 a 681
2685 a
 tx@Dict begin gsave STV newpath 1.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 /TheNodea16 /TheNodeaF6 InitNC
{ GetAngle dup 25.  add /AngleA ED 25.  sub 180 add /AngleB ED 0.67
 0.67  NCCurve  } if end gsave 1.0 SLW 0. setgray 0 setlinecap stroke
 grestore  grestore end
 681 2685 a 681 2685 a
 tx@Dict begin tx@NodeDict begin /t 0.5  def LPutCoor end PutBegin
 end
 681 2685 a 681 2685 a
 tx@Dict begin { 1.0 33.07462 5.49998 0.0 langle 90 add  Uput exch
pop add a PtoC h1 add exch w1 add exch } PutCoor PutBegin  end
 681
2685 a 543 2708 a Fv(abbabbc)681 2685 y
 tx@Dict begin PutEnd  end
 681 2685 a 681
2685 a
 tx@Dict begin PutEnd  end
 681 2685 a 681 2685 a
 tx@Dict begin gsave STV newpath 1.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 /TheNodea26 /TheNodeaF6 InitNC
{ GetAngle dup -25.  add /AngleA ED -25.  sub 180 add /AngleB ED 0.67
 0.67  NCCurve  } if end gsave 1.0 SLW 0. setgray 0 setlinecap stroke
 grestore  grestore end
 681 2685 a 681 2685 a
 tx@Dict begin tx@NodeDict begin /t 0.5  def LPutCoor end PutBegin
 end
 681
2685 a 681 2685 a
 tx@Dict begin { 1.0 18.89978 5.49998 0.0 langle 90 add  Uput exch
pop add a PtoC h1 add exch w1 add exch } PutCoor PutBegin  end
 681 2685 a 602 2708 a Fv(abbc)681 2685
y
 tx@Dict begin PutEnd  end
 681 2685 a 681 2685 a
 tx@Dict begin PutEnd  end
 681 2685 a 681 2685 a
 tx@Dict begin gsave STV newpath 1.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 /TheNodea26 /TheNodeaF6 InitNC
{ tx@Dict begin /r 2.84544 def /Lineto { Arcto } def end /AngleA -90.
 def /AngleB -90.  def /armA 5.69046  def /armB 10.0  def NCAngles
 } if end gsave 1.0 SLW 0. setgray 0 setlinecap stroke  grestore  grestore
end
 681 2685
a 681 2685 a
 tx@Dict begin tx@NodeDict begin /t 1.5  def LPutCoor end PutBegin
 end
 681 2685 a 681 2685 a
 tx@Dict begin { 1.0 4.72495 3.87498 0.0 langle 90 add  Uput exch pop
add a PtoC h1 add exch w1 add exch } PutCoor PutBegin  end
 681 2685 a 661 2701
a Fv(c)681 2685 y
 tx@Dict begin PutEnd  end
 681 2685 a 681 2685 a
 tx@Dict begin PutEnd  end
 681 2685 a 681
2685 a
 tx@Dict begin gsave STV newpath 1.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 /TheNodeaI6 /TheNodeaF6 InitNC
{ tx@Dict begin /r 2.84544 def /Lineto { Arcto } def end /AngleA -90.
 def /AngleB -90.  def /armA 39.83366  def /armB 10.0  def NCAngles
 } if end gsave 1.0 SLW 0. setgray 0 setlinecap stroke  grestore  grestore
end
 681 2685 a 681 2685 a
 tx@Dict begin tx@NodeDict begin /t 1.5  def LPutCoor end PutBegin
 end
 681 2685 a 681 2685 a
 tx@Dict begin { 1.0 4.72495 3.87498 0.0 langle 90 add  Uput exch pop
add a PtoC h1 add exch w1 add exch } PutCoor PutBegin  end
 681
2685 a 661 2701 a Fv(c)681 2685 y
 tx@Dict begin PutEnd  end
 681 2685 a 681 2685
a
 tx@Dict begin PutEnd  end
 681 2685 a 681 2685 a
 tx@Dict begin gsave STV newpath 1.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 /TheNodea16 /TheNodeaI6 InitNC
{ GetAngle dup 30.  add /AngleA ED 30.  sub 180 add /AngleB ED 0.67
 0.67  NCCurve  } if end gsave 1.0 SLW 0. setgray 1.0 3.0 -2 0 add
DashLine  grestore  grestore end
 681 2685 a 681 2685 a
 tx@Dict begin gsave STV newpath 1.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 /TheNodea26 /TheNodeaI6 InitNC
{ GetAngle dup 30.  add /AngleA ED 30.  sub 180 add /AngleB ED 0.67
 0.67  NCCurve  } if end gsave 1.0 SLW 0. setgray 1.0 3.0 -2 0 add
DashLine  grestore  grestore end
 681 2685
a 681 2685 a
 tx@Dict begin gsave STV newpath 1.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 /TheNodea36 /TheNodea26 InitNC
{ GetAngle dup -50.  add /AngleA ED -50.  sub 180 add /AngleB ED 0.67
 0.67  NCCurve  } if end gsave 1.0 SLW 0. setgray 1.0 3.0 -2 0 add
DashLine  grestore  grestore end
 681 2685 a 681 2685 a
 tx@Dict begin gsave STV newpath 1.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 /TheNodeaF6 /TheNodeaI6 InitNC
{ tx@Dict begin /r 2.84544 def /Lineto { Arcto } def end /AngleA 90.
 def /AngleB 90.  def /armA 36.98865  def /armB 10.0  def NCAngles
 } if end gsave 1.0 SLW 0. setgray 1.0 3.0 -2 0 add DashLine  grestore
 grestore end
 681 2685 a 266 x Fm(Fig.)15
b(8.)24 b Fw(Six)f(steps)g(during)g(the)g(construction)h(of)g
Fl(CD)n(A)-8 b(WG)p Fw(\()p Fv(aabbabbc)p Fw(\).)26 b(The)d(pictures)h
(displa)n(y)681 3051 y(the)30 b(situation)i(after)g(the)e(insertion)i
(of)f Fl(suf)1978 3069 y Fe(0)2013 3051 y Fw(=)p Fv(aabbabbc)h
Fw(\()p Fg(i)p Fw(\),)f Fl(suf)2651 3069 y Fe(2)2686
3051 y Fw(=)p Fv(bbabbc)h Fw(\()p Fg(ii)p Fw(\),)f Fl(suf)3272
3069 y Fe(3)3307 3051 y Fw(=)p Fv(babbc)681 3150 y Fw(\()p
Fg(iii)p Fw(\),)26 b Fl(suf)962 3169 y Fe(4)997 3150
y Fw(=)p Fv(abbc)g Fw(\()p Fg(iv)s Fw(\),)g(and)f Fl(suf)1657
3169 y Fe(5)1692 3150 y Fw(=)p Fv(bbc)h Fw(\()p Fg(v)s
Fw(\).)g Fg(v)s(i)g Fw(sho)n(ws)g(the)f(\014nal)h(automaton.)p
3 setlinewidth np 2823 3980 60 61 0.00 360.00 ellipse
st 3 setlinewidth np 1420 3980 60 61 0.00 360.00 ellipse
st 3 setlinewidth np 2274 3980 a 2292 3980 li st 3 setlinewidth
np 2317 3980 a 2335 3980 li st 3 setlinewidth np 2359
3980 a 2377 3980 li st 3 setlinewidth np 2402 3980 a
2420 3980 li st 3 setlinewidth np 2445 3980 a 2463 3980
li st 3 setlinewidth np 2487 3980 a 2505 3980 li st 3
setlinewidth np 2530 3980 a 2548 3980 li st 3 setlinewidth
np 2573 3980 a 2591 3980 li st 3 setlinewidth np 2616
3980 a 2634 3980 li st 3 setlinewidth np 2658 3980 a
2676 3980 li st 3 setlinewidth np 2701 3980 a 2719 3980
li st 3 setlinewidth np 2744 3980 a 2762 3980 li st 0 setgray
3 setlinewidth np 2718 3991 a 2762 3980 li 2718 3969
li 2731 3980 li closepath fil 0 setgray np 2718 3991
a 2762 3980 li 2718 3969 li 2731 3980 li closepath st
3 setlinewidth np 1481 3980 a 1542 4017 li 1664 3943
li 1725 4017 li 1786 3943 li 1847 3980 li 1908 3943 li
1969 4017 li 2030 3980 li 2091 4017 li 2152 3907 li 2188
3980 li 2273 3980 li st 0 setgray 3 setlinewidth np 2230
3991 a 2273 3980 li 2230 3969 li 2243 3980 li closepath
fil 0 setgray np 2230 3991 a 2273 3980 li 2230 3969 li
2243 3980 li closepath st 3 setlinewidth np 2273 3980
a 2615 4236 li st 0 setgray 3 setlinewidth np 2280 3980
18 0.00 360.00 arc fil 0 setgray np 2280 3980 18 0.00
360.00 arc st 3 setlinewidth np 2280 3980 18 0.00 360.00
arc st 3 setlinewidth np 2269 3982 a 2615 3724 li st
2457 3931 a Fr(tail)2585 3943 y Fo(i)p 3 setlinewidth
np 1420 3919 a 1433 3894 li 1444 3871 li 1463 3837 li
1479 3813 li 1493 3797 li st 3 setlinewidth np 1493 3797
a 1518 3777 li 1552 3756 li 1586 3737 li 1615 3724 li
st 3 setlinewidth np 1615 3724 a 1633 3717 li 1655 3709
li 1679 3702 li 1705 3695 li 1732 3688 li 1757 3683 li
1780 3678 li 1798 3675 li st 3 setlinewidth np 1798 3675
a 1822 3672 li 1850 3669 li 1881 3666 li 1914 3664 li
1949 3662 li 1985 3661 li 2023 3659 li 2041 3658 li 2060
3658 li 2079 3658 li 2098 3658 li 2135 3657 li 2171 3657
li 2207 3658 li 2240 3658 li 2270 3660 li 2298 3661 li
2323 3663 li st 3 setlinewidth np 2323 3663 a 2353 3666
li 2388 3671 li 2408 3674 li 2428 3677 li 2449 3681 li
2470 3685 li 2491 3689 li 2512 3694 li 2533 3698 li 2552
3703 li 2587 3713 li 2615 3724 li st 3 setlinewidth np
2615 3724 a 2645 3739 li 2679 3763 li 2713 3788 li 2738
3810 li st 3 setlinewidth np 2738 3810 a 2770 3846 li
2792 3876 li 2807 3896 li 2823 3919 li st 0 setgray 3
setlinewidth np 2720 3830 a 2823 3919 li 2774 3792 li
2770 3844 li closepath fil 0 setgray np 2720 3830 a 2823
3919 li 2774 3792 li 2770 3844 li closepath st 3 setlinewidth
np 1420 4041 a 1433 4066 li 1444 4089 li 1463 4123 li
1479 4146 li 1493 4163 li st 3 setlinewidth np 1493 4163
a 1518 4183 li 1552 4204 li 1586 4223 li 1615 4236 li
st 3 setlinewidth np 1615 4236 a 1633 4243 li 1655 4250
li 1679 4258 li 1705 4265 li 1732 4272 li 1757 4277 li
1780 4282 li 1798 4285 li st 3 setlinewidth np 1798 4285
a 1822 4288 li 1850 4291 li 1881 4293 li 1914 4296 li
1949 4298 li 1985 4299 li 2023 4301 li 2041 4302 li 2060
4302 li 2079 4302 li 2098 4303 li 2135 4303 li 2171 4303
li 2207 4303 li 2240 4302 li 2270 4301 li 2298 4300 li
2323 4298 li st 3 setlinewidth np 2323 4298 a 2353 4294
li 2388 4289 li 2408 4286 li 2428 4283 li 2449 4279 li
2470 4275 li 2491 4271 li 2512 4266 li 2533 4262 li 2552
4257 li 2587 4247 li 2615 4236 li st 3 setlinewidth np
2615 4236 a 2645 4221 li 2679 4197 li 2713 4173 li 2738
4152 li st 3 setlinewidth np 2738 4152 a 2770 4114 li
2792 4083 li 2807 4064 li 2823 4041 li st 0 setgray 3
setlinewidth np 2774 4168 a 2823 4041 li 2720 4129 li
2770 4116 li closepath fil 0 setgray np 2774 4168 a 2823
4041 li 2720 4129 li 2770 4116 li closepath st 1408 4005
a Fw(I)1375 b(F)1774 3919 y Fr(head)1948 3931 y Fo(i)681
4582 y Fm(Fig.)15 b(9.)26 b Fw(Sc)n(heme)d(of)j(the)f(insertion)h(of)f
Fl(suf)1951 4600 y Fd(i)2002 4582 y Fw(in)g Ff(A)2152
4590 y Fd(i)p Fc(\000)p Fe(1)2257 4582 y Fw(:)g(there)g(already)h(is)f
(a)h(path)e(lab)r(eled)i(b)n(y)e(the)681 4681 y(pre\014x)g
Fl(he)l(ad)1045 4689 y Fd(i)1097 4681 y Fw(of)j Fl(suf)1281
4700 y Fd(i)1307 4681 y Fw(.)p eop
%%Page: 13 13
13 12 bop 247 600 a
 tx@Dict begin tx@NodeDict begin {  } /TheNodeC 16 { .5 10.39525 3.8
false .5 11.04514 InitRnode  } NewNode end end
 247 600 a 32 w @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  0. true 3.8 neg 3.8
neg 7.24513 10.39525 .5 Frame  gsave 0.8 SLW 0. setgray 0 setlinecap
stroke  grestore end


@endspecial Fr(i)1830 600 y
 tx@Dict begin tx@NodeDict begin {  } /TheNodeD 16 { .5 10.39525 3.8
false .5 14.49026 InitRnode  } NewNode end end
 1830 600 a 31 w @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  0. true 3.8 neg 3.8
neg 10.69026 10.39525 .5 Frame  gsave 0.8 SLW 0. setgray 0 setlinecap
stroke  grestore end
 
@endspecial Fr(ii)353 1053 y
 tx@Dict begin tx@NodeDict begin { 2.88892 2 div 4.78334 0.0 add 2
div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add 2.6 add } /TheNodeaI3 11 {
InitCnode  } NewNode end end
 353 1053 a
@beginspecial @setspecial
 tx@Dict begin STP newpath 2.6 SLW 0. setgray  2.88892 2 div 4.78334
0.0 add 2 div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add CLW 2 div add 0
360 arc closepath gsave 2.6 SLW 0. setgray 0 setlinecap stroke  grestore
gsave 1.0 SLW 1. setgray stroke grestore end
 
@endspecial Fn(I)585 816 y
 tx@Dict begin tx@NodeDict begin { 3.98613 2 div 4.51111 0.0 add 2
div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add 0.8 add } /TheNodea33 11 {
InitCnode  } NewNode end end

585 816 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  3.98613 2 div 4.51111
0.0 add 2 div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add CLW 2 div add 0
360 arc closepath gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore
end
 
@endspecial Fn(3)538
1288 y
 tx@Dict begin tx@NodeDict begin { 3.98613 2 div 4.51111 0.0 add 2
div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add 0.8 add } /TheNodea23 11 {
InitCnode  } NewNode end end
 538 1288 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  3.98613 2 div 4.51111
0.0 add 2 div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add CLW 2 div add 0
360 arc closepath gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore
end
 
@endspecial
Fn(2)774 1288 y
 tx@Dict begin tx@NodeDict begin { 3.98613 2 div 4.51111 0.0 add 2
div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add 0.8 add } /TheNodea13 11 {
InitCnode  } NewNode end end
 774 1288 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  3.98613 2 div 4.51111
0.0 add 2 div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add CLW 2 div add 0
360 arc closepath gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore
end


@endspecial Fn(1)1643 1053 y
 tx@Dict begin tx@NodeDict begin { 5.15974 2 div 4.78334 0.0 add 2
div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add 2.6 add } /TheNodeaF3 11 {
InitCnode  } NewNode end end
 1643 1053 a @beginspecial
@setspecial
 tx@Dict begin STP newpath 2.6 SLW 0. setgray  5.15974 2 div 4.78334
0.0 add 2 div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add CLW 2 div add 0
360 arc closepath gsave 2.6 SLW 0. setgray 0 setlinecap stroke  grestore
gsave 1.0 SLW 1. setgray stroke grestore end
 
@endspecial Fn(F)2007 1053 y
 tx@Dict begin tx@NodeDict begin { 2.88892 2 div 4.78334 0.0 add 2
div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add 2.6 add } /TheNodeaI4 11 {
InitCnode  } NewNode end end
 2007 1053 a
@beginspecial @setspecial
 tx@Dict begin STP newpath 2.6 SLW 0. setgray  2.88892 2 div 4.78334
0.0 add 2 div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add CLW 2 div add 0
360 arc closepath gsave 2.6 SLW 0. setgray 0 setlinecap stroke  grestore
gsave 1.0 SLW 1. setgray stroke grestore end
 
@endspecial Fn(I)2239 816
y
 tx@Dict begin tx@NodeDict begin { 3.98613 2 div 4.51111 0.0 add 2
div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add 0.8 add } /TheNodea34 11 {
InitCnode  } NewNode end end
 2239 816 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  3.98613 2 div 4.51111
0.0 add 2 div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add CLW 2 div add 0
360 arc closepath gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore
end
 
@endspecial Fn(3)2191
1288 y
 tx@Dict begin tx@NodeDict begin { 3.98613 2 div 4.51111 0.0 add 2
div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add 0.8 add } /TheNodea24 11 {
InitCnode  } NewNode end end
 2191 1288 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  3.98613 2 div 4.51111
0.0 add 2 div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add CLW 2 div add 0
360 arc closepath gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore
end
 
@endspecial
Fn(2)2427 1288 y
 tx@Dict begin tx@NodeDict begin { 3.98613 2 div 4.51111 0.0 add 2
div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add 0.8 add } /TheNodea14 11 {
InitCnode  } NewNode end end
 2427 1288 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  3.98613 2 div 4.51111
0.0 add 2 div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add CLW 2 div add 0
360 arc closepath gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore
end


@endspecial Fn(1)2569 887 y
 tx@Dict begin tx@NodeDict begin { 3.98613 2 div 4.51111 0.0 add 2
div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add 0.8 add } /TheNodea44 11 {
InitCnode  } NewNode end end
 2569 887 a @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  3.98613 2 div 4.51111
0.0 add 2 div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add CLW 2 div add 0
360 arc closepath gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore
end
 
@endspecial Fn(4)3179 1053 y
 tx@Dict begin tx@NodeDict begin { 5.15974 2 div 4.78334 0.0 add 2
div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add 2.6 add } /TheNodeaF4 11 {
InitCnode  } NewNode end end
 3179 1053 a
@beginspecial @setspecial
 tx@Dict begin STP newpath 2.6 SLW 0. setgray  5.15974 2 div 4.78334
0.0 add 2 div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add CLW 2 div add 0
360 arc closepath gsave 2.6 SLW 0. setgray 0 setlinecap stroke  grestore
gsave 1.0 SLW 1. setgray stroke grestore end
 
@endspecial Fn(F)365 1341
y
 tx@Dict begin gsave STV newpath 1.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 /TheNodeaI3 /TheNodea33 InitNC
{ NCLine  } if end gsave 1.0 SLW 0. setgray 0 setlinecap stroke  grestore
 grestore end
 365 1341 a 365 1341 a
 tx@Dict begin tx@NodeDict begin /t 0.5  def LPutCoor end PutBegin
 end
 365 1341 a 365 1341 a
 tx@Dict begin langle Rot  end
 365 1341
a 365 1341 a
 tx@Dict begin { 1.0 4.72495 3.87498 0.0 langle 90 add  langle  sub
Uput exch pop add a PtoC h1 add exch w1 add exch } PutCoor PutBegin
 end
 365 1341 a 345 1357 a Fv(a)365 1341 y
 tx@Dict begin PutEnd  end
 365
1341 a 365 1341 a
 tx@Dict begin langle neg Rot  end
 365 1341 a 365 1341 a
 tx@Dict begin PutEnd  end
 365 1341 a 365
1341 a
 tx@Dict begin gsave STV newpath 1.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 /TheNodeaI3 /TheNodea23 InitNC
{ NCLine  } if end gsave 1.0 SLW 0. setgray 0 setlinecap stroke  grestore
 grestore end
 365 1341 a 365 1341 a
 tx@Dict begin tx@NodeDict begin /t 0.5  def LPutCoor end PutBegin
 end
 365 1341 a 365 1341 a
 tx@Dict begin langle Rot  end
 365
1341 a 365 1341 a
 tx@Dict begin { 1.0 4.72495 5.49998 0.0 langle 90 add  langle  sub
Uput exch pop add a PtoC h1 add exch w1 add exch } PutCoor PutBegin
 end
 365 1341 a 345 1363 a Fv(b)365 1341
y
 tx@Dict begin PutEnd  end
 365 1341 a 365 1341 a
 tx@Dict begin langle neg Rot  end
 365 1341 a 365 1341 a
 tx@Dict begin PutEnd  end
 365 1341
a 365 1341 a
 tx@Dict begin gsave STV newpath 1.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 /TheNodea23 /TheNodea13 InitNC
{ NCLine  } if end gsave 1.0 SLW 0. setgray 0 setlinecap stroke  grestore
 grestore end
 365 1341 a 365 1341 a
 tx@Dict begin tx@NodeDict begin /t 0.5  def LPutCoor end PutBegin
 end
 365 1341 a 365 1341
a
 tx@Dict begin langle Rot  end
 365 1341 a 365 1341 a
 tx@Dict begin { 1.0 4.72495 5.49998 0.0 langle 90 add  langle  sub
Uput exch pop add a PtoC h1 add exch w1 add exch } PutCoor PutBegin
 end
 365 1341 a 345 1363 a Fv(b)365
1341 y
 tx@Dict begin PutEnd  end
 365 1341 a 365 1341 a
 tx@Dict begin langle neg Rot  end
 365 1341 a 365 1341 a
 tx@Dict begin PutEnd  end
 365
1341 a 365 1341 a
 tx@Dict begin gsave STV newpath 1.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 /TheNodea13 /TheNodeaF3 InitNC
{ GetAngle dup 5.  add /AngleA ED 5.  sub 180 add /AngleB ED 0.67 
0.67  NCCurve  } if end gsave 1.0 SLW 0. setgray 0 setlinecap stroke
 grestore  grestore end
 365 1341 a 365 1341 a
 tx@Dict begin tx@NodeDict begin /t 0.5  def LPutCoor end PutBegin
 end
 365 1341 a 365
1341 a
 tx@Dict begin langle Rot  end
 365 1341 a 365 1341 a
 tx@Dict begin { 1.0 37.79956 5.49998 0.0 langle 90 add  langle  sub
Uput exch pop add a PtoC h1 add exch w1 add exch } PutCoor PutBegin
 end
 365 1341 a 208 1363 a Fv(bcabbbcb)365
1341 y
 tx@Dict begin PutEnd  end
 365 1341 a 365 1341 a
 tx@Dict begin langle neg Rot  end
 365 1341 a 365 1341 a
 tx@Dict begin PutEnd  end
 365
1341 a 365 1341 a
 tx@Dict begin gsave STV newpath 1.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 /TheNodea13 /TheNodeaF3 InitNC
{ GetAngle dup -5.  add /AngleA ED -5.  sub 180 add /AngleB ED 0.67
 0.67  NCCurve  } if end gsave 1.0 SLW 0. setgray 0 setlinecap stroke
 grestore  grestore end
 365 1341 a 365 1341 a
 tx@Dict begin tx@NodeDict begin /t 0.5  def LPutCoor end PutBegin
 end
 365 1341 a 365
1341 a
 tx@Dict begin langle Rot  end
 365 1341 a 365 1341 a
 tx@Dict begin { 1.0 33.07462 5.49998 0.0 langle 90 sub  langle  sub
Uput exch pop add a PtoC h1 add exch w1 add exch } PutCoor PutBegin
 end
 365 1341 a 228 1363 a Fv(cabbbcb)365
1341 y
 tx@Dict begin PutEnd  end
 365 1341 a 365 1341 a
 tx@Dict begin langle neg Rot  end
 365 1341 a 365 1341 a
 tx@Dict begin PutEnd  end
 365
1341 a 365 1341 a
 tx@Dict begin gsave STV newpath 1.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 /TheNodea33 /TheNodeaF3 InitNC
{ NCLine  } if end gsave 1.0 SLW 0. setgray 0 setlinecap stroke  grestore
 grestore end
 365 1341 a 365 1341 a
 tx@Dict begin tx@NodeDict begin /t 0.5  def LPutCoor end PutBegin
 end
 365 1341 a 365
1341 a
 tx@Dict begin langle Rot  end
 365 1341 a 365 1341 a
 tx@Dict begin { 1.0 47.24945 5.49998 0.0 langle 90 add  langle  sub
Uput exch pop add a PtoC h1 add exch w1 add exch } PutCoor PutBegin
 end
 365 1341 a 169 1363 a Fv(bbbcabbbcb)365
1341 y
 tx@Dict begin PutEnd  end
 365 1341 a 365 1341 a
 tx@Dict begin langle neg Rot  end
 365 1341 a 365 1341 a
 tx@Dict begin PutEnd  end
 365
1341 a 365 1341 a
 tx@Dict begin gsave STV newpath 1.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 /TheNodea33 /TheNodeaF3 InitNC
{ tx@Dict begin /r 2.84544 def /Lineto { Arcto } def end /AngleA 90.
 def /AngleB 90.  def /armA 5.69046  def /armB 10.0  def NCAngles 
} if end gsave 1.0 SLW 0. setgray 0 setlinecap stroke  grestore  grestore
end
 365 1341 a 365 1341 a
 tx@Dict begin tx@NodeDict begin /t 1.5  def LPutCoor end PutBegin
 end
 365 1341 a 365
1341 a
 tx@Dict begin { 1.0 51.9744 5.49998 0.0 langle 90 add  Uput exch pop
add a PtoC h1 add exch w1 add exch } PutCoor PutBegin  end
 365 1341 a 150 1363 a Fv(abbbcabbbcb)365 1341
y
 tx@Dict begin PutEnd  end
 365 1341 a 365 1341 a
 tx@Dict begin PutEnd  end
 365 1341 a 365 1341 a
 tx@Dict begin gsave STV newpath 1.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 /TheNodeaI3 /TheNodeaF3 InitNC
{ tx@Dict begin /r 2.84544 def /Lineto { Arcto } def end /AngleA -90.
 def /AngleB -90.  def /armA 48.36957  def /armB 10.0  def NCAngles
 } if end gsave 1.0 SLW 0. setgray 0 setlinecap stroke  grestore  grestore
end
 365 1341
a 365 1341 a
 tx@Dict begin tx@NodeDict begin /t 1.5  def LPutCoor end PutBegin
 end
 365 1341 a 365 1341 a
 tx@Dict begin { 1.0 33.07462 5.49998 0.0 langle 90 add  Uput exch
pop add a PtoC h1 add exch w1 add exch } PutCoor PutBegin  end
 365 1341 a 228 1363
a Fv(cabbbcb)365 1341 y
 tx@Dict begin PutEnd  end
 365 1341 a 365 1341 a
 tx@Dict begin PutEnd  end
 365 1341
a 365 1341 a
 tx@Dict begin gsave STV newpath 1.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 /TheNodea23 /TheNodeaF3 InitNC
{ tx@Dict begin /r 2.84544 def /Lineto { Arcto } def end /AngleA -90.
 def /AngleB -90.  def /armA 11.38092  def /armB 10.0  def NCAngles
 } if end gsave 1.0 SLW 0. setgray 0 setlinecap stroke  grestore  grestore
end
 365 1341 a 365 1341 a
 tx@Dict begin tx@NodeDict begin /t 1.5  def LPutCoor end PutBegin
 end
 365 1341 a 365 1341
a
 tx@Dict begin { 1.0 33.07462 5.49998 0.0 langle 90 add  Uput exch
pop add a PtoC h1 add exch w1 add exch } PutCoor PutBegin  end
 365 1341 a 228 1363 a Fv(cabbbcb)365 1341 y
 tx@Dict begin PutEnd  end
 365 1341
a 365 1341 a
 tx@Dict begin PutEnd  end
 365 1341 a 365 1341 a
 tx@Dict begin gsave STV newpath 1.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 /TheNodeaI4 /TheNodea34 InitNC
{ NCLine  } if end gsave 1.0 SLW 0. setgray 0 setlinecap stroke  grestore
 grestore end
 365 1341 a 365 1341
a
 tx@Dict begin tx@NodeDict begin /t 0.5  def LPutCoor end PutBegin
 end
 365 1341 a 365 1341 a
 tx@Dict begin langle Rot  end
 365 1341 a 365 1341 a
 tx@Dict begin { 1.0 4.72495 3.87498 0.0 langle 90 add  langle  sub
Uput exch pop add a PtoC h1 add exch w1 add exch } PutCoor PutBegin
 end
 365 1341
a 345 1357 a Fv(a)365 1341 y
 tx@Dict begin PutEnd  end
 365 1341 a 365 1341 a
 tx@Dict begin langle neg Rot  end
 365
1341 a 365 1341 a
 tx@Dict begin PutEnd  end
 365 1341 a 365 1341 a
 tx@Dict begin gsave STV newpath 1.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 /TheNodeaI4 /TheNodea24 InitNC
{ NCLine  } if end gsave 1.0 SLW 0. setgray 0 setlinecap stroke  grestore
 grestore end
 365 1341 a 365
1341 a
 tx@Dict begin tx@NodeDict begin /t 0.5  def LPutCoor end PutBegin
 end
 365 1341 a 365 1341 a
 tx@Dict begin langle Rot  end
 365 1341 a 365 1341 a
 tx@Dict begin { 1.0 4.72495 5.49998 0.0 langle 90 add  langle  sub
Uput exch pop add a PtoC h1 add exch w1 add exch } PutCoor PutBegin
 end
 365
1341 a 345 1363 a Fv(b)365 1341 y
 tx@Dict begin PutEnd  end
 365 1341 a 365 1341
a
 tx@Dict begin langle neg Rot  end
 365 1341 a 365 1341 a
 tx@Dict begin PutEnd  end
 365 1341 a 365 1341 a
 tx@Dict begin gsave STV newpath 1.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 /TheNodea24 /TheNodea14 InitNC
{ NCLine  } if end gsave 1.0 SLW 0. setgray 0 setlinecap stroke  grestore
 grestore end
 365 1341
a 365 1341 a
 tx@Dict begin tx@NodeDict begin /t 0.5  def LPutCoor end PutBegin
 end
 365 1341 a 365 1341 a
 tx@Dict begin langle Rot  end
 365 1341 a 365 1341
a
 tx@Dict begin { 1.0 4.72495 5.49998 0.0 langle 90 add  langle  sub
Uput exch pop add a PtoC h1 add exch w1 add exch } PutCoor PutBegin
 end
 365 1341 a 345 1363 a Fv(b)365 1341 y
 tx@Dict begin PutEnd  end
 365 1341 a 365
1341 a
 tx@Dict begin langle neg Rot  end
 365 1341 a 365 1341 a
 tx@Dict begin PutEnd  end
 365 1341 a 365 1341 a
 tx@Dict begin gsave STV newpath 1.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 /TheNodea14 /TheNodeaF4 InitNC
{ GetAngle dup 5.  add /AngleA ED 5.  sub 180 add /AngleB ED 0.67 
0.67  NCCurve  } if end gsave 1.0 SLW 0. setgray 0 setlinecap stroke
 grestore  grestore end
 365
1341 a 365 1341 a
 tx@Dict begin tx@NodeDict begin /t 0.5  def LPutCoor end PutBegin
 end
 365 1341 a 365 1341 a
 tx@Dict begin langle Rot  end
 365 1341 a 365
1341 a
 tx@Dict begin { 1.0 37.79956 5.49998 0.0 langle 90 add  langle  sub
Uput exch pop add a PtoC h1 add exch w1 add exch } PutCoor PutBegin
 end
 365 1341 a 208 1363 a Fv(bcabbbcb)365 1341 y
 tx@Dict begin PutEnd  end
 365
1341 a 365 1341 a
 tx@Dict begin langle neg Rot  end
 365 1341 a 365 1341 a
 tx@Dict begin PutEnd  end
 365 1341 a 365
1341 a
 tx@Dict begin gsave STV newpath 1.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 /TheNodea14 /TheNodeaF4 InitNC
{ GetAngle dup -5.  add /AngleA ED -5.  sub 180 add /AngleB ED 0.67
 0.67  NCCurve  } if end gsave 1.0 SLW 0. setgray 0 setlinecap stroke
 grestore  grestore end
 365 1341 a 365 1341 a
 tx@Dict begin tx@NodeDict begin /t 0.5  def LPutCoor end PutBegin
 end
 365 1341 a 365 1341 a
 tx@Dict begin langle Rot  end
 365
1341 a 365 1341 a
 tx@Dict begin { 1.0 33.07462 5.49998 0.0 langle 90 sub  langle  sub
Uput exch pop add a PtoC h1 add exch w1 add exch } PutCoor PutBegin
 end
 365 1341 a 228 1363 a Fv(cabbbcb)365
1341 y
 tx@Dict begin PutEnd  end
 365 1341 a 365 1341 a
 tx@Dict begin langle neg Rot  end
 365 1341 a 365 1341 a
 tx@Dict begin PutEnd  end
 365
1341 a 365 1341 a
 tx@Dict begin gsave STV newpath 1.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 /TheNodeaI4 /TheNodeaF4 InitNC
{ tx@Dict begin /r 2.84544 def /Lineto { Arcto } def end /AngleA -90.
 def /AngleB -90.  def /armA 48.36957  def /armB 10.0  def NCAngles
 } if end gsave 1.0 SLW 0. setgray 0 setlinecap stroke  grestore  grestore
end
 365 1341 a 365 1341 a
 tx@Dict begin tx@NodeDict begin /t 1.5  def LPutCoor end PutBegin
 end
 365 1341 a 365
1341 a
 tx@Dict begin { 1.0 33.07462 5.49998 0.0 langle 90 add  Uput exch
pop add a PtoC h1 add exch w1 add exch } PutCoor PutBegin  end
 365 1341 a 228 1363 a Fv(cabbbcb)365 1341 y
 tx@Dict begin PutEnd  end
 365
1341 a 365 1341 a
 tx@Dict begin PutEnd  end
 365 1341 a 365 1341 a
 tx@Dict begin gsave STV newpath 1.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 /TheNodea24 /TheNodeaF4 InitNC
{ tx@Dict begin /r 2.84544 def /Lineto { Arcto } def end /AngleA -90.
 def /AngleB -90.  def /armA 11.38092  def /armB 10.0  def NCAngles
 } if end gsave 1.0 SLW 0. setgray 0 setlinecap stroke  grestore  grestore
end
 365 1341 a 365
1341 a
 tx@Dict begin tx@NodeDict begin /t 1.5  def LPutCoor end PutBegin
 end
 365 1341 a 365 1341 a
 tx@Dict begin { 1.0 33.07462 5.49998 0.0 langle 90 add  Uput exch
pop add a PtoC h1 add exch w1 add exch } PutCoor PutBegin  end
 365 1341 a 228 1363 a Fv(cabbbcb)365
1341 y
 tx@Dict begin PutEnd  end
 365 1341 a 365 1341 a
 tx@Dict begin PutEnd  end
 365 1341 a 365 1341 a
 tx@Dict begin gsave STV newpath 1.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 /TheNodea34 /TheNodea44 InitNC
{ NCLine  } if end gsave 1.0 SLW 0. setgray 0 setlinecap stroke  grestore
 grestore end
 365
1341 a 365 1341 a
 tx@Dict begin tx@NodeDict begin /t 0.5  def LPutCoor end PutBegin
 end
 365 1341 a 365 1341 a
 tx@Dict begin langle Rot  end
 365 1341 a 365
1341 a
 tx@Dict begin { 1.0 18.89978 5.49998 0.0 langle 90 add  langle  sub
Uput exch pop add a PtoC h1 add exch w1 add exch } PutCoor PutBegin
 end
 365 1341 a 287 1363 a Fv(bbbc)365 1341 y
 tx@Dict begin PutEnd  end
 365 1341
a 365 1341 a
 tx@Dict begin langle neg Rot  end
 365 1341 a 365 1341 a
 tx@Dict begin PutEnd  end
 365 1341 a 365 1341
a
 tx@Dict begin gsave STV newpath 1.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 /TheNodea34 /TheNodeaF4 InitNC
{ tx@Dict begin /r 2.84544 def /Lineto { Arcto } def end /AngleA 90.
 def /AngleB 90.  def /armA 5.69046  def /armB 10.0  def NCAngles 
} if end gsave 1.0 SLW 0. setgray 0 setlinecap stroke  grestore  grestore
end
 365 1341 a 365 1341 a
 tx@Dict begin tx@NodeDict begin /t 1.5  def LPutCoor end PutBegin
 end
 365 1341 a 365 1341 a
 tx@Dict begin { 1.0 51.9744 5.49998 0.0 langle 90 add  Uput exch pop
add a PtoC h1 add exch w1 add exch } PutCoor PutBegin  end
 365 1341
a 150 1363 a Fv(abbbcabbbcb)365 1341 y
 tx@Dict begin PutEnd  end
 365 1341 a 365
1341 a
 tx@Dict begin PutEnd  end
 365 1341 a 365 1341 a
 tx@Dict begin gsave STV newpath 1.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 /TheNodea44 /TheNodeaF4 InitNC
{ GetAngle dup 5.  add /AngleA ED 5.  sub 180 add /AngleB ED 0.67 
0.67  NCCurve  } if end gsave 1.0 SLW 0. setgray 0 setlinecap stroke
 grestore  grestore end
 365 1341 a 365 1341 a
 tx@Dict begin tx@NodeDict begin /t 0.5  def LPutCoor end PutBegin
 end
 365
1341 a 365 1341 a
 tx@Dict begin langle Rot  end
 365 1341 a 365 1341 a
 tx@Dict begin { 1.0 28.34967 5.49998 0.0 langle 90 add  langle  sub
Uput exch pop add a PtoC h1 add exch w1 add exch } PutCoor PutBegin
 end
 365 1341 a 248
1363 a Fv(abbbcb)365 1341 y
 tx@Dict begin PutEnd  end
 365 1341 a 365 1341 a
 tx@Dict begin langle neg Rot  end
 365
1341 a 365 1341 a
 tx@Dict begin PutEnd  end
 365 1341 a 365 1341 a
 tx@Dict begin gsave STV newpath 1.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 /TheNodea44 /TheNodeaF4 InitNC
{ GetAngle dup -5.  add /AngleA ED -5.  sub 180 add /AngleB ED 0.67
 0.67  NCCurve  } if end gsave 1.0 SLW 0. setgray 0 setlinecap stroke
 grestore  grestore end
 365 1341 a 365
1341 a
 tx@Dict begin tx@NodeDict begin /t 0.5  def LPutCoor end PutBegin
 end
 365 1341 a 365 1341 a
 tx@Dict begin langle Rot  end
 365 1341 a 365 1341 a
 tx@Dict begin { 1.0 4.72495 5.49998 0.0 langle 90 sub  langle  sub
Uput exch pop add a PtoC h1 add exch w1 add exch } PutCoor PutBegin
 end
 365
1341 a 345 1363 a Fv(b)365 1341 y
 tx@Dict begin PutEnd  end
 365 1341 a 365 1341
a
 tx@Dict begin langle neg Rot  end
 365 1341 a 365 1341 a
 tx@Dict begin PutEnd  end
 365 1341 a 265 x Fm(Fig.)15 b(10.)67
b Fw(Example)62 b(of)h(the)g(execution)f(of)i Fl(SlowFind)e
Fw(during)h(the)f(construction)h(of)365 1706 y Fl(CD)n(A)-8
b(WG)p Fw(\()p Fv(aabbbcabbbcb)p Fw(\).)43 b(F)-6 b(or)39
b(the)g(insertion)i(of)f Fl(suf)2078 1725 y Fe(6)2113
1706 y Fw(=)p Fv(abbbcb)p Fw(,)g(w)n(e)g(ha)n(v)n(e)f
Fl(he)l(ad)2935 1714 y Fe(6)2970 1706 y Fw(=)p Fv(abbbc)p
Fw(.)365 1805 y(Since)d(the)f(path)h(lab)r(eled)g(b)n(y)f
Fv(abbbc)i Fw(ends)e(in)h(the)f(middle)g(of)h(the)g(edge)g(\(3,)p
Fv(bbbcabbbcb)p Fw(,F\),)365 1905 y(state)30 b(4)f(is)g(created,)h
(splitting)f(the)f(edge)i(in)n(to)e(\(3,)p Fv(bbbc)p
Fw(,4\))j(and)e(\(4,)p Fv(abbbcb)p Fw(,F\).)i(A)d(new)h(edge)h(is)365
2005 y(created,)d(\(4,)p Fv(b)p Fw(,F\).)490 2307 y Fy(A)n(t)c(step)f
Fr(i)p Fy(,)h(the)g(preliminary)e(algorithm)h(has)g(to)g(insert)g
Fs(tail)2384 2319 y Fo(i)2434 2307 y Fy(from)h(the)f(lo)r(cus)h(of)f
Fs(he)l(ad)3220 2319 y Fo(i)365 2407 y Fy(in)n(to)h Fq(A)595
2419 y Fo(i)p Fp(\000)p Fn(1)731 2407 y Fy(\(see)g(Figure)h(9\).)f(T)-7
b(o)22 b(do)h(so,)f(the)h(con)n(tracted)f(lo)r(cus)h(of)f
Fs(he)l(ad)2619 2419 y Fo(i)2669 2407 y Fy(in)h Fq(A)2828
2419 y Fo(i)p Fp(\000)p Fn(1)2963 2407 y Fy(is)g(found)365
2506 y(with)k(the)g(help)g(of)g(function)g Fs(SlowFind)h
Fy(that)f(compares)e(letter-to-letter)g(the)i(righ)n(t)f(path)365
2606 y(of)h Fq(A)525 2618 y Fo(i)p Fp(\000)p Fn(1)665
2606 y Fy(to)g Fs(suf)870 2626 y Fo(i)898 2606 y Fy(.)g(An)g(example)g
(of)f(execution)h(of)g(this)g(function)h(is)f(sho)n(wn)f(in)h(Figure)d
(10.)365 2706 y(This)36 b(part)e(is)i(similar)e(to)h(the)h(corresp)r
(onding)e(McCreigh)n(t's)g(pro)r(cedure,)g(except)i(on)f(a)365
2805 y(p)r(oin)n(t)27 b(discussed)f(b)r(elo)n(w)h(\(redirection)f(of)g
(edges\).)h(If)g(there)f(is)h(a)f(state)h(at)f(the)h(end)g(of)g(the)365
2905 y(path,)33 b(it)g(is)f(the)h(lo)r(cus)f(of)g Fs(he)l(ad)1387
2917 y Fo(i)1414 2905 y Fy(.)h(Otherwise)e(it)i(is)g(created)e(at)i
(the)f(middle)h(of)g(the)g(last)365 3005 y(encoun)n(tered)27
b(edge)g(b)n(y)g(splitting)h(it.)g(In)g(an)n(y)e(case,)h(an)g(edge)g
(lab)r(eled)h(b)n(y)f Fs(tail)2845 3017 y Fo(i)2901 3005
y Fy(is)g(created)365 3104 y(from)h(the)g(lo)r(cus)f(of)g
Fs(he)l(ad)1171 3116 y Fo(i)1226 3104 y Fy(to)g(F.)h(The)g(preliminary)
f(algorithm)f(is)i(giv)n(en)e(b)r(elo)n(w.)p 909 3244
1794 4 v 909 4390 4 1146 v 963 3333 a Fu(Preliminary)32
b(Algorithm)963 3424 y Fw(1.)88 b Fu(F)-7 b(or)30 b(all)c
Fl(suf)1483 3443 y Fd(i)1534 3424 y Fw(\()p Fg(i)c Ff(2)p
Fw([0..n-1]\))27 b Fu(Do)963 3516 y Fw(2.)236 b(\()p
Fg(q)s(;)13 b(\015)t Fw(\))25 b Ff( )g Fl(SlowFind)p
Fw(\()p Fg(I)6 b Fw(\);)963 3607 y(3.)236 b Fu(If)26
b Fw(\()p Fg(\015)f Fw(=)c Fg(")p Fw(\))k Fu(Then)963
3698 y Fw(4.)383 b(insert)26 b(\()p Fg(q)s Fw(,)p Fl(tail)1815
3706 y Fd(i)1841 3698 y Fw(,F\);)963 3790 y(5.)236 b
Fu(Else)963 3881 y Fw(6.)383 b(create)26 b Fg(v)j Fw(lo)r(cus)d(of)h
Fl(he)l(ad)2128 3889 y Fd(i)2180 3881 y Fw(splitting)f(\()p
Fg(q)s(;)13 b(\015)t Fw(])1405 3972 y(and)25 b(insert)h(\()p
Fg(v)s Fw(,)p Fl(tail)1967 3980 y Fd(i)1993 3972 y Fw(,F\);)1405
4064 y(or)g(redirect)g(\()p Fg(q)s(;)13 b(\015)t Fw(])26
b(on)n(to)f Fg(v)s Fw(,)1405 4155 y(the)g(last)i(created)f(state;)963
4246 y(7.)88 b Fu(End)30 b(F)-7 b(or)30 b(all)p Fw(;)963
4338 y(8.)88 b(mark)25 b(terminal)g(states;)p 2700 4390
V 909 4393 1794 4 v 490 4565 a Fy(The)20 b(function)g
Fs(SlowFind)i Fy(returns)d(a)h(pair)f(\()p Fr(q)s(;)14
b(\015)5 b Fy(\))20 b(suc)n(h)g(that)g Fr(q)j Fy(is)d(the)g(last)g
(encoun)n(tered)365 4664 y(state)27 b(on)f(the)h(path)g
Fs(he)l(ad)1179 4676 y Fo(i)1206 4664 y Fy(,)g(state)g(that)g(is)f(the)
h(represen)n(tativ)n(e)e(of)i Fs(he)l(ad)2650 4676 y
Fo(i)2678 4664 y Fr(\015)2726 4634 y Fp(\000)p Fn(1)2814
4664 y Fy(.)g(This)g(k)n(eeps)365 4764 y(accessible)e(the)h(transition)
f(that)g(ma)n(y)g(b)r(e)h(split)g(if)g(the)g(state)f
Fr(q)k Fy(is)d(not)f(the)h(exact)f(lo)r(cus)g(of)365
4863 y Fs(he)l(ad)527 4875 y Fo(i)554 4863 y Fy(,)j Fs(i.e.)h
Fy(if)f Fr(\015)g Fq(6)p Fy(=)23 b Fr(")p Fy(.)p eop
%%Page: 14 14
14 13 bop 563 954 a
 tx@Dict begin tx@NodeDict begin {  } /TheNodeC 16 { .5 10.39525 3.8
false .5 11.04514 InitRnode  } NewNode end end
 563 954 a 31 w @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  0. true 3.8 neg 3.8
neg 7.24513 10.39525 .5 Frame  gsave 0.8 SLW 0. setgray 0 setlinecap
stroke  grestore end


@endspecial Fr(i)2145 954 y
 tx@Dict begin tx@NodeDict begin {  } /TheNodeD 16 { .5 10.39525 3.8
false .5 14.49026 InitRnode  } NewNode end end
 2145 954 a 32 w @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  0. true 3.8 neg 3.8
neg 10.69026 10.39525 .5 Frame  gsave 0.8 SLW 0. setgray 0 setlinecap
stroke  grestore end
 
@endspecial Fr(ii)669 1408 y
 tx@Dict begin tx@NodeDict begin { 2.88892 2 div 4.78334 0.0 add 2
div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add 2.6 add } /TheNodeaI3 11 {
InitCnode  } NewNode end end
 669 1408 a
@beginspecial @setspecial
 tx@Dict begin STP newpath 2.6 SLW 0. setgray  2.88892 2 div 4.78334
0.0 add 2 div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add CLW 2 div add 0
360 arc closepath gsave 2.6 SLW 0. setgray 0 setlinecap stroke  grestore
gsave 1.0 SLW 1. setgray stroke grestore end
 
@endspecial Fn(I)900 1170
y
 tx@Dict begin tx@NodeDict begin { 3.98613 2 div 4.51111 0.0 add 2
div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add 0.8 add } /TheNodea33 11 {
InitCnode  } NewNode end end
 900 1170 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  3.98613 2 div 4.51111
0.0 add 2 div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add CLW 2 div add 0
360 arc closepath gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore
end
 
@endspecial Fn(3)853
1643 y
 tx@Dict begin tx@NodeDict begin { 3.98613 2 div 4.51111 0.0 add 2
div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add 0.8 add } /TheNodea23 11 {
InitCnode  } NewNode end end
 853 1643 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  3.98613 2 div 4.51111
0.0 add 2 div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add CLW 2 div add 0
360 arc closepath gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore
end
 
@endspecial
Fn(2)1089 1761 y
 tx@Dict begin tx@NodeDict begin { 3.98613 2 div 4.51111 0.0 add 2
div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add 0.8 add } /TheNodea13 11 {
InitCnode  } NewNode end end
 1089 1761 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  3.98613 2 div 4.51111
0.0 add 2 div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add CLW 2 div add 0
360 arc closepath gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore
end


@endspecial Fn(1)1326 1407 y
 tx@Dict begin tx@NodeDict begin { 3.98613 2 div 4.51111 0.0 add 2
div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add 0.8 add } /TheNodea43 11 {
InitCnode  } NewNode end end
 1326 1407 a @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  3.98613 2 div 4.51111
0.0 add 2 div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add CLW 2 div add 0
360 arc closepath gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore
end
 
@endspecial Fn(4)1959 1408 y
 tx@Dict begin tx@NodeDict begin { 5.15974 2 div 4.78334 0.0 add 2
div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add 2.6 add } /TheNodeaF3 11 {
InitCnode  } NewNode end end
 1959 1408 a
@beginspecial @setspecial
 tx@Dict begin STP newpath 2.6 SLW 0. setgray  5.15974 2 div 4.78334
0.0 add 2 div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add CLW 2 div add 0
360 arc closepath gsave 2.6 SLW 0. setgray 0 setlinecap stroke  grestore
gsave 1.0 SLW 1. setgray stroke grestore end
 
@endspecial Fn(F)2322 1408
y
 tx@Dict begin tx@NodeDict begin { 2.88892 2 div 4.78334 0.0 add 2
div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add 2.6 add } /TheNodeaI4 11 {
InitCnode  } NewNode end end
 2322 1408 a @beginspecial @setspecial
 tx@Dict begin STP newpath 2.6 SLW 0. setgray  2.88892 2 div 4.78334
0.0 add 2 div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add CLW 2 div add 0
360 arc closepath gsave 2.6 SLW 0. setgray 0 setlinecap stroke  grestore
gsave 1.0 SLW 1. setgray stroke grestore end
 
@endspecial
Fn(I)2554 1170 y
 tx@Dict begin tx@NodeDict begin { 3.98613 2 div 4.51111 0.0 add 2
div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add 0.8 add } /TheNodea34 11 {
InitCnode  } NewNode end end
 2554 1170 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  3.98613 2 div 4.51111
0.0 add 2 div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add CLW 2 div add 0
360 arc closepath gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore
end


@endspecial Fn(3)2460 1643 y
 tx@Dict begin tx@NodeDict begin { 3.98613 2 div 4.51111 0.0 add 2
div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add 0.8 add } /TheNodea24 11 {
InitCnode  } NewNode end end
 2460 1643 a @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  3.98613 2 div 4.51111
0.0 add 2 div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add CLW 2 div add 0
360 arc closepath gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore
end
 
@endspecial Fn(2)2696 1643 y
 tx@Dict begin tx@NodeDict begin { 3.98613 2 div 4.51111 0.0 add 2
div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add 0.8 add } /TheNodea14 11 {
InitCnode  } NewNode end end
 2696 1643 a
@beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  3.98613 2 div 4.51111
0.0 add 2 div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add CLW 2 div add 0
360 arc closepath gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore
end
 
@endspecial Fn(1)2885 1170
y
 tx@Dict begin tx@NodeDict begin { 3.98613 2 div 4.51111 0.0 add 2
div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add 0.8 add } /TheNodea44 11 {
InitCnode  } NewNode end end
 2885 1170 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  3.98613 2 div 4.51111
0.0 add 2 div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add CLW 2 div add 0
360 arc closepath gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore
end
 
@endspecial
Fn(4)2932 1643 y
 tx@Dict begin tx@NodeDict begin { 3.98613 2 div 4.51111 0.0 add 2
div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add 0.8 add } /TheNodea54 11 {
InitCnode  } NewNode end end
 2932 1643 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  3.98613 2 div 4.51111
0.0 add 2 div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add CLW 2 div add 0
360 arc closepath gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore
end


@endspecial Fn(5)3494 1408 y
 tx@Dict begin tx@NodeDict begin { 5.15974 2 div 4.78334 0.0 add 2
div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add 2.6 add } /TheNodeaF4 11 {
InitCnode  } NewNode end end
 3494 1408 a @beginspecial
@setspecial
 tx@Dict begin STP newpath 2.6 SLW 0. setgray  5.15974 2 div 4.78334
0.0 add 2 div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add CLW 2 div add 0
360 arc closepath gsave 2.6 SLW 0. setgray 0 setlinecap stroke  grestore
gsave 1.0 SLW 1. setgray stroke grestore end
 
@endspecial Fn(F)681 1695 y
 tx@Dict begin gsave STV newpath 1.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 /TheNodeaI3 /TheNodea33 InitNC
{ NCLine  } if end gsave 1.0 SLW 0. setgray 0 setlinecap stroke  grestore
 grestore end
 681 1695 a 681
1695 a
 tx@Dict begin tx@NodeDict begin /t 0.5  def LPutCoor end PutBegin
 end
 681 1695 a 681 1695 a
 tx@Dict begin langle Rot  end
 681 1695 a 681 1695 a
 tx@Dict begin { 1.0 4.72495 3.87498 0.0 langle 90 add  langle  sub
Uput exch pop add a PtoC h1 add exch w1 add exch } PutCoor PutBegin
 end
 681
1695 a 661 1711 a Fv(a)681 1695 y
 tx@Dict begin PutEnd  end
 681 1695 a 681 1695
a
 tx@Dict begin langle neg Rot  end
 681 1695 a 681 1695 a
 tx@Dict begin PutEnd  end
 681 1695 a 681 1695 a
 tx@Dict begin gsave STV newpath 1.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 /TheNodeaI3 /TheNodea23 InitNC
{ NCLine  } if end gsave 1.0 SLW 0. setgray 0 setlinecap stroke  grestore
 grestore end
 681 1695
a 681 1695 a
 tx@Dict begin tx@NodeDict begin /t 0.5  def LPutCoor end PutBegin
 end
 681 1695 a 681 1695 a
 tx@Dict begin langle Rot  end
 681 1695 a 681 1695
a
 tx@Dict begin { 1.0 4.72495 5.49998 0.0 langle 90 sub  langle  sub
Uput exch pop add a PtoC h1 add exch w1 add exch } PutCoor PutBegin
 end
 681 1695 a 661 1718 a Fv(b)681 1695 y
 tx@Dict begin PutEnd  end
 681 1695 a 681
1695 a
 tx@Dict begin langle neg Rot  end
 681 1695 a 681 1695 a
 tx@Dict begin PutEnd  end
 681 1695 a 681 1695 a
 tx@Dict begin gsave STV newpath 1.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 /TheNodeaI3 /TheNodea43 InitNC
{ NCLine  } if end gsave 1.0 SLW 0. setgray 0 setlinecap stroke  grestore
 grestore end
 681
1695 a 681 1695 a
 tx@Dict begin tx@NodeDict begin /t 0.5  def LPutCoor end PutBegin
 end
 681 1695 a 681 1695 a
 tx@Dict begin langle Rot  end
 681 1695 a 681
1695 a
 tx@Dict begin { 1.0 4.72495 3.87498 0.0 langle 90 add  langle  sub
Uput exch pop add a PtoC h1 add exch w1 add exch } PutCoor PutBegin
 end
 681 1695 a 661 1711 a Fv(c)681 1695 y
 tx@Dict begin PutEnd  end
 681 1695
a 681 1695 a
 tx@Dict begin langle neg Rot  end
 681 1695 a 681 1695 a
 tx@Dict begin PutEnd  end
 681 1695 a 681 1695
a
 tx@Dict begin gsave STV newpath 1.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 /TheNodea23 /TheNodea13 InitNC
{ NCLine  } if end gsave 1.0 SLW 0. setgray 0 setlinecap stroke  grestore
 grestore end
 681 1695 a 681 1695 a
 tx@Dict begin tx@NodeDict begin /t 0.5  def LPutCoor end PutBegin
 end
 681 1695 a 681 1695 a
 tx@Dict begin langle Rot  end
 681 1695
a 681 1695 a
 tx@Dict begin { 1.0 4.72495 5.49998 0.0 langle 90 sub  langle  sub
Uput exch pop add a PtoC h1 add exch w1 add exch } PutCoor PutBegin
 end
 681 1695 a 661 1718 a Fv(b)681 1695 y
 tx@Dict begin PutEnd  end
 681
1695 a 681 1695 a
 tx@Dict begin langle neg Rot  end
 681 1695 a 681 1695 a
 tx@Dict begin PutEnd  end
 681 1695 a 681
1695 a
 tx@Dict begin gsave STV newpath 1.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 /TheNodea23 /TheNodea43 InitNC
{ NCLine  } if end gsave 1.0 SLW 0. setgray 0 setlinecap stroke  grestore
 grestore end
 681 1695 a 681 1695 a
 tx@Dict begin tx@NodeDict begin /t 0.5  def LPutCoor end PutBegin
 end
 681 1695 a 681 1695 a
 tx@Dict begin langle Rot  end
 681
1695 a 681 1695 a
 tx@Dict begin { 1.0 4.72495 3.87498 0.0 langle 90 add  langle  sub
Uput exch pop add a PtoC h1 add exch w1 add exch } PutCoor PutBegin
 end
 681 1695 a 661 1711 a Fv(c)681 1695
y
 tx@Dict begin PutEnd  end
 681 1695 a 681 1695 a
 tx@Dict begin langle neg Rot  end
 681 1695 a 681 1695 a
 tx@Dict begin PutEnd  end
 681 1695
a 681 1695 a
 tx@Dict begin gsave STV newpath 1.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 /TheNodea33 /TheNodea43 InitNC
{ NCLine  } if end gsave 1.0 SLW 0. setgray 0 setlinecap stroke  grestore
 grestore end
 681 1695 a 681 1695 a
 tx@Dict begin tx@NodeDict begin /t 0.5  def LPutCoor end PutBegin
 end
 681 1695 a 681 1695
a
 tx@Dict begin langle Rot  end
 681 1695 a 681 1695 a
 tx@Dict begin { 1.0 18.89978 5.49998 0.0 langle 90 add  langle  sub
Uput exch pop add a PtoC h1 add exch w1 add exch } PutCoor PutBegin
 end
 681 1695 a 602 1718 a Fv(bbbc)681
1695 y
 tx@Dict begin PutEnd  end
 681 1695 a 681 1695 a
 tx@Dict begin langle neg Rot  end
 681 1695 a 681 1695 a
 tx@Dict begin PutEnd  end
 681
1695 a 681 1695 a
 tx@Dict begin gsave STV newpath 1.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 /TheNodea13 /TheNodea43 InitNC
{ GetAngle dup 5.  add /AngleA ED 5.  sub 180 add /AngleB ED 0.67 
0.67  NCCurve  } if end gsave 1.0 SLW 0. setgray 0 setlinecap stroke
 grestore  grestore end
 681 1695 a 681 1695 a
 tx@Dict begin tx@NodeDict begin /t 0.5  def LPutCoor end PutBegin
 end
 681 1695 a 681
1695 a
 tx@Dict begin langle Rot  end
 681 1695 a 681 1695 a
 tx@Dict begin { 1.0 9.44989 5.49998 0.0 langle 90 add  langle  sub
Uput exch pop add a PtoC h1 add exch w1 add exch } PutCoor PutBegin
 end
 681 1695 a 642 1718 a Fv(bc)681
1695 y
 tx@Dict begin PutEnd  end
 681 1695 a 681 1695 a
 tx@Dict begin langle neg Rot  end
 681 1695 a 681 1695 a
 tx@Dict begin PutEnd  end
 681
1695 a 681 1695 a
 tx@Dict begin gsave STV newpath 1.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 /TheNodea13 /TheNodea43 InitNC
{ GetAngle dup -5.  add /AngleA ED -5.  sub 180 add /AngleB ED 0.67
 0.67  NCCurve  } if end gsave 1.0 SLW 0. setgray 0 setlinecap stroke
 grestore  grestore end
 681 1695 a 681 1695 a
 tx@Dict begin tx@NodeDict begin /t 0.5  def LPutCoor end PutBegin
 end
 681 1695 a 681
1695 a
 tx@Dict begin langle Rot  end
 681 1695 a 681 1695 a
 tx@Dict begin { 1.0 4.72495 3.87498 0.0 langle 90 sub  langle  sub
Uput exch pop add a PtoC h1 add exch w1 add exch } PutCoor PutBegin
 end
 681 1695 a 661 1711 a Fv(c)681
1695 y
 tx@Dict begin PutEnd  end
 681 1695 a 681 1695 a
 tx@Dict begin langle neg Rot  end
 681 1695 a 681 1695 a
 tx@Dict begin PutEnd  end
 681
1695 a 681 1695 a
 tx@Dict begin gsave STV newpath 1.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 /TheNodea33 /TheNodeaF3 InitNC
{ tx@Dict begin /r 2.84544 def /Lineto { Arcto } def end /AngleA 90.
 def /AngleB 90.  def /armA 5.69046  def /armB 10.0  def NCAngles 
} if end gsave 1.0 SLW 0. setgray 0 setlinecap stroke  grestore  grestore
end
 681 1695 a 681 1695 a
 tx@Dict begin tx@NodeDict begin /t 1.5  def LPutCoor end PutBegin
 end
 681 1695 a 681
1695 a
 tx@Dict begin { 1.0 61.42429 5.49998 0.0 langle 90 add  Uput exch
pop add a PtoC h1 add exch w1 add exch } PutCoor PutBegin  end
 681 1695 a 426 1718 a Fv(abbbcabbbcbbc)681 1695
y
 tx@Dict begin PutEnd  end
 681 1695 a 681 1695 a
 tx@Dict begin PutEnd  end
 681 1695 a 681 1695 a
 tx@Dict begin gsave STV newpath 1.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 /TheNodea43 /TheNodeaF3 InitNC
{ GetAngle dup 5.  add /AngleA ED 5.  sub 180 add /AngleB ED 0.67 
0.67  NCCurve  } if end gsave 1.0 SLW 0. setgray 0 setlinecap stroke
 grestore  grestore end
 681 1695
a 681 1695 a
 tx@Dict begin tx@NodeDict begin /t 0.5  def LPutCoor end PutBegin
 end
 681 1695 a 681 1695 a
 tx@Dict begin langle Rot  end
 681 1695 a 681 1695
a
 tx@Dict begin { 1.0 37.79956 5.49998 0.0 langle 90 add  langle  sub
Uput exch pop add a PtoC h1 add exch w1 add exch } PutCoor PutBegin
 end
 681 1695 a 524 1718 a Fv(abbbcbbc)681 1695 y
 tx@Dict begin PutEnd  end
 681 1695
a 681 1695 a
 tx@Dict begin langle neg Rot  end
 681 1695 a 681 1695 a
 tx@Dict begin PutEnd  end
 681 1695 a 681 1695
a
 tx@Dict begin gsave STV newpath 1.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 /TheNodea43 /TheNodeaF3 InitNC
{ GetAngle dup -5.  add /AngleA ED -5.  sub 180 add /AngleB ED 0.67
 0.67  NCCurve  } if end gsave 1.0 SLW 0. setgray 0 setlinecap stroke
 grestore  grestore end
 681 1695 a 681 1695 a
 tx@Dict begin tx@NodeDict begin /t 0.5  def LPutCoor end PutBegin
 end
 681 1695 a 681 1695 a
 tx@Dict begin langle Rot  end
 681 1695
a 681 1695 a
 tx@Dict begin { 1.0 14.17484 5.49998 0.0 langle 90 sub  langle  sub
Uput exch pop add a PtoC h1 add exch w1 add exch } PutCoor PutBegin
 end
 681 1695 a 622 1718 a Fv(bbc)681 1695 y
 tx@Dict begin PutEnd  end

681 1695 a 681 1695 a
 tx@Dict begin langle neg Rot  end
 681 1695 a 681 1695 a
 tx@Dict begin PutEnd  end
 681 1695
a 681 1695 a
 tx@Dict begin gsave STV newpath 1.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 /TheNodeaI4 /TheNodea34 InitNC
{ NCLine  } if end gsave 1.0 SLW 0. setgray 0 setlinecap stroke  grestore
 grestore end
 681 1695 a 681 1695 a
 tx@Dict begin tx@NodeDict begin /t 0.5  def LPutCoor end PutBegin
 end
 681 1695 a 681 1695
a
 tx@Dict begin langle Rot  end
 681 1695 a 681 1695 a
 tx@Dict begin { 1.0 4.72495 3.87498 0.0 langle 90 add  langle  sub
Uput exch pop add a PtoC h1 add exch w1 add exch } PutCoor PutBegin
 end
 681 1695 a 661 1711 a Fv(a)681
1695 y
 tx@Dict begin PutEnd  end
 681 1695 a 681 1695 a
 tx@Dict begin langle neg Rot  end
 681 1695 a 681 1695 a
 tx@Dict begin PutEnd  end
 681
1695 a 681 1695 a
 tx@Dict begin gsave STV newpath 1.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 /TheNodeaI4 /TheNodea24 InitNC
{ NCLine  } if end gsave 1.0 SLW 0. setgray 0 setlinecap stroke  grestore
 grestore end
 681 1695 a 681 1695 a
 tx@Dict begin tx@NodeDict begin /t 0.5  def LPutCoor end PutBegin
 end
 681 1695 a 681
1695 a
 tx@Dict begin langle Rot  end
 681 1695 a 681 1695 a
 tx@Dict begin { 1.0 4.72495 5.49998 0.0 langle 90 add  langle  sub
Uput exch pop add a PtoC h1 add exch w1 add exch } PutCoor PutBegin
 end
 681 1695 a 661 1718 a Fv(b)681
1695 y
 tx@Dict begin PutEnd  end
 681 1695 a 681 1695 a
 tx@Dict begin langle neg Rot  end
 681 1695 a 681 1695 a
 tx@Dict begin PutEnd  end
 681
1695 a 681 1695 a
 tx@Dict begin gsave STV newpath 1.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 /TheNodeaI4 /TheNodea54 InitNC
{ tx@Dict begin /r 2.84544 def /Lineto { Arcto } def end /AngleA -90.
 def /AngleB -90.  def /armA 48.36957  def /armB 10.0  def NCAngles
 } if end gsave 1.0 SLW 0. setgray 0 setlinecap stroke  grestore  grestore
end
 681 1695 a 681 1695 a
 tx@Dict begin tx@NodeDict begin /t 1.5  def LPutCoor end PutBegin
 end
 681 1695 a 681
1695 a
 tx@Dict begin { 1.0 4.72495 3.87498 0.0 langle 90 add  Uput exch pop
add a PtoC h1 add exch w1 add exch } PutCoor PutBegin  end
 681 1695 a 661 1711 a Fv(c)681 1695 y
 tx@Dict begin PutEnd  end
 681 1695
a 681 1695 a
 tx@Dict begin PutEnd  end
 681 1695 a 681 1695 a
 tx@Dict begin gsave STV newpath 1.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 /TheNodea24 /TheNodea14 InitNC
{ NCLine  } if end gsave 1.0 SLW 0. setgray 0 setlinecap stroke  grestore
 grestore end
 681 1695 a 681 1695
a
 tx@Dict begin tx@NodeDict begin /t 0.5  def LPutCoor end PutBegin
 end
 681 1695 a 681 1695 a
 tx@Dict begin langle Rot  end
 681 1695 a 681 1695 a
 tx@Dict begin { 1.0 4.72495 5.49998 0.0 langle 90 add  langle  sub
Uput exch pop add a PtoC h1 add exch w1 add exch } PutCoor PutBegin
 end
 681 1695
a 661 1718 a Fv(b)681 1695 y
 tx@Dict begin PutEnd  end
 681 1695 a 681 1695 a
 tx@Dict begin langle neg Rot  end
 681
1695 a 681 1695 a
 tx@Dict begin PutEnd  end
 681 1695 a 681 1695 a
 tx@Dict begin gsave STV newpath 1.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 /TheNodea24 /TheNodea54 InitNC
{ tx@Dict begin /r 2.84544 def /Lineto { Arcto } def end /AngleA -90.
 def /AngleB -90.  def /armA 11.38092  def /armB 10.0  def NCAngles
 } if end gsave 1.0 SLW 0. setgray 0 setlinecap stroke  grestore  grestore
end
 681 1695 a 681
1695 a
 tx@Dict begin tx@NodeDict begin /t 1.5  def LPutCoor end PutBegin
 end
 681 1695 a 681 1695 a
 tx@Dict begin { 1.0 4.72495 3.87498 0.0 langle 90 add  Uput exch pop
add a PtoC h1 add exch w1 add exch } PutCoor PutBegin  end
 681 1695 a 661 1711 a Fv(c)681
1695 y
 tx@Dict begin PutEnd  end
 681 1695 a 681 1695 a
 tx@Dict begin PutEnd  end
 681 1695 a 681 1695 a
 tx@Dict begin gsave STV newpath 1.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 /TheNodea14 /TheNodea44 InitNC
{ NCLine  } if end gsave 1.0 SLW 0. setgray 0 setlinecap stroke  grestore
 grestore end
 681
1695 a 681 1695 a
 tx@Dict begin tx@NodeDict begin /t 0.5  def LPutCoor end PutBegin
 end
 681 1695 a 681 1695 a
 tx@Dict begin langle Rot  end
 681 1695 a 681
1695 a
 tx@Dict begin { 1.0 9.44989 5.49998 0.0 langle 90 add  langle  sub
Uput exch pop add a PtoC h1 add exch w1 add exch } PutCoor PutBegin
 end
 681 1695 a 642 1718 a Fv(bc)681 1695 y
 tx@Dict begin PutEnd  end
 681 1695
a 681 1695 a
 tx@Dict begin langle neg Rot  end
 681 1695 a 681 1695 a
 tx@Dict begin PutEnd  end
 681 1695 a 681 1695
a
 tx@Dict begin gsave STV newpath 1.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 /TheNodea14 /TheNodea54 InitNC
{ NCLine  } if end gsave 1.0 SLW 0. setgray 0 setlinecap stroke  grestore
 grestore end
 681 1695 a 681 1695 a
 tx@Dict begin tx@NodeDict begin /t 0.5  def LPutCoor end PutBegin
 end
 681 1695 a 681 1695 a
 tx@Dict begin langle Rot  end
 681 1695
a 681 1695 a
 tx@Dict begin { 1.0 4.72495 3.87498 0.0 langle 90 add  langle  sub
Uput exch pop add a PtoC h1 add exch w1 add exch } PutCoor PutBegin
 end
 681 1695 a 661 1711 a Fv(c)681 1695 y
 tx@Dict begin PutEnd  end
 681
1695 a 681 1695 a
 tx@Dict begin langle neg Rot  end
 681 1695 a 681 1695 a
 tx@Dict begin PutEnd  end
 681 1695 a 681
1695 a
 tx@Dict begin gsave STV newpath 1.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 /TheNodea34 /TheNodea44 InitNC
{ NCLine  } if end gsave 1.0 SLW 0. setgray 0 setlinecap stroke  grestore
 grestore end
 681 1695 a 681 1695 a
 tx@Dict begin tx@NodeDict begin /t 0.5  def LPutCoor end PutBegin
 end
 681 1695 a 681 1695 a
 tx@Dict begin langle Rot  end
 681
1695 a 681 1695 a
 tx@Dict begin { 1.0 18.89978 5.49998 0.0 langle 90 add  langle  sub
Uput exch pop add a PtoC h1 add exch w1 add exch } PutCoor PutBegin
 end
 681 1695 a 602 1718 a Fv(bbbc)681 1695
y
 tx@Dict begin PutEnd  end
 681 1695 a 681 1695 a
 tx@Dict begin langle neg Rot  end
 681 1695 a 681 1695 a
 tx@Dict begin PutEnd  end
 681 1695
a 681 1695 a
 tx@Dict begin gsave STV newpath 1.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 /TheNodea34 /TheNodeaF4 InitNC
{ tx@Dict begin /r 2.84544 def /Lineto { Arcto } def end /AngleA 90.
 def /AngleB 90.  def /armA 5.69046  def /armB 10.0  def NCAngles 
} if end gsave 1.0 SLW 0. setgray 0 setlinecap stroke  grestore  grestore
end
 681 1695 a 681 1695 a
 tx@Dict begin tx@NodeDict begin /t 1.5  def LPutCoor end PutBegin
 end
 681 1695 a 681 1695
a
 tx@Dict begin { 1.0 61.42429 5.49998 0.0 langle 90 add  Uput exch
pop add a PtoC h1 add exch w1 add exch } PutCoor PutBegin  end
 681 1695 a 426 1718 a Fv(abbbcabbbcbbc)681 1695 y
 tx@Dict begin PutEnd  end
 681
1695 a 681 1695 a
 tx@Dict begin PutEnd  end
 681 1695 a 681 1695 a
 tx@Dict begin gsave STV newpath 1.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 /TheNodea44 /TheNodeaF4 InitNC
{ GetAngle dup 5.  add /AngleA ED 5.  sub 180 add /AngleB ED 0.67 
0.67  NCCurve  } if end gsave 1.0 SLW 0. setgray 0 setlinecap stroke
 grestore  grestore end
 681 1695 a 681
1695 a
 tx@Dict begin tx@NodeDict begin /t 0.5  def LPutCoor end PutBegin
 end
 681 1695 a 681 1695 a
 tx@Dict begin langle Rot  end
 681 1695 a 681 1695 a
 tx@Dict begin { 1.0 37.79956 5.49998 0.0 langle 90 add  langle  sub
Uput exch pop add a PtoC h1 add exch w1 add exch } PutCoor PutBegin
 end
 681
1695 a 524 1718 a Fv(abbbcbbc)681 1695 y
 tx@Dict begin PutEnd  end
 681 1695 a 681
1695 a
 tx@Dict begin langle neg Rot  end
 681 1695 a 681 1695 a
 tx@Dict begin PutEnd  end
 681 1695 a 681 1695 a
 tx@Dict begin gsave STV newpath 1.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 /TheNodea44 /TheNodeaF4 InitNC
{ GetAngle dup -5.  add /AngleA ED -5.  sub 180 add /AngleB ED 0.67
 0.67  NCCurve  } if end gsave 1.0 SLW 0. setgray 0 setlinecap stroke
 grestore  grestore end
 681
1695 a 681 1695 a
 tx@Dict begin tx@NodeDict begin /t 0.5  def LPutCoor end PutBegin
 end
 681 1695 a 681 1695 a
 tx@Dict begin langle Rot  end
 681 1695 a 681
1695 a
 tx@Dict begin { 1.0 14.17484 5.49998 0.0 langle 90 sub  langle  sub
Uput exch pop add a PtoC h1 add exch w1 add exch } PutCoor PutBegin
 end
 681 1695 a 622 1718 a Fv(bbc)681 1695 y
 tx@Dict begin PutEnd  end
 681 1695
a 681 1695 a
 tx@Dict begin langle neg Rot  end
 681 1695 a 681 1695 a
 tx@Dict begin PutEnd  end
 681 1695 a 681 1695
a
 tx@Dict begin gsave STV newpath 1.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 /TheNodea54 /TheNodeaF4 InitNC
{ GetAngle dup 5.  add /AngleA ED 5.  sub 180 add /AngleB ED 0.67 
0.67  NCCurve  } if end gsave 1.0 SLW 0. setgray 0 setlinecap stroke
 grestore  grestore end
 681 1695 a 681 1695 a
 tx@Dict begin tx@NodeDict begin /t 0.5  def LPutCoor end PutBegin
 end
 681 1695 a 681 1695 a
 tx@Dict begin langle Rot  end
 681 1695
a 681 1695 a
 tx@Dict begin { 1.0 37.79956 5.49998 0.0 langle 90 add  langle  sub
Uput exch pop add a PtoC h1 add exch w1 add exch } PutCoor PutBegin
 end
 681 1695 a 524 1718 a Fv(abbbcbbc)681 1695
y
 tx@Dict begin PutEnd  end
 681 1695 a 681 1695 a
 tx@Dict begin langle neg Rot  end
 681 1695 a 681 1695 a
 tx@Dict begin PutEnd  end
 681 1695
a 681 1695 a
 tx@Dict begin gsave STV newpath 1.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 /TheNodea54 /TheNodeaF4 InitNC
{ GetAngle dup -5.  add /AngleA ED -5.  sub 180 add /AngleB ED 0.67
 0.67  NCCurve  } if end gsave 1.0 SLW 0. setgray 0 setlinecap stroke
 grestore  grestore end
 681 1695 a 681 1695 a
 tx@Dict begin tx@NodeDict begin /t 0.5  def LPutCoor end PutBegin
 end
 681 1695 a 681 1695
a
 tx@Dict begin langle Rot  end
 681 1695 a 681 1695 a
 tx@Dict begin { 1.0 14.17484 5.49998 0.0 langle 90 sub  langle  sub
Uput exch pop add a PtoC h1 add exch w1 add exch } PutCoor PutBegin
 end
 681 1695 a 622 1718 a Fv(bbc)681
1695 y
 tx@Dict begin PutEnd  end
 681 1695 a 681 1695 a
 tx@Dict begin langle neg Rot  end
 681 1695 a 681 1695 a
 tx@Dict begin PutEnd  end
 681
1695 a 266 x Fm(Fig.)15 b(11.)67 b Fw(Example)c(of)i(a)e(duplication)h
(in)g Fl(SlowFind)f Fw(during)h(the)f(construction)h(of)681
2060 y Fl(CD)n(A)-8 b(WG)p Fw(\()p Fv(aabbbcabbbcbbc)p
Fw(\).)36 b(The)d(insertion)g(of)h Fl(suf)2319 2079 y
Fe(11)2384 2060 y Fw(=)p Fv(bbc)f Fw(leads)h(to)f(state)g(4.)h(As)e
(the)h(last)681 2160 y(edge)g(\(1,)p Fv(c)p Fw(,4\))h(is)f(non-solid)g
(\()p Fg(i)p Fw(\),)g(state)h(4)f(is)g(cloned)g(in)n(to)g(state)g(5)g
(\()p Fg(ii)p Fw(\),)g(and)g(the)f(edge)h(\(1,)p Fv(c)p
Fw(,4\))681 2259 y(b)r(ecomes)25 b(\(1,)p Fv(c)p Fw(,5\).)805
2600 y Fy(If)d(a)f(non-solid)f(edge)h(is)g(encoun)n(tered)f(during)h
(the)h(execution)e(of)i Fs(SlowFind)q Fy(,)f(its)h(target)681
2700 y(state)k(has)f(to)h(b)r(e)g(duplicated)g(in)h(a)e(clone)h(and)g
(the)g(non-solid)f(edge)g(is)h(redirected)g(to)f(this)681
2799 y(clone.)39 b(The)g(redirected)g(transition)f(b)r(ecomes)h(solid.)
g(An)h(example)e(of)i(duplication)f(is)681 2899 y(giv)n(en)27
b(in)g(Figure)e(11.)805 3023 y(In)h(some)f(situation,)g(an)g(edge)g
(can)g(b)r(e)g(redirected.)g(This)g(happ)r(ens)h(when)f(a)g(state)g
(has)681 3123 y(just)30 b(b)r(een)g(created)e(at)i(the)f(previous)g
(step.)g(The)h(edge)f(is)g(redirected)g(to)g(this)h(state)f(and)681
3223 y(its)k(lab)r(el)g(is)h(up)r(dated)f(accordingly)-7
b(.)32 b(Suc)n(h)h(a)g(situation)g(app)r(ears)f(in)h(Figure)25
b(8)33 b(\(case)f Fr(v)s Fy(\))681 3322 y(for)d(the)h(construction)f
(of)h Fs(CD)n(A)-8 b(WG)p Fy(\()p Fk(aabbabbc)p Fy(\))22
b(:)30 b(the)g(insertion)f(of)h Fs(suf)3032 3343 y Fn(5)3069
3322 y Fy(=)p Fk(bbc)f Fy(induces)681 3422 y(the)38 b(redirection)f(of)
g(the)h(edge)g(\(2,)p Fk(babbc)p Fy(,F\),)e(whic)n(h)i(b)r(ecomes)f
(\(2,)p Fk(b)p Fy(,3\).)g(In)h(the)g(ab)r(o)n(v)n(e)681
3522 y(situation,)22 b(the)i(su\016x)e(link)h(of)g(the)g(last)g
(created)f(state)h(is)f(unkno)n(wn)h(during)f(the)h(insertion)681
3621 y(of)k(the)h(curren)n(t)f(su\016x.)h(And)g(the)g(redirections)e
(go)h(on)g(un)n(til)h(the)g(su\016x)g(link)f(is)h(found.)805
3746 y(Finally)-7 b(,)35 b(when)g Fs(tail)1452 3758 y
Fo(i)1514 3746 y Fy(=)g Fr(")g Fy(at)f(the)i(end)f(of)g(the)g
(construction,)f(terminal)g(states)h(are)681 3845 y(mark)n(ed)26
b(along)h(the)h(su\016x)f(path)h(of)f(F.)805 4006 y(F)-7
b(rom)25 b(the)g(ab)r(o)n(v)n(e)e(discussion,)h(a)g(pro)r(of)h(of)f
(the)h(in)n(v)-5 b(ariance)24 b(of)g(prop)r(erties)g(P1)g(and)h(P2)681
4105 y(can)33 b(b)r(e)h(deriv)n(ed.)f(Th)n(us,)g(at)h(the)g(end)g(of)f
(the)h(algorithm)f(all)g(sub)n(w)n(ords)f(of)i Fr(x)g
Fy(and)f(only)681 4205 y(these)22 b(w)n(ords)g(are)f(lab)r(els)i(of)f
(paths)h(in)f(the)h(automaton)f(\(prop)r(ert)n(y)g(P1\).)g(By)g(prop)r
(ert)n(y)g(P2,)681 4305 y(states)i(corresp)r(ond)g(to)g(strict)h
(classes)f(of)h(factors)f(\(when)h(the)h(longest)e(common)g(pre\014x)h
(of)681 4404 y(a)32 b(pair)f(of)h(su\016xes)g(is)g(not)h(equal)e(to)i
(an)n(y)e(of)h(them\))h(or)f(to)g(terminal)g(states)g(\(when)g(the)681
4504 y(con)n(trary)25 b(holds\).)j(This)f(giv)n(es)g(a)g(sk)n(etc)n(h)g
(of)g(the)h(correctness)e(of)i(the)g(algorithm.)805 4664
y(The)36 b(running)f(time)i(of)e(the)h(preliminary)f(algorithm)g(is)g
Fq(O)r Fy(\()p Fq(j)p Fr(x)p Fq(j)2877 4634 y Fn(2)2916
4664 y Fy(\))h(\(with)g(an)g(imple-)681 4764 y(men)n(tation)29
b(b)n(y)g(transition)f(matrix\),)h(lik)n(e)g(is)h(the)f(sum)h(of)f
(lengths)g(of)g(all)g(su\016xes)g(of)g(the)681 4863 y(w)n(ord)d
Fr(x)p Fy(.)p eop
%%Page: 15 15
15 14 bop 365 387 a Fm(Linear)33 b(Algorithm)40 b Fy(T)-7
b(o)28 b(get)f(a)h(linear-time)g(algorithm,)e(w)n(e)i(use)g(together)f
(prop)r(erties)365 487 y(of)d(D)n(A)-9 b(W)n(Gs)25 b(construction)e
(and)h(of)g(su\016x)g(trees)g(construction.)g(The)g(main)g(feature)g
(is)g(the)365 587 y(notion)34 b(of)h(su\016x)f(links.)g(They)g(are)g
(de\014ned)g(as)g(for)g(D)n(A)-9 b(W)n(Gs)34 b(in)h(Section)25
b(2,)34 b(de\014nition)365 686 y(that)e(remains)f(v)-5
b(alid)32 b(b)n(y)f(Lemma)24 b(6.)32 b(They)f(are)g(the)h(clue)g(for)f
(the)h(linear)e(running)i(time)365 786 y(of)c(the)g(algorithm.)490
923 y(Three)34 b(elemen)n(ts)h(ha)n(v)n(e)e(to)i(b)r(e)g(p)r(oin)n(ted)
g(out)g(ab)r(out)f(su\016x)h(links)g(in)g(the)g(CD)n(A)-9
b(W)n(G.)365 1023 y(First,)29 b(w)n(e)f(do)h(not)g(need)f(to)h
(initialize)g(su\016x)g(links.)f(Indeed,)h(when)g Fs(suf)2673
1043 y Fn(0)2739 1023 y Fy(is)g(inserted,)f Fr(x)3209
1035 y Fn(0)365 1122 y Fy(is)i(ob)n(viously)f(a)g(new)h(letter)g(b)r
(ecause)g(no)g(letter)g(of)g Fr(x)g Fy(has)g(b)r(een)g(scanned)f(so)h
(far,)f(whic)n(h)365 1222 y(directly)34 b(induces)f Fr(s)1014
1234 y Fo(x)1056 1222 y Fy(\(F\)=I.)h(Note)g(that)f Fr(s)1757
1234 y Fo(x)1799 1222 y Fy(\(I\))h(is)g(nev)n(er)e(used,)i(and)f(so)g
(nev)n(er)g(de\014ned.)365 1322 y(Second,)e(tra)n(v)n(eling)d(along)i
(the)g(su\016x)h(path)f(of)h(a)f(state)g Fr(p)g Fy(do)r(es)g(not)h
(necessarily)e(end)h(at)365 1421 y(state)38 b(I.)g(Indeed,)g(with)g(m)n
(ulti-letter)g(transitions,)f(if)h Fr(s)2193 1433 y Fo(x)2234
1421 y Fy(\()p Fr(p)p Fy(\)=I)g(w)n(e)f(ha)n(v)n(e)g(to)h(treat)f(the)
365 1521 y(su\016x)32 b Fr(a)633 1491 y Fp(\000)p Fn(1)722
1521 y Fr(\013)h Fy(\()p Fr(a)d Fq(2)h Fr(\006)5 b Fy(\))32
b(where)f Fr(\013)i Fy(is)f(the)g(represen)n(tativ)n(e)e(of)i
Fr(p)p Fy(.)g(And)g(third,)g(su\016x)g(links)365 1621
y(induce)c(the)g(follo)n(wing)f(in)n(v)-5 b(arian)n(t)26
b(prop)r(ert)n(y)h(satis\014ed)g(at)g(step)h Fr(i)p Fy(:)329
1794 y Fm(P3)p Fy(:)41 b(at)27 b(the)h(b)r(eginning)f(of)g(step)g
Fr(i)p Fy(,)g(the)g(su\016x)g(links)g(are)f(de\014ned)i(for)e(eac)n(h)g
(state)h(of)g Fq(A)3135 1806 y Fo(i)p Fp(\000)p Fn(1)506
1894 y Fy(according)f(to)i(De\014nition)d(4,)i(except)h(ma)n(yb)r(e)f
(for)g(the)h(lastly-created)e(state.)490 2065 y(The)e(next)h(remark)d
(allo)n(ws)h(redirections)g(without)i(ha)n(ving)e(to)h(searc)n(h)f
(with)i Fs(SlowFind)365 2165 y Fy(for)i(existing)h(states)f(b)r
(elonging)g(to)g(a)g(same)g(class)g(of)g(factors.)365
2339 y Fs(R)l(emark.)42 b Fy(Let)24 b Fr(\013\014)29
b Fy(ha)n(v)n(e)22 b(lo)r(cus)i Fr(p)f Fy(and)h(assume)f(that)h
Fr(q)i Fy(=)c Fr(s)2249 2351 y Fo(x)2291 2339 y Fy(\()p
Fr(p)p Fy(\))i(is)g(the)g(lo)r(cus)f(of)h Fr(\014)t Fy(.)g(Then,)365
2438 y Fr(p)k Fy(is)f(the)h(lo)r(cus)g(of)f(su\016xes)g(of)h
Fr(\013\014)k Fy(whose)27 b(lengths)h(are)e(greater)g(than)i
Fq(j)p Fr(\014)t Fq(j)p Fy(.)490 2575 y(The)d(algorithm)g(has)g(to)g
(deal)g(with)h(su\016x)g(links)f(eac)n(h)g(time)h(a)f(state)g(is)h
(created.)e(This)365 2675 y(happ)r(ens)e(when)g(a)f(state)h(is)f
(duplicated,)i(as)e(illustrated)g(b)n(y)h(Figure)i(11,)d(and)g(when)h
(a)f(state)365 2775 y(is)28 b(created)f(after)g(the)h(execution)f(of)h
Fs(SlowFind)q Fy(.)490 2876 y(During)f(a)g(duplication,)g(su\016x)g
(links)g(are)f(up)r(dated)i(as)f(follo)n(ws.)f(Let)h
Fr(w)j Fy(b)r(e)e(the)g(clone)365 2976 y(of)39 b Fr(q)s
Fy(.)g(In)h(regard)d(to)i(strict)g(classes)e(of)i(factors)f(and)h
(De\014nition)26 b(4,)38 b(the)i(class)e(of)h Fr(w)i
Fy(is)365 3075 y(inserted)25 b(\\b)r(et)n(w)n(een")f(the)h(ones)f(of)h
Fr(q)i Fy(and)e Fr(s)1754 3087 y Fo(x)1796 3075 y Fy(\()p
Fr(q)s Fy(\).)g(So,)g(w)n(e)f(up)r(date)h(su\016x)g(links)g(b)n(y)f
(setting)365 3175 y Fr(s)404 3187 y Fo(x)446 3175 y Fy(\()p
Fr(w)r Fy(\))g(=)f Fr(s)722 3187 y Fo(x)764 3175 y Fy(\()p
Fr(q)s Fy(\))28 b(and)f(then)h Fr(s)1285 3187 y Fo(x)1327
3175 y Fy(\()p Fr(q)s Fy(\))c(=)f Fr(w)r Fy(.)788 3781
y
 tx@Dict begin tx@NodeDict begin { 3.33885 2 div 6.14998 0.0 add 2
div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add 0.8 add } /TheNodeI 11 { InitCnode
 } NewNode end end
 788 3781 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  3.33885 2 div 6.14998
0.0 add 2 div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add CLW 2 div add 0
360 arc closepath gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore
end
 
@endspecial Fw(I)1727
3529 y
 tx@Dict begin tx@NodeDict begin { 4.8229 2 div 4.30554 1.94444 add
2 div 2 copy 1.94444 sub 4 2 roll Pyth 3.0 add 0.8 add } /TheNodeq
11 { InitCnode  } NewNode end end
 1727 3529 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  4.8229 2 div 4.30554
1.94444 add 2 div 2 copy 1.94444 sub 4 2 roll Pyth 3.0 add CLW 2 div
add 0 360 arc closepath gsave 0.8 SLW 0. setgray 0 setlinecap stroke
 grestore end
 
@endspecial
Fr(q)2670 3537 y
 tx@Dict begin tx@NodeDict begin { 5.20601 2 div 4.30554 0.0 add 2
div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add 0.8 add } /TheNodev 11 { InitCnode
 } NewNode end end
 2670 3537 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  5.20601 2 div 4.30554
0.0 add 2 div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add CLW 2 div add 0
360 arc closepath gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore
end


@endspecial Fr(v)1492 4009 y
 tx@Dict begin tx@NodeDict begin { 4.6875 2 div 4.30554 0.0 add 2 div
2 copy 0.0 sub 4 2 roll Pyth 3.0 add 0.8 add } /TheNodes 11 { InitCnode
 } NewNode end end
 1492 4009 a @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  4.6875 2 div 4.30554
0.0 add 2 div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add CLW 2 div add 0
360 arc closepath gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore
end
 
@endspecial Fr(s)1964 4009 y
 tx@Dict begin tx@NodeDict begin { 4.78937 2 div 4.30554 0.0 add 2
div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add 0.8 add } /TheNoder 11 { InitCnode
 } NewNode end end
 1964 4009 a
@beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  4.78937 2 div 4.30554
0.0 add 2 div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add CLW 2 div add 0
360 arc closepath gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore
end
 
@endspecial Fr(r)802 3873
y
 tx@Dict begin tx@NodeDict begin { 199.1692 -14.22636  } /TheNodeqq
10 { InitPnode  } NewNode end end
 802 3873 a 802 3873 a
 tx@Dict begin gsave STV newpath 1.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 /TheNodeI /TheNodeq InitNC
{ NCLine  } if end gsave 1.0 SLW 0. setgray 8.0 6.0 -2 0 add DashLine
 grestore  grestore end
 802 3873 a 802 3873 a
 tx@Dict begin tx@NodeDict begin /t 0.5  def LPutCoor end PutBegin
 end
 802 3873
a 802 3873 a
 tx@Dict begin 15. Rot  end
 802 3873 a 802 3873 a
 tx@Dict begin { 3.0 11.61728 6.25 1.75 langle 90 add  15.  sub Uput
exch pop add a PtoC h1 add exch w1 add exch } PutCoor PutBegin  end
 802 3873 a 754 3892
a Fg(\013\014)802 3873 y
 tx@Dict begin PutEnd  end
 802 3873 a 802 3873 a
 tx@Dict begin 15. neg Rot  end
 802 3873
a 802 3873 a
 tx@Dict begin PutEnd  end
 802 3873 a 802 3873 a
 tx@Dict begin gsave STV newpath 1.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 /TheNodeI /TheNodes InitNC
{ NCLine  } if end gsave 1.0 SLW 0. setgray 8.0 6.0 -2 0 add DashLine
 grestore  grestore end
 802 3873 a 802 3873
a
 tx@Dict begin tx@NodeDict begin /t 0.5  def LPutCoor end PutBegin
 end
 802 3873 a 802 3873 a
 tx@Dict begin -15. Rot  end
 802 3873 a 802 3873 a
 tx@Dict begin { 3.0 5.68225 6.25 1.75 langle 90 add  -15.  sub Uput
exch pop add a PtoC h1 add exch w1 add exch } PutCoor PutBegin  end
 802 3873
a 778 3892 a Fg(\014)802 3873 y
 tx@Dict begin PutEnd  end
 802 3873 a 802 3873 a
 tx@Dict begin -15. neg Rot  end

802 3873 a 802 3873 a
 tx@Dict begin PutEnd  end
 802 3873 a 802 3873 a
 tx@Dict begin gsave STV newpath 1.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 /TheNodeq /TheNodev InitNC
{ NCLine  } if end gsave 1.0 SLW 0. setgray 0 setlinecap stroke  grestore
 grestore end
 802 3873
a 802 3873 a
 tx@Dict begin tx@NodeDict begin /t 0.5  def LPutCoor end PutBegin
 end
 802 3873 a 802 3873 a
 tx@Dict begin langle Rot  end
 802 3873 a 802 3873
a
 tx@Dict begin { 3.0 5.29147 3.87498 1.75 langle 90 add  langle  sub
Uput exch pop add a PtoC h1 add exch w1 add exch } PutCoor PutBegin
 end
 802 3873 a 780 3882 a Fg(\015)802 3873 y
 tx@Dict begin PutEnd  end
 802 3873 a
802 3873 a
 tx@Dict begin langle neg Rot  end
 802 3873 a 802 3873 a
 tx@Dict begin PutEnd  end
 802 3873 a 802 3873
a
 tx@Dict begin gsave STV newpath 1.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 /TheNodes /TheNoder InitNC
{ NCLine  } if end gsave 1.0 SLW 0. setgray 8.0 6.0 -2 0 add DashLine
 grestore  grestore end
 802 3873 a 802 3873 a
 tx@Dict begin tx@NodeDict begin /t 0.5  def LPutCoor end PutBegin
 end
 802 3873 a 802 3873 a
 tx@Dict begin langle Rot  end
 802 3873
a 802 3873 a
 tx@Dict begin { 3.0 4.44197 6.25 0.0 langle 90 add  langle  sub Uput
exch pop add a PtoC h1 add exch w1 add exch } PutCoor PutBegin  end
 802 3873 a 784 3899 a Fg(\016)802 3873 y
 tx@Dict begin PutEnd  end

802 3873 a 802 3873 a
 tx@Dict begin langle neg Rot  end
 802 3873 a 802 3873 a
 tx@Dict begin PutEnd  end
 802 3873
a 802 3873 a
 tx@Dict begin gsave STV newpath 1.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 /TheNoder /TheNodeqq InitNC
{ NCLine  } if end gsave 1.0 SLW 0. setgray 0 setlinecap stroke  grestore
 grestore end
 802 3873 a 802 3873 a
 tx@Dict begin tx@NodeDict begin /t 0.5  def LPutCoor end PutBegin
 end
 802 3873 a 802 3873
a
 tx@Dict begin langle Rot  end
 802 3873 a 802 3873 a
 tx@Dict begin { 3.0 6.35759 6.25 1.75 langle 90 add  langle  sub Uput
exch pop add a PtoC h1 add exch w1 add exch } PutCoor PutBegin  end
 802 3873 a 776 3892 a Fg( )802
3873 y
 tx@Dict begin PutEnd  end
 802 3873 a 802 3873 a
 tx@Dict begin langle neg Rot  end
 802 3873 a 802 3873 a
 tx@Dict begin PutEnd  end
 802
3873 a 802 3873 a
 tx@Dict begin gsave STV newpath 1.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 /TheNodeq /TheNodes InitNC
{ NCLine  } if end gsave 1.0 SLW 0. setgray 2.0 4.0 -2 0 add DashLine
 grestore  grestore end
 802 3873 a 802 3873 a
 tx@Dict begin tx@NodeDict begin /t 0.5  def LPutCoor end PutBegin
 end
 802 3873 a 802
3873 a
 tx@Dict begin 65. Rot  end
 802 3873 a 802 3873 a
 tx@Dict begin { 3.0 8.99649 3.87498 0.99998 langle 90 add  65.  sub
Uput exch pop add a PtoC h1 add exch w1 add exch } PutCoor PutBegin
 end
 802 3873 a 765 3885 a Fg(s)801
3893 y Fd(x)802 3873 y
 tx@Dict begin PutEnd  end
 802 3873 a 802 3873 a
 tx@Dict begin 65. neg Rot  end
 802 3873
a 802 3873 a
 tx@Dict begin PutEnd  end
 802 3873 a 1003 4139 a Fm(Fig.)14 b(12.)27
b Fw(Searc)n(hing)f(for)h Fg(s)1831 4147 y Fd(x)1869
4139 y Fw(\()p Fg(v)s Fw(\))f(using)g(a)g(su\016x)f(link.)490
4465 y Fy(After)g(the)g(execution)f(of)h Fs(SlowFind)q
Fy(,)g(if)g(state)g Fr(v)j Fy(is)c(created,)g(w)n(e)g(ha)n(v)n(e)g(to)g
(compute)h(its)365 4565 y(su\016x)g(link,)g Fr(s)805
4577 y Fo(x)847 4565 y Fy(\()p Fr(v)s Fy(\).)h(Let)f
Fr(\015)30 b Fy(b)r(e)25 b(the)g(lab)r(el)g(of)g(the)h(transition)e
(starting)g(at)h Fr(q)j Fy(and)d(ending)f(at)365 4664
y Fr(v)s Fy(.)30 b(T)-7 b(o)28 b(compute)h(the)h(su\016x)f(link)g(of)g
Fr(v)s Fy(,)g(the)h(algorithm)d(go)r(es)i(through)f(the)h(path)g(ha)n
(ving)365 4764 y(lab)r(el)22 b Fr(\015)k Fy(from)21 b(the)h(su\016x)g
(link)f(of)h Fr(q)s Fy(,)g Fr(s)h Fy(=)f Fr(s)1689 4776
y Fo(x)1731 4764 y Fy(\()p Fr(q)s Fy(\).)g(The)g(op)r(eration)e(is)i
(rep)r(eated)f(if)h(necessary)-7 b(.)365 4863 y(Figure)25
b(12)36 b(displa)n(ys)g(a)g(sc)n(heme)h(of)g(this)h(searc)n(h.)d(The)i
(thic)n(k)g(dashed)g(edges)f(represen)n(t)p eop
%%Page: 16 16
16 15 bop 681 387 a Fy(paths)23 b(in)g(the)g(automaton,)g(and)g(the)g
(thin)h(dashed)e(edge)h(represen)n(ts)e(the)j(su\016x)f(link)g(from)681
487 y Fr(q)38 b Fy(to)e Fr(s)p Fy(.)f(The)h(searc)n(h,)e(as)h(for)g
(the)h(duplication,)g(realizes)e(the)i(insertion)f(of)g(a)g(series)g
(of)681 587 y(su\016xes.)30 b(T)-7 b(o)30 b(tra)n(v)n(el)f(along)h(the)
h(path,)f(w)n(e)g(use)h(the)g(function)g Fs(F)-6 b(astFind)p
Fy(,)31 b(similar)f(to)g(the)681 686 y(one)22 b(used)g(in)h(McCreigh)n
(t's)f(algorithm)h([18],)f(that)h(go)r(es)f(through)g(transitions)f
(comparing)681 786 y(just)33 b(the)g(\014rst)g(letters)f(of)h(their)g
(lab)r(els.)f(This)h(function)g(returns)f(the)h(last)g(encoun)n(tered)
681 886 y(state)27 b(and)h(edge.)563 1483 y
 tx@Dict begin tx@NodeDict begin {  } /TheNodeA 16 { .5 10.39525 3.8
false .5 11.04514 InitRnode  } NewNode end end
 563 1483
a 31 w @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  0. true 3.8 neg 3.8
neg 7.24513 10.39525 .5 Frame  gsave 0.8 SLW 0. setgray 0 setlinecap
stroke  grestore end
 
@endspecial Fr(i)1389
1483 y
 tx@Dict begin tx@NodeDict begin {  } /TheNodeB 16 { .5 10.39525 3.8
false .5 14.49026 InitRnode  } NewNode end end
 1389 1483 a 32 w @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  0. true 3.8 neg 3.8
neg 10.69026 10.39525 .5 Frame  gsave 0.8 SLW 0. setgray 0 setlinecap
stroke  grestore end
 
@endspecial
Fr(ii)2382 1483 y
 tx@Dict begin tx@NodeDict begin {  } /TheNodeC 16 { .5 10.39525 3.8
false .5 17.9354 InitRnode  } NewNode end end
 2382 1483 a 31 w @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  0. true 3.8 neg 3.8
neg 14.13539 10.39525 .5 Frame  gsave 0.8 SLW 0. setgray 0 setlinecap
stroke  grestore end


@endspecial Fr(iii)669 1771 y
 tx@Dict begin tx@NodeDict begin { 2.88892 2 div 4.78334 0.0 add 2
div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add 2.6 add } /TheNodeaI1 11 {
InitCnode  } NewNode end end
 669 1771 a @beginspecial
@setspecial
 tx@Dict begin STP newpath 2.6 SLW 0. setgray  2.88892 2 div 4.78334
0.0 add 2 div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add CLW 2 div add 0
360 arc closepath gsave 2.6 SLW 0. setgray 0 setlinecap stroke  grestore
gsave 1.0 SLW 1. setgray stroke grestore end
 
@endspecial Fn(I)1132 1771 y
 tx@Dict begin tx@NodeDict begin { 5.15974 2 div 4.78334 0.0 add 2
div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add 2.6 add } /TheNodeaF1 11 {
InitCnode  } NewNode end end
 1132 1771 a
@beginspecial @setspecial
 tx@Dict begin STP newpath 2.6 SLW 0. setgray  5.15974 2 div 4.78334
0.0 add 2 div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add CLW 2 div add 0
360 arc closepath gsave 2.6 SLW 0. setgray 0 setlinecap stroke  grestore
gsave 1.0 SLW 1. setgray stroke grestore end
 
@endspecial Fn(F)1496 1771
y
 tx@Dict begin tx@NodeDict begin { 2.88892 2 div 4.78334 0.0 add 2
div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add 2.6 add } /TheNodeaI2 11 {
InitCnode  } NewNode end end
 1496 1771 a @beginspecial @setspecial
 tx@Dict begin STP newpath 2.6 SLW 0. setgray  2.88892 2 div 4.78334
0.0 add 2 div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add CLW 2 div add 0
360 arc closepath gsave 2.6 SLW 0. setgray 0 setlinecap stroke  grestore
gsave 1.0 SLW 1. setgray stroke grestore end
 
@endspecial
Fn(I)1845 1770 y
 tx@Dict begin tx@NodeDict begin { 3.98613 2 div 4.51111 0.0 add 2
div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add 0.8 add } /TheNodea12 11 {
InitCnode  } NewNode end end
 1845 1770 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  3.98613 2 div 4.51111
0.0 add 2 div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add CLW 2 div add 0
360 arc closepath gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore
end


@endspecial Fn(1)2195 1771 y
 tx@Dict begin tx@NodeDict begin { 5.15974 2 div 4.78334 0.0 add 2
div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add 2.6 add } /TheNodeaF2 11 {
InitCnode  } NewNode end end
 2195 1771 a @beginspecial
@setspecial
 tx@Dict begin STP newpath 2.6 SLW 0. setgray  5.15974 2 div 4.78334
0.0 add 2 div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add CLW 2 div add 0
360 arc closepath gsave 2.6 SLW 0. setgray 0 setlinecap stroke  grestore
gsave 1.0 SLW 1. setgray stroke grestore end
 
@endspecial Fn(F)2559 1771 y
 tx@Dict begin tx@NodeDict begin { 2.88892 2 div 4.78334 0.0 add 2
div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add 2.6 add } /TheNodeaI3 11 {
InitCnode  } NewNode end end
 2559 1771 a
@beginspecial @setspecial
 tx@Dict begin STP newpath 2.6 SLW 0. setgray  2.88892 2 div 4.78334
0.0 add 2 div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add CLW 2 div add 0
360 arc closepath gsave 2.6 SLW 0. setgray 0 setlinecap stroke  grestore
gsave 1.0 SLW 1. setgray stroke grestore end
 
@endspecial Fn(I)3121 1770
y
 tx@Dict begin tx@NodeDict begin { 3.98613 2 div 4.51111 0.0 add 2
div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add 0.8 add } /TheNodea13 11 {
InitCnode  } NewNode end end
 3121 1770 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  3.98613 2 div 4.51111
0.0 add 2 div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add CLW 2 div add 0
360 arc closepath gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore
end
 
@endspecial
Fn(1)2837 1770 y
 tx@Dict begin tx@NodeDict begin { 3.98613 2 div 4.51111 0.0 add 2
div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add 0.8 add } /TheNodea23 11 {
InitCnode  } NewNode end end
 2837 1770 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  3.98613 2 div 4.51111
0.0 add 2 div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add CLW 2 div add 0
360 arc closepath gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore
end


@endspecial Fn(2)3400 1771 y
 tx@Dict begin tx@NodeDict begin { 5.15974 2 div 4.78334 0.0 add 2
div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add 2.6 add } /TheNodeaF3 11 {
InitCnode  } NewNode end end
 3400 1771 a @beginspecial
@setspecial
 tx@Dict begin STP newpath 2.6 SLW 0. setgray  5.15974 2 div 4.78334
0.0 add 2 div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add CLW 2 div add 0
360 arc closepath gsave 2.6 SLW 0. setgray 0 setlinecap stroke  grestore
gsave 1.0 SLW 1. setgray stroke grestore end
 
@endspecial Fn(F)681 1751 y
 tx@Dict begin gsave STV newpath 1.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 /TheNodeaI1 /TheNodeaF1 InitNC
{ NCLine  } if end gsave 1.0 SLW 0. setgray 0 setlinecap stroke  grestore
 grestore end
 681 1751 a 681
1751 a
 tx@Dict begin tx@NodeDict begin /t 0.5  def LPutCoor end PutBegin
 end
 681 1751 a 681 1751 a
 tx@Dict begin langle Rot  end
 681 1751 a 681 1751 a
 tx@Dict begin { 3.0 18.89978 5.49998 0.0 langle 90 add  langle  sub
Uput exch pop add a PtoC h1 add exch w1 add exch } PutCoor PutBegin
 end
 681
1751 a 602 1774 a Fv(bbbc)681 1751 y
 tx@Dict begin PutEnd  end
 681 1751 a 681 1751
a
 tx@Dict begin langle neg Rot  end
 681 1751 a 681 1751 a
 tx@Dict begin PutEnd  end
 681 1751 a 681 1751 a
 tx@Dict begin gsave STV newpath 1.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 /TheNodeaF1 /TheNodeaI1 InitNC
{ GetAngle dup 30.  add /AngleA ED 30.  sub 180 add /AngleB ED 0.67
 0.67  NCCurve  } if end gsave 1.0 SLW 0. setgray 2.0 3.0 -2 0 add
DashLine  grestore  grestore end
 681 1751
a 681 1751 a
 tx@Dict begin gsave STV newpath 1.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 /TheNodeaI2 /TheNodea12 InitNC
{ NCLine  } if end gsave 1.0 SLW 0. setgray 0 setlinecap stroke  grestore
 grestore end
 681 1751 a 681 1751 a
 tx@Dict begin tx@NodeDict begin /t 0.5  def LPutCoor end PutBegin
 end
 681 1751 a 681 1751
a
 tx@Dict begin langle Rot  end
 681 1751 a 681 1751 a
 tx@Dict begin { 3.0 9.44989 5.49998 0.0 langle 90 add  langle  sub
Uput exch pop add a PtoC h1 add exch w1 add exch } PutCoor PutBegin
 end
 681 1751 a 642 1774 a Fv(bb)681
1751 y
 tx@Dict begin PutEnd  end
 681 1751 a 681 1751 a
 tx@Dict begin langle neg Rot  end
 681 1751 a 681 1751 a
 tx@Dict begin PutEnd  end
 681
1751 a 681 1751 a
 tx@Dict begin gsave STV newpath 1.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 /TheNodea12 /TheNodeaF2 InitNC
{ NCLine  } if end gsave 1.0 SLW 0. setgray 0 setlinecap stroke  grestore
 grestore end
 681 1751 a 681 1751 a
 tx@Dict begin tx@NodeDict begin /t 0.5  def LPutCoor end PutBegin
 end
 681 1751 a 681
1751 a
 tx@Dict begin langle Rot  end
 681 1751 a 681 1751 a
 tx@Dict begin { 3.0 9.44989 5.49998 0.0 langle 90 add  langle  sub
Uput exch pop add a PtoC h1 add exch w1 add exch } PutCoor PutBegin
 end
 681 1751 a 642 1774 a Fv(bc)681
1751 y
 tx@Dict begin PutEnd  end
 681 1751 a 681 1751 a
 tx@Dict begin langle neg Rot  end
 681 1751 a 681 1751 a
 tx@Dict begin PutEnd  end
 681
1751 a 681 1751 a
 tx@Dict begin gsave STV newpath 1.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 /TheNodea12 /TheNodeaF2 InitNC
{ tx@Dict begin /r 2.84544 def /Lineto { Arcto } def end /AngleA 90.
 def /AngleB 90.  def /armA 17.07181  def /armB 10.0  def NCAngles
 } if end gsave 1.0 SLW 0. setgray 0 setlinecap stroke  grestore  grestore
end
 681 1751 a 681 1751 a
 tx@Dict begin tx@NodeDict begin /t 1.5  def LPutCoor end PutBegin
 end
 681 1751 a 681
1751 a
 tx@Dict begin { 3.0 4.72495 3.87498 0.0 langle 90 add  Uput exch pop
add a PtoC h1 add exch w1 add exch } PutCoor PutBegin  end
 681 1751 a 661 1767 a Fv(c)681 1751 y
 tx@Dict begin PutEnd  end
 681 1751
a 681 1751 a
 tx@Dict begin PutEnd  end
 681 1751 a 681 1751 a
 tx@Dict begin gsave STV newpath 1.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 /TheNodeaF2 /TheNodea12 InitNC
{ GetAngle dup 30.  add /AngleA ED 30.  sub 180 add /AngleB ED 0.67
 0.67  NCCurve  } if end gsave 1.0 SLW 0. setgray 2.0 3.0 -2 0 add
DashLine  grestore  grestore end
 681 1751 a 681 1751
a
 tx@Dict begin gsave STV newpath 1.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 /TheNodea12 /TheNodeaI2 InitNC
{ GetAngle dup 30.  add /AngleA ED 30.  sub 180 add /AngleB ED 0.67
 0.67  NCCurve  } if end gsave 1.0 SLW 0. setgray 2.0 3.0 -2 0 add
DashLine  grestore  grestore end
 681 1751 a 681 1751 a
 tx@Dict begin gsave STV newpath 1.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 /TheNodeaI3 /TheNodea23 InitNC
{ NCLine  } if end gsave 1.0 SLW 0. setgray 0 setlinecap stroke  grestore
 grestore end
 681 1751 a 681 1751 a
 tx@Dict begin tx@NodeDict begin /t 0.5  def LPutCoor end PutBegin
 end
 681 1751
a 681 1751 a
 tx@Dict begin langle Rot  end
 681 1751 a 681 1751 a
 tx@Dict begin { 3.0 4.72495 5.49998 0.0 langle 90 add  langle  sub
Uput exch pop add a PtoC h1 add exch w1 add exch } PutCoor PutBegin
 end
 681 1751 a 661 1774
a Fv(b)681 1751 y
 tx@Dict begin PutEnd  end
 681 1751 a 681 1751 a
 tx@Dict begin langle neg Rot  end
 681 1751 a 681
1751 a
 tx@Dict begin PutEnd  end
 681 1751 a 681 1751 a
 tx@Dict begin gsave STV newpath 1.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 /TheNodea23 /TheNodea13 InitNC
{ NCLine  } if end gsave 1.0 SLW 0. setgray 0 setlinecap stroke  grestore
 grestore end
 681 1751 a 681 1751 a
 tx@Dict begin tx@NodeDict begin /t 0.5  def LPutCoor end PutBegin
 end
 681
1751 a 681 1751 a
 tx@Dict begin langle Rot  end
 681 1751 a 681 1751 a
 tx@Dict begin { 3.0 4.72495 5.49998 0.0 langle 90 add  langle  sub
Uput exch pop add a PtoC h1 add exch w1 add exch } PutCoor PutBegin
 end
 681 1751 a 661
1774 a Fv(b)681 1751 y
 tx@Dict begin PutEnd  end
 681 1751 a 681 1751 a
 tx@Dict begin langle neg Rot  end
 681 1751
a 681 1751 a
 tx@Dict begin PutEnd  end
 681 1751 a 681 1751 a
 tx@Dict begin gsave STV newpath 1.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 /TheNodea13 /TheNodeaF3 InitNC
{ NCLine  } if end gsave 1.0 SLW 0. setgray 0 setlinecap stroke  grestore
 grestore end
 681 1751 a 681 1751
a
 tx@Dict begin tx@NodeDict begin /t 0.5  def LPutCoor end PutBegin
 end
 681 1751 a 681 1751 a
 tx@Dict begin langle Rot  end
 681 1751 a 681 1751 a
 tx@Dict begin { 3.0 9.44989 5.49998 0.0 langle 90 add  langle  sub
Uput exch pop add a PtoC h1 add exch w1 add exch } PutCoor PutBegin
 end
 681 1751
a 642 1774 a Fv(bc)681 1751 y
 tx@Dict begin PutEnd  end
 681 1751 a 681 1751 a
 tx@Dict begin langle neg Rot  end
 681
1751 a 681 1751 a
 tx@Dict begin PutEnd  end
 681 1751 a 681 1751 a
 tx@Dict begin gsave STV newpath 1.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 /TheNodea23 /TheNodeaF3 InitNC
{ tx@Dict begin /r 2.84544 def /Lineto { Arcto } def end /AngleA 90.
 def /AngleB 90.  def /armA 25.60728  def /armB 10.0  def NCAngles
 } if end gsave 1.0 SLW 0. setgray 0 setlinecap stroke  grestore  grestore
end
 681 1751 a 681
1751 a
 tx@Dict begin tx@NodeDict begin /t 1.5  def LPutCoor end PutBegin
 end
 681 1751 a 681 1751 a
 tx@Dict begin { 1.0 4.72495 3.87498 0.0 langle 90 add  Uput exch pop
add a PtoC h1 add exch w1 add exch } PutCoor PutBegin  end
 681 1751 a 661 1767 a Fv(c)681
1751 y
 tx@Dict begin PutEnd  end
 681 1751 a 681 1751 a
 tx@Dict begin PutEnd  end
 681 1751 a 681 1751 a
 tx@Dict begin gsave STV newpath 1.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 /TheNodea13 /TheNodeaF3 InitNC
{ tx@Dict begin /r 2.84544 def /Lineto { Arcto } def end /AngleA 90.
 def /AngleB 90.  def /armA 17.07181  def /armB 10.0  def NCAngles
 } if end gsave 1.0 SLW 0. setgray 0 setlinecap stroke  grestore  grestore
end
 681
1751 a 681 1751 a
 tx@Dict begin tx@NodeDict begin /t 1.5  def LPutCoor end PutBegin
 end
 681 1751 a 681 1751 a
 tx@Dict begin { 1.0 4.72495 3.87498 0.0 langle 90 add  Uput exch pop
add a PtoC h1 add exch w1 add exch } PutCoor PutBegin  end
 681 1751 a 661
1767 a Fv(c)681 1751 y
 tx@Dict begin PutEnd  end
 681 1751 a 681 1751 a
 tx@Dict begin PutEnd  end
 681 1751
a 681 1751 a
 tx@Dict begin gsave STV newpath 1.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 /TheNodeaF3 /TheNodea13 InitNC
{ GetAngle dup 40.  add /AngleA ED 40.  sub 180 add /AngleB ED 0.67
 0.67  NCCurve  } if end gsave 1.0 SLW 0. setgray 2.0 3.0 -2 0 add
DashLine  grestore  grestore end
 681 1751 a 681 1751 a
 tx@Dict begin gsave STV newpath 1.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 /TheNodea13 /TheNodea23 InitNC
{ GetAngle dup 40.  add /AngleA ED 40.  sub 180 add /AngleB ED 0.67
 0.67  NCCurve  } if end gsave 1.0 SLW 0. setgray 2.0 3.0 -2 0 add
DashLine  grestore  grestore end
 681 1751 a 681 1751
a
 tx@Dict begin gsave STV newpath 1.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 /TheNodea23 /TheNodeaI3 InitNC
{ GetAngle dup 40.  add /AngleA ED 40.  sub 180 add /AngleB ED 0.67
 0.67  NCCurve  } if end gsave 1.0 SLW 0. setgray 2.0 3.0 -2 0 add
DashLine  grestore  grestore end
 681 1751 a 266 x Fm(Fig.)15 b(13.)29 b Fw(Example)f(of)i(execution)e
(of)i Fl(F)-6 b(astFind)29 b Fw(ending)g(with)g(a)g(solid)g(edge)g
(during)g(the)f(con-)681 2117 y(struction)i(of)h Fl(CD)n(A)-8
b(WG)p Fw(\()p Fv(bbbc)p Fw(\).)31 b(The)f(insertion)h(of)g
Fl(suf)2337 2135 y Fe(1)2372 2117 y Fw(=)p Fv(bbc)f Fw(leads)h(to)f
(create)h(state)g(1.)g(Then)681 2216 y Fl(F)-6 b(astFind)29
b Fw(w)n(orks)g(from)f(I)g(with)g(path)g Fv(b)p Fw(.)h(This)g(leads)g
(to)f(the)g(middle)g(of)h(the)f(edge)g(\(I,)p Fv(bb)p
Fw(,1\))h(\()p Fg(ii)p Fw(\))681 2316 y(that)h(is)i(solid.)g(Since)f(w)
n(e)g(cannot)g(redirect)h(this)f(edge,)g(state)h(2)f(is)g(created,)h
(splitting)g(\(I,)p Fv(bb)p Fw(,1\))681 2416 y(in)n(to)c(\(I,)p
Fv(b)p Fw(,2\))g(and)f(\(2,)p Fv(b)p Fw(,1\))j(\()p Fg(iii)p
Fw(\).)e(The)g(edge)g(\(2,)p Fv(c)p Fw(,F\))h(is)f(added,)g
Fl(s)2614 2424 y Fd(x)2653 2416 y Fw(\(1\))g(is)g(set)g(to)g(2,)h(and)e
Fl(s)3346 2424 y Fd(x)3385 2416 y Fw(\(2\))h(is)681 2515
y(set)e(to)g(I.)805 3003 y Fy(Let)i Fr(r)i Fy(and)d(\()p
Fr(r)n(;)14 b( )s Fy(])28 b(b)r(e)f(the)h(state)f(and)g(transition)g
(returned)g(b)n(y)f Fs(F)-6 b(astFind)q Fy(.)27 b(If)h
Fr(r)i Fy(is)d(the)681 3102 y(exact)f(lo)r(cus)g(of)h
Fr(\015)5 b Fy(,)26 b(it)h(is)g(the)g(w)n(an)n(ted)f(state,)h(and)f(w)n
(e)g(set)h(then)g Fr(s)2754 3114 y Fo(x)2796 3102 y Fy(\()p
Fr(v)s Fy(\))d(=)e Fr(r)r Fy(.)28 b(Else,)e(if)h(\()p
Fr(r)n(;)14 b( )s Fy(])681 3202 y(is)28 b(a)g(solid)g(edge,)g(then)h(a)
f(new)h(no)r(de)g Fr(w)i Fy(is)d(created.)g(The)h(edge)f(\()p
Fr(r)n(;)14 b( )s Fy(])29 b(is)f(split,)h(its)g(initial)681
3302 y(part)c(b)r(ecomes)h(\()p Fr(r)n(;)14 b( )s(;)g(w)r
Fy(\),)27 b(and)f(the)g(transition)g(\()p Fr(w)r Fy(,)p
Fs(tail)2441 3314 y Fo(i)2469 3302 y Fy(,F\))h(is)f(added.)f(Suc)n(h)h
(an)g(example)681 3401 y(is)h(displa)n(y)n(ed)g(in)h(Figure)c(13.)805
3608 y(The)32 b(last)g(situation)f(to)h(consider)f(is)h(when)g(\()p
Fr(r)n(;)14 b( )s Fy(])32 b(is)g(non-solid.)f(Then,)h(the)g(edge)g(is)
681 3708 y(replaced)26 b(b)n(y)i(\()p Fr(r)n(;)14 b( )s(;)g(v)s
Fy(\).)28 b(Suc)n(h)g(an)f(example)g(is)h(displa)n(y)n(ed)e(in)i
(Figure)d(14.)805 3915 y(In)32 b(the)g(t)n(w)n(o)e(last)h(cases,)f
(since)i Fr(s)1863 3927 y Fo(x)1904 3915 y Fy(\()p Fr(v)s
Fy(\))h(is)e(not)g(found,)h(w)n(e)f(run)g Fs(F)-6 b(astFind)32
b Fy(again)e(with)681 4015 y Fr(s)720 4027 y Fo(x)761
4015 y Fy(\()p Fr(r)r Fy(\))23 b(and)d Fr( )s Fy(,)h(and)g(this)g(go)r
(es)f(on)g(un)n(til)h Fr(s)1964 4027 y Fo(x)2006 4015
y Fy(\()p Fr(v)s Fy(\))h(is)e(ev)n(en)n(tually)g(found,)h(that)g(is,)g
(when)g Fr( )26 b Fy(=)d Fr(")p Fy(.)805 4222 y Fs(F)-6
b(astFind)29 b Fy(is)f(used)f(in)h(the)h(same)e(manner)g(when)h(a)g
(state)f(is)h(created)f(b)n(y)h(duplication)681 4322
y(during)f(the)h(execution)f(of)h Fs(SlowFind)q Fy(.)805
4565 y(The)34 b(discussion)f(sho)n(ws)g(ho)n(w)g(su\016x)h(links)g(are)
e(up)r(dated)j(to)e(insure)h(that)g(prop)r(ert)n(y)681
4664 y(P3)24 b(is)g(satis\014ed.)h(The)g(op)r(erations)e(do)i(not)g
(in\015uence)g(the)g(correctness)e(of)i(the)g(algorithm,)681
4764 y(sk)n(etc)n(hed)35 b(in)g(the)h(last)f(section,)g(but)i(yield)e
(the)h(follo)n(wing)e(linear-time)h(algorithm.)g(Its)681
4863 y(time)28 b(complexit)n(y)f(is)g(discussed)h(in)f(the)h(next)g
(section.)p eop
%%Page: 17 17
17 16 bop 247 600 a
 tx@Dict begin tx@NodeDict begin {  } /TheNodeC 16 { .5 10.39525 3.8
false .5 11.04514 InitRnode  } NewNode end end
 247 600 a 32 w @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  0. true 3.8 neg 3.8
neg 7.24513 10.39525 .5 Frame  gsave 0.8 SLW 0. setgray 0 setlinecap
stroke  grestore end


@endspecial Fr(i)1830 600 y
 tx@Dict begin tx@NodeDict begin {  } /TheNodeD 16 { .5 10.39525 3.8
false .5 14.49026 InitRnode  } NewNode end end
 1830 600 a 31 w @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  0. true 3.8 neg 3.8
neg 10.69026 10.39525 .5 Frame  gsave 0.8 SLW 0. setgray 0 setlinecap
stroke  grestore end
 
@endspecial Fr(ii)353 1053 y
 tx@Dict begin tx@NodeDict begin { 2.88892 2 div 4.78334 0.0 add 2
div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add 2.6 add } /TheNodeaI3 11 {
InitCnode  } NewNode end end
 353 1053 a
@beginspecial @setspecial
 tx@Dict begin STP newpath 2.6 SLW 0. setgray  2.88892 2 div 4.78334
0.0 add 2 div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add CLW 2 div add 0
360 arc closepath gsave 2.6 SLW 0. setgray 0 setlinecap stroke  grestore
gsave 1.0 SLW 1. setgray stroke grestore end
 
@endspecial Fn(I)585 816 y
 tx@Dict begin tx@NodeDict begin { 3.98613 2 div 4.51111 0.0 add 2
div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add 0.8 add } /TheNodea33 11 {
InitCnode  } NewNode end end

585 816 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  3.98613 2 div 4.51111
0.0 add 2 div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add CLW 2 div add 0
360 arc closepath gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore
end
 
@endspecial Fn(3)538
1288 y
 tx@Dict begin tx@NodeDict begin { 3.98613 2 div 4.51111 0.0 add 2
div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add 0.8 add } /TheNodea23 11 {
InitCnode  } NewNode end end
 538 1288 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  3.98613 2 div 4.51111
0.0 add 2 div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add CLW 2 div add 0
360 arc closepath gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore
end
 
@endspecial
Fn(2)774 1288 y
 tx@Dict begin tx@NodeDict begin { 3.98613 2 div 4.51111 0.0 add 2
div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add 0.8 add } /TheNodea13 11 {
InitCnode  } NewNode end end
 774 1288 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  3.98613 2 div 4.51111
0.0 add 2 div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add CLW 2 div add 0
360 arc closepath gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore
end


@endspecial Fn(1)916 887 y
 tx@Dict begin tx@NodeDict begin { 3.98613 2 div 4.51111 0.0 add 2
div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add 0.8 add } /TheNodea43 11 {
InitCnode  } NewNode end end
 916 887 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  3.98613 2 div 4.51111
0.0 add 2 div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add CLW 2 div add 0
360 arc closepath gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore
end


@endspecial Fn(4)1643 1053 y
 tx@Dict begin tx@NodeDict begin { 5.15974 2 div 4.78334 0.0 add 2
div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add 2.6 add } /TheNodeaF3 11 {
InitCnode  } NewNode end end
 1643 1053 a @beginspecial
@setspecial
 tx@Dict begin STP newpath 2.6 SLW 0. setgray  5.15974 2 div 4.78334
0.0 add 2 div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add CLW 2 div add 0
360 arc closepath gsave 2.6 SLW 0. setgray 0 setlinecap stroke  grestore
gsave 1.0 SLW 1. setgray stroke grestore end
 
@endspecial Fn(F)2007 1053 y
 tx@Dict begin tx@NodeDict begin { 2.88892 2 div 4.78334 0.0 add 2
div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add 2.6 add } /TheNodeaI4 11 {
InitCnode  } NewNode end end
 2007 1053 a
@beginspecial @setspecial
 tx@Dict begin STP newpath 2.6 SLW 0. setgray  2.88892 2 div 4.78334
0.0 add 2 div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add CLW 2 div add 0
360 arc closepath gsave 2.6 SLW 0. setgray 0 setlinecap stroke  grestore
gsave 1.0 SLW 1. setgray stroke grestore end
 
@endspecial Fn(I)2239 816
y
 tx@Dict begin tx@NodeDict begin { 3.98613 2 div 4.51111 0.0 add 2
div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add 0.8 add } /TheNodea34 11 {
InitCnode  } NewNode end end
 2239 816 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  3.98613 2 div 4.51111
0.0 add 2 div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add CLW 2 div add 0
360 arc closepath gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore
end
 
@endspecial Fn(3)2191
1288 y
 tx@Dict begin tx@NodeDict begin { 3.98613 2 div 4.51111 0.0 add 2
div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add 0.8 add } /TheNodea24 11 {
InitCnode  } NewNode end end
 2191 1288 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  3.98613 2 div 4.51111
0.0 add 2 div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add CLW 2 div add 0
360 arc closepath gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore
end
 
@endspecial
Fn(2)2427 1288 y
 tx@Dict begin tx@NodeDict begin { 3.98613 2 div 4.51111 0.0 add 2
div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add 0.8 add } /TheNodea14 11 {
InitCnode  } NewNode end end
 2427 1288 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  3.98613 2 div 4.51111
0.0 add 2 div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add CLW 2 div add 0
360 arc closepath gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore
end


@endspecial Fn(1)2569 887 y
 tx@Dict begin tx@NodeDict begin { 3.98613 2 div 4.51111 0.0 add 2
div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add 0.8 add } /TheNodea44 11 {
InitCnode  } NewNode end end
 2569 887 a @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  3.98613 2 div 4.51111
0.0 add 2 div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add CLW 2 div add 0
360 arc closepath gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore
end
 
@endspecial Fn(4)3179 1053 y
 tx@Dict begin tx@NodeDict begin { 5.15974 2 div 4.78334 0.0 add 2
div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add 2.6 add } /TheNodeaF4 11 {
InitCnode  } NewNode end end
 3179 1053 a
@beginspecial @setspecial
 tx@Dict begin STP newpath 2.6 SLW 0. setgray  5.15974 2 div 4.78334
0.0 add 2 div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add CLW 2 div add 0
360 arc closepath gsave 2.6 SLW 0. setgray 0 setlinecap stroke  grestore
gsave 1.0 SLW 1. setgray stroke grestore end
 
@endspecial Fn(F)365 1341
y
 tx@Dict begin gsave STV newpath 1.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 /TheNodeaI3 /TheNodea33 InitNC
{ NCLine  } if end gsave 1.0 SLW 0. setgray 0 setlinecap stroke  grestore
 grestore end
 365 1341 a 365 1341 a
 tx@Dict begin tx@NodeDict begin /t 0.5  def LPutCoor end PutBegin
 end
 365 1341 a 365 1341 a
 tx@Dict begin langle Rot  end
 365 1341
a 365 1341 a
 tx@Dict begin { 1.0 4.72495 3.87498 0.0 langle 90 add  langle  sub
Uput exch pop add a PtoC h1 add exch w1 add exch } PutCoor PutBegin
 end
 365 1341 a 345 1357 a Fv(a)365 1341 y
 tx@Dict begin PutEnd  end
 365
1341 a 365 1341 a
 tx@Dict begin langle neg Rot  end
 365 1341 a 365 1341 a
 tx@Dict begin PutEnd  end
 365 1341 a 365
1341 a
 tx@Dict begin gsave STV newpath 1.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 /TheNodeaI3 /TheNodea23 InitNC
{ NCLine  } if end gsave 1.0 SLW 0. setgray 0 setlinecap stroke  grestore
 grestore end
 365 1341 a 365 1341 a
 tx@Dict begin tx@NodeDict begin /t 0.5  def LPutCoor end PutBegin
 end
 365 1341 a 365 1341 a
 tx@Dict begin langle Rot  end
 365
1341 a 365 1341 a
 tx@Dict begin { 1.0 4.72495 5.49998 0.0 langle 90 add  langle  sub
Uput exch pop add a PtoC h1 add exch w1 add exch } PutCoor PutBegin
 end
 365 1341 a 345 1363 a Fv(b)365 1341
y
 tx@Dict begin PutEnd  end
 365 1341 a 365 1341 a
 tx@Dict begin langle neg Rot  end
 365 1341 a 365 1341 a
 tx@Dict begin PutEnd  end
 365 1341
a 365 1341 a
 tx@Dict begin gsave STV newpath 1.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 /TheNodea23 /TheNodea13 InitNC
{ NCLine  } if end gsave 1.0 SLW 0. setgray 0 setlinecap stroke  grestore
 grestore end
 365 1341 a 365 1341 a
 tx@Dict begin tx@NodeDict begin /t 0.5  def LPutCoor end PutBegin
 end
 365 1341 a 365 1341
a
 tx@Dict begin langle Rot  end
 365 1341 a 365 1341 a
 tx@Dict begin { 1.0 4.72495 5.49998 0.0 langle 90 add  langle  sub
Uput exch pop add a PtoC h1 add exch w1 add exch } PutCoor PutBegin
 end
 365 1341 a 345 1363 a Fv(b)365
1341 y
 tx@Dict begin PutEnd  end
 365 1341 a 365 1341 a
 tx@Dict begin langle neg Rot  end
 365 1341 a 365 1341 a
 tx@Dict begin PutEnd  end
 365
1341 a 365 1341 a
 tx@Dict begin gsave STV newpath 1.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 /TheNodea13 /TheNodeaF3 InitNC
{ GetAngle dup 5.  add /AngleA ED 5.  sub 180 add /AngleB ED 0.67 
0.67  NCCurve  } if end gsave 1.0 SLW 0. setgray 0 setlinecap stroke
 grestore  grestore end
 365 1341 a 365 1341 a
 tx@Dict begin tx@NodeDict begin /t 0.5  def LPutCoor end PutBegin
 end
 365 1341 a 365
1341 a
 tx@Dict begin langle Rot  end
 365 1341 a 365 1341 a
 tx@Dict begin { 1.0 37.79956 5.49998 0.0 langle 90 add  langle  sub
Uput exch pop add a PtoC h1 add exch w1 add exch } PutCoor PutBegin
 end
 365 1341 a 208 1363 a Fv(bcabbbcb)365
1341 y
 tx@Dict begin PutEnd  end
 365 1341 a 365 1341 a
 tx@Dict begin langle neg Rot  end
 365 1341 a 365 1341 a
 tx@Dict begin PutEnd  end
 365
1341 a 365 1341 a
 tx@Dict begin gsave STV newpath 1.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 /TheNodea13 /TheNodeaF3 InitNC
{ GetAngle dup -5.  add /AngleA ED -5.  sub 180 add /AngleB ED 0.67
 0.67  NCCurve  } if end gsave 1.0 SLW 0. setgray 0 setlinecap stroke
 grestore  grestore end
 365 1341 a 365 1341 a
 tx@Dict begin tx@NodeDict begin /t 0.5  def LPutCoor end PutBegin
 end
 365 1341 a 365
1341 a
 tx@Dict begin langle Rot  end
 365 1341 a 365 1341 a
 tx@Dict begin { 1.0 33.07462 5.49998 0.0 langle 90 sub  langle  sub
Uput exch pop add a PtoC h1 add exch w1 add exch } PutCoor PutBegin
 end
 365 1341 a 228 1363 a Fv(cabbbcb)365
1341 y
 tx@Dict begin PutEnd  end
 365 1341 a 365 1341 a
 tx@Dict begin langle neg Rot  end
 365 1341 a 365 1341 a
 tx@Dict begin PutEnd  end
 365
1341 a 365 1341 a
 tx@Dict begin gsave STV newpath 1.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 /TheNodea33 /TheNodea43 InitNC
{ NCLine  } if end gsave 1.0 SLW 0. setgray 0 setlinecap stroke  grestore
 grestore end
 365 1341 a 365 1341 a
 tx@Dict begin tx@NodeDict begin /t 0.5  def LPutCoor end PutBegin
 end
 365 1341 a 365
1341 a
 tx@Dict begin langle Rot  end
 365 1341 a 365 1341 a
 tx@Dict begin { 1.0 18.89978 5.49998 0.0 langle 90 add  langle  sub
Uput exch pop add a PtoC h1 add exch w1 add exch } PutCoor PutBegin
 end
 365 1341 a 287 1363 a Fv(bbbc)365
1341 y
 tx@Dict begin PutEnd  end
 365 1341 a 365 1341 a
 tx@Dict begin langle neg Rot  end
 365 1341 a 365 1341 a
 tx@Dict begin PutEnd  end
 365
1341 a 365 1341 a
 tx@Dict begin gsave STV newpath 1.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 /TheNodea43 /TheNodeaF3 InitNC
{ GetAngle dup 5.  add /AngleA ED 5.  sub 180 add /AngleB ED 0.67 
0.67  NCCurve  } if end gsave 1.0 SLW 0. setgray 0 setlinecap stroke
 grestore  grestore end
 365 1341 a 365 1341 a
 tx@Dict begin tx@NodeDict begin /t 0.5  def LPutCoor end PutBegin
 end
 365 1341 a 365
1341 a
 tx@Dict begin langle Rot  end
 365 1341 a 365 1341 a
 tx@Dict begin { 1.0 28.34967 5.49998 0.0 langle 90 add  langle  sub
Uput exch pop add a PtoC h1 add exch w1 add exch } PutCoor PutBegin
 end
 365 1341 a 248 1363 a Fv(abbbcb)365
1341 y
 tx@Dict begin PutEnd  end
 365 1341 a 365 1341 a
 tx@Dict begin langle neg Rot  end
 365 1341 a 365 1341 a
 tx@Dict begin PutEnd  end
 365
1341 a 365 1341 a
 tx@Dict begin gsave STV newpath 1.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 /TheNodea43 /TheNodeaF3 InitNC
{ GetAngle dup -5.  add /AngleA ED -5.  sub 180 add /AngleB ED 0.67
 0.67  NCCurve  } if end gsave 1.0 SLW 0. setgray 0 setlinecap stroke
 grestore  grestore end
 365 1341 a 365 1341 a
 tx@Dict begin tx@NodeDict begin /t 0.5  def LPutCoor end PutBegin
 end
 365 1341 a 365
1341 a
 tx@Dict begin langle Rot  end
 365 1341 a 365 1341 a
 tx@Dict begin { 1.0 4.72495 5.49998 0.0 langle 90 sub  langle  sub
Uput exch pop add a PtoC h1 add exch w1 add exch } PutCoor PutBegin
 end
 365 1341 a 345 1363 a Fv(b)365
1341 y
 tx@Dict begin PutEnd  end
 365 1341 a 365 1341 a
 tx@Dict begin langle neg Rot  end
 365 1341 a 365 1341 a
 tx@Dict begin PutEnd  end
 365
1341 a 365 1341 a
 tx@Dict begin gsave STV newpath 1.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 /TheNodea33 /TheNodeaF3 InitNC
{ tx@Dict begin /r 2.84544 def /Lineto { Arcto } def end /AngleA 90.
 def /AngleB 90.  def /armA 5.69046  def /armB 10.0  def NCAngles 
} if end gsave 1.0 SLW 0. setgray 0 setlinecap stroke  grestore  grestore
end
 365 1341 a 365 1341 a
 tx@Dict begin tx@NodeDict begin /t 1.5  def LPutCoor end PutBegin
 end
 365 1341 a 365
1341 a
 tx@Dict begin { 1.0 51.9744 5.49998 0.0 langle 90 add  Uput exch pop
add a PtoC h1 add exch w1 add exch } PutCoor PutBegin  end
 365 1341 a 150 1363 a Fv(abbbcabbbcb)365 1341
y
 tx@Dict begin PutEnd  end
 365 1341 a 365 1341 a
 tx@Dict begin PutEnd  end
 365 1341 a 365 1341 a
 tx@Dict begin gsave STV newpath 1.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 /TheNodeaI3 /TheNodeaF3 InitNC
{ tx@Dict begin /r 2.84544 def /Lineto { Arcto } def end /AngleA -90.
 def /AngleB -90.  def /armA 48.36957  def /armB 10.0  def NCAngles
 } if end gsave 1.0 SLW 0. setgray 0 setlinecap stroke  grestore  grestore
end
 365 1341
a 365 1341 a
 tx@Dict begin tx@NodeDict begin /t 1.5  def LPutCoor end PutBegin
 end
 365 1341 a 365 1341 a
 tx@Dict begin { 1.0 33.07462 5.49998 0.0 langle 90 add  Uput exch
pop add a PtoC h1 add exch w1 add exch } PutCoor PutBegin  end
 365 1341 a 228 1363
a Fv(cabbbcb)365 1341 y
 tx@Dict begin PutEnd  end
 365 1341 a 365 1341 a
 tx@Dict begin PutEnd  end
 365 1341
a 365 1341 a
 tx@Dict begin gsave STV newpath 1.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 /TheNodea23 /TheNodeaF3 InitNC
{ tx@Dict begin /r 2.84544 def /Lineto { Arcto } def end /AngleA -90.
 def /AngleB -90.  def /armA 11.38092  def /armB 10.0  def NCAngles
 } if end gsave 1.0 SLW 0. setgray 0 setlinecap stroke  grestore  grestore
end
 365 1341 a 365 1341 a
 tx@Dict begin tx@NodeDict begin /t 1.5  def LPutCoor end PutBegin
 end
 365 1341 a 365 1341
a
 tx@Dict begin { 1.0 33.07462 5.49998 0.0 langle 90 add  Uput exch
pop add a PtoC h1 add exch w1 add exch } PutCoor PutBegin  end
 365 1341 a 228 1363 a Fv(cabbbcb)365 1341 y
 tx@Dict begin PutEnd  end
 365 1341
a 365 1341 a
 tx@Dict begin PutEnd  end
 365 1341 a 365 1341 a
 tx@Dict begin gsave STV newpath 1.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 /TheNodeaI4 /TheNodea34 InitNC
{ NCLine  } if end gsave 1.0 SLW 0. setgray 0 setlinecap stroke  grestore
 grestore end
 365 1341 a 365 1341
a
 tx@Dict begin tx@NodeDict begin /t 0.5  def LPutCoor end PutBegin
 end
 365 1341 a 365 1341 a
 tx@Dict begin langle Rot  end
 365 1341 a 365 1341 a
 tx@Dict begin { 1.0 4.72495 3.87498 0.0 langle 90 add  langle  sub
Uput exch pop add a PtoC h1 add exch w1 add exch } PutCoor PutBegin
 end
 365 1341
a 345 1357 a Fv(a)365 1341 y
 tx@Dict begin PutEnd  end
 365 1341 a 365 1341 a
 tx@Dict begin langle neg Rot  end
 365
1341 a 365 1341 a
 tx@Dict begin PutEnd  end
 365 1341 a 365 1341 a
 tx@Dict begin gsave STV newpath 1.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 /TheNodeaI4 /TheNodea24 InitNC
{ NCLine  } if end gsave 1.0 SLW 0. setgray 0 setlinecap stroke  grestore
 grestore end
 365 1341 a 365
1341 a
 tx@Dict begin tx@NodeDict begin /t 0.5  def LPutCoor end PutBegin
 end
 365 1341 a 365 1341 a
 tx@Dict begin langle Rot  end
 365 1341 a 365 1341 a
 tx@Dict begin { 1.0 4.72495 5.49998 0.0 langle 90 add  langle  sub
Uput exch pop add a PtoC h1 add exch w1 add exch } PutCoor PutBegin
 end
 365
1341 a 345 1363 a Fv(b)365 1341 y
 tx@Dict begin PutEnd  end
 365 1341 a 365 1341
a
 tx@Dict begin langle neg Rot  end
 365 1341 a 365 1341 a
 tx@Dict begin PutEnd  end
 365 1341 a 365 1341 a
 tx@Dict begin gsave STV newpath 1.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 /TheNodea24 /TheNodea14 InitNC
{ NCLine  } if end gsave 1.0 SLW 0. setgray 0 setlinecap stroke  grestore
 grestore end
 365 1341
a 365 1341 a
 tx@Dict begin tx@NodeDict begin /t 0.5  def LPutCoor end PutBegin
 end
 365 1341 a 365 1341 a
 tx@Dict begin langle Rot  end
 365 1341 a 365 1341
a
 tx@Dict begin { 1.0 4.72495 5.49998 0.0 langle 90 add  langle  sub
Uput exch pop add a PtoC h1 add exch w1 add exch } PutCoor PutBegin
 end
 365 1341 a 345 1363 a Fv(b)365 1341 y
 tx@Dict begin PutEnd  end
 365 1341 a 365
1341 a
 tx@Dict begin langle neg Rot  end
 365 1341 a 365 1341 a
 tx@Dict begin PutEnd  end
 365 1341 a 365 1341 a
 tx@Dict begin gsave STV newpath 1.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 /TheNodea14 /TheNodea44 InitNC
{ NCLine  } if end gsave 1.0 SLW 0. setgray 0 setlinecap stroke  grestore
 grestore end
 365
1341 a 365 1341 a
 tx@Dict begin tx@NodeDict begin /t 0.5  def LPutCoor end PutBegin
 end
 365 1341 a 365 1341 a
 tx@Dict begin langle Rot  end
 365 1341 a 365
1341 a
 tx@Dict begin { 1.0 9.44989 5.49998 0.0 langle 90 add  langle  sub
Uput exch pop add a PtoC h1 add exch w1 add exch } PutCoor PutBegin
 end
 365 1341 a 326 1363 a Fv(bc)365 1341 y
 tx@Dict begin PutEnd  end
 365 1341
a 365 1341 a
 tx@Dict begin langle neg Rot  end
 365 1341 a 365 1341 a
 tx@Dict begin PutEnd  end
 365 1341 a 365 1341
a
 tx@Dict begin gsave STV newpath 1.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 /TheNodea14 /TheNodeaF4 InitNC
{ NCLine  } if end gsave 1.0 SLW 0. setgray 0 setlinecap stroke  grestore
 grestore end
 365 1341 a 365 1341 a
 tx@Dict begin tx@NodeDict begin /t 0.5  def LPutCoor end PutBegin
 end
 365 1341 a 365 1341 a
 tx@Dict begin langle Rot  end
 365 1341
a 365 1341 a
 tx@Dict begin { 1.0 33.07462 5.49998 0.0 langle 90 add  langle  sub
Uput exch pop add a PtoC h1 add exch w1 add exch } PutCoor PutBegin
 end
 365 1341 a 228 1363 a Fv(cabbbcb)365 1341
y
 tx@Dict begin PutEnd  end
 365 1341 a 365 1341 a
 tx@Dict begin langle neg Rot  end
 365 1341 a 365 1341 a
 tx@Dict begin PutEnd  end
 365 1341
a 365 1341 a
 tx@Dict begin gsave STV newpath 1.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 /TheNodeaI4 /TheNodeaF4 InitNC
{ tx@Dict begin /r 2.84544 def /Lineto { Arcto } def end /AngleA -90.
 def /AngleB -90.  def /armA 48.36957  def /armB 10.0  def NCAngles
 } if end gsave 1.0 SLW 0. setgray 0 setlinecap stroke  grestore  grestore
end
 365 1341 a 365 1341 a
 tx@Dict begin tx@NodeDict begin /t 1.5  def LPutCoor end PutBegin
 end
 365 1341 a 365 1341
a
 tx@Dict begin { 1.0 33.07462 5.49998 0.0 langle 90 add  Uput exch
pop add a PtoC h1 add exch w1 add exch } PutCoor PutBegin  end
 365 1341 a 228 1363 a Fv(cabbbcb)365 1341 y
 tx@Dict begin PutEnd  end
 365 1341
a 365 1341 a
 tx@Dict begin PutEnd  end
 365 1341 a 365 1341 a
 tx@Dict begin gsave STV newpath 1.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 /TheNodea24 /TheNodeaF4 InitNC
{ tx@Dict begin /r 2.84544 def /Lineto { Arcto } def end /AngleA -90.
 def /AngleB -90.  def /armA 11.38092  def /armB 10.0  def NCAngles
 } if end gsave 1.0 SLW 0. setgray 0 setlinecap stroke  grestore  grestore
end
 365 1341 a 365 1341
a
 tx@Dict begin tx@NodeDict begin /t 1.5  def LPutCoor end PutBegin
 end
 365 1341 a 365 1341 a
 tx@Dict begin { 1.0 33.07462 5.49998 0.0 langle 90 add  Uput exch
pop add a PtoC h1 add exch w1 add exch } PutCoor PutBegin  end
 365 1341 a 228 1363 a Fv(cabbbcb)365
1341 y
 tx@Dict begin PutEnd  end
 365 1341 a 365 1341 a
 tx@Dict begin PutEnd  end
 365 1341 a 365 1341 a
 tx@Dict begin gsave STV newpath 1.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 /TheNodea34 /TheNodea44 InitNC
{ NCLine  } if end gsave 1.0 SLW 0. setgray 0 setlinecap stroke  grestore
 grestore end
 365
1341 a 365 1341 a
 tx@Dict begin tx@NodeDict begin /t 0.5  def LPutCoor end PutBegin
 end
 365 1341 a 365 1341 a
 tx@Dict begin langle Rot  end
 365 1341 a 365
1341 a
 tx@Dict begin { 1.0 18.89978 5.49998 0.0 langle 90 add  langle  sub
Uput exch pop add a PtoC h1 add exch w1 add exch } PutCoor PutBegin
 end
 365 1341 a 287 1363 a Fv(bbbc)365 1341 y
 tx@Dict begin PutEnd  end
 365 1341
a 365 1341 a
 tx@Dict begin langle neg Rot  end
 365 1341 a 365 1341 a
 tx@Dict begin PutEnd  end
 365 1341 a 365 1341
a
 tx@Dict begin gsave STV newpath 1.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 /TheNodea34 /TheNodeaF4 InitNC
{ tx@Dict begin /r 2.84544 def /Lineto { Arcto } def end /AngleA 90.
 def /AngleB 90.  def /armA 5.69046  def /armB 10.0  def NCAngles 
} if end gsave 1.0 SLW 0. setgray 0 setlinecap stroke  grestore  grestore
end
 365 1341 a 365 1341 a
 tx@Dict begin tx@NodeDict begin /t 1.5  def LPutCoor end PutBegin
 end
 365 1341 a 365 1341 a
 tx@Dict begin { 1.0 51.9744 5.49998 0.0 langle 90 add  Uput exch pop
add a PtoC h1 add exch w1 add exch } PutCoor PutBegin  end
 365 1341
a 150 1363 a Fv(abbbcabbbcb)365 1341 y
 tx@Dict begin PutEnd  end
 365 1341 a 365
1341 a
 tx@Dict begin PutEnd  end
 365 1341 a 365 1341 a
 tx@Dict begin gsave STV newpath 1.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 /TheNodea44 /TheNodeaF4 InitNC
{ GetAngle dup 5.  add /AngleA ED 5.  sub 180 add /AngleB ED 0.67 
0.67  NCCurve  } if end gsave 1.0 SLW 0. setgray 0 setlinecap stroke
 grestore  grestore end
 365 1341 a 365 1341 a
 tx@Dict begin tx@NodeDict begin /t 0.5  def LPutCoor end PutBegin
 end
 365
1341 a 365 1341 a
 tx@Dict begin langle Rot  end
 365 1341 a 365 1341 a
 tx@Dict begin { 1.0 28.34967 5.49998 0.0 langle 90 add  langle  sub
Uput exch pop add a PtoC h1 add exch w1 add exch } PutCoor PutBegin
 end
 365 1341 a 248
1363 a Fv(abbbcb)365 1341 y
 tx@Dict begin PutEnd  end
 365 1341 a 365 1341 a
 tx@Dict begin langle neg Rot  end
 365
1341 a 365 1341 a
 tx@Dict begin PutEnd  end
 365 1341 a 365 1341 a
 tx@Dict begin gsave STV newpath 1.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 /TheNodea44 /TheNodeaF4 InitNC
{ GetAngle dup -5.  add /AngleA ED -5.  sub 180 add /AngleB ED 0.67
 0.67  NCCurve  } if end gsave 1.0 SLW 0. setgray 0 setlinecap stroke
 grestore  grestore end
 365 1341 a 365
1341 a
 tx@Dict begin tx@NodeDict begin /t 0.5  def LPutCoor end PutBegin
 end
 365 1341 a 365 1341 a
 tx@Dict begin langle Rot  end
 365 1341 a 365 1341 a
 tx@Dict begin { 1.0 4.72495 5.49998 0.0 langle 90 sub  langle  sub
Uput exch pop add a PtoC h1 add exch w1 add exch } PutCoor PutBegin
 end
 365
1341 a 345 1363 a Fv(b)365 1341 y
 tx@Dict begin PutEnd  end
 365 1341 a 365 1341
a
 tx@Dict begin langle neg Rot  end
 365 1341 a 365 1341 a
 tx@Dict begin PutEnd  end
 365 1341 a 265 x Fm(Fig.)15 b(14.)32
b Fw(Example)d(of)i(execution)g(of)g Fl(F)-6 b(astFind)31
b Fw(ending)f(with)h(a)f(non-solid)h(edge)g(during)e(the)365
1706 y(construction)k(of)h Fl(CD)n(A)-8 b(WG)o Fw(\()p
Fv(aabbbcabbbcb)p Fw(\).)36 b(When)c Fl(suf)2114 1725
y Fe(6)2148 1706 y Fw(=)p Fv(abbbcb)i Fw(is)f(inserted)g(and)f(state)h
(4)365 1805 y(created,)25 b(w)n(e)f(ha)n(v)n(e)f(to)g(lo)r(ok)i(for)f
Fl(s)1342 1813 y Fd(x)1381 1805 y Fw(\(4\).)g(As)g Fl(s)1667
1813 y Fd(x)1706 1805 y Fw(\(3\)=I,)f(w)n(e)h(tra)n(v)n(el)g(along)g
(edges)h(from)e(I)g(to)h(\014nd)e(the)365 1905 y(end)i(of)i(the)e(path)
g(lab)r(eled)i(b)n(y)d Fv(bbbc)j Fw(with)f Fl(F)-6 b(astFind)p
Fw(.)26 b(As)e(this)h(path)f(ends)g(in)h(the)f(middle)g(of)h(the)365
2005 y(non-solid)31 b(edge)g(\(1,)p Fv(bcabbbcb)p Fw(,F\),)j(this)d
(one)f(is)i(replaced)f(b)n(y)e(\(1,)p Fv(bc)p Fw(,4\).)k(Then,)e
Fl(F)-6 b(astFind)32 b Fw(runs)365 2104 y(again)27 b(from)f(state)g(2)g
(with)g(the)f(w)n(ord)h Fv(bc)p Fw(,)g(in)g(order)g(to)g(ev)n(en)n
(tually)f(\014nd)f Fl(s)2563 2112 y Fd(x)2602 2104 y
Fw(\(4\).)p 866 2327 1881 4 v 866 3930 4 1603 v 920 2416
a Fu(Linear)30 b(Algorithm)920 2508 y Fw(1.)88 b Fg(p)25
b Ff( )h Fw(I;)76 b Fg(i)26 b Ff( )g Fw(0;)920 2599 y(2.)88
b Fu(While)27 b Fw(not)e(end)g(of)i Fg(x)e Fu(Do)920
2690 y Fw(3.)235 b(\()p Fg(q)s(;)13 b(\015)t Fw(\))26
b Ff( )f Fl(SlowFind)p Fw(\()p Fg(p)p Fw(\);)920 2781
y(4.)235 b Fu(If)26 b Fw(\()p Fg(\015)f Fw(=)c Fg(")p
Fw(\))k Fu(Then)920 2873 y Fw(5.)382 b(insert)26 b(\()p
Fg(q)s Fw(,)p Fl(tail)1771 2881 y Fd(i)1798 2873 y Fw(,F\);)920
2964 y(6.)382 b Fg(s)1397 2972 y Fd(x)1436 2964 y Fw(\(F\))25
b Ff( )h Fg(q)s Fw(;)920 3055 y(7.)382 b Fu(If)26 b Fw(\()p
Fg(q)f Ff(6)p Fw(=)g(I\))g Fu(Then)g Fg(p)g Ff( )g Fg(s)2132
3063 y Fd(x)2171 3055 y Fw(\()p Fg(q)s Fw(\))g Fu(Else)h
Fg(p)f Ff( )h Fw(I;)920 3147 y(8.)235 b Fu(Else)920 3238
y Fw(9.)382 b(create)27 b Fg(v)h Fw(lo)r(cus)f(of)f Fl(he)l(ad)2084
3246 y Fd(i)2136 3238 y Fw(splitting)h(\()p Fg(q)s(;)13
b(\015)t Fw(];)920 3329 y(10.)344 b(insert)26 b(\()p
Fg(v)s Fw(,)p Fl(tail)1774 3337 y Fd(i)1801 3329 y Fw(,F\);)920
3421 y(11.)344 b Fg(s)1397 3429 y Fd(x)1436 3421 y Fw(\(F\))25
b Ff( )h Fg(v)s Fw(;)920 3512 y(12.)344 b(\014nd)25 b
Fg(r)e Fw(=)e Fg(s)1690 3520 y Fd(x)1729 3512 y Fw(\()p
Fg(v)s Fw(\))k(with)h Fl(F)-6 b(astFind)q Fw(;)920 3603
y(13.)344 b Fg(p)25 b Ff( )h Fg(r)r Fw(;)920 3695 y(14.)197
b(up)r(date)25 b Fg(i)p Fw(;)920 3786 y(15.)50 b Fu(End)30
b(While)p Fw(;)920 3877 y(16.)50 b(mark)25 b(terminal)g(states;)p
2743 3930 V 866 3933 1881 4 v 365 4178 a Fm(4.2)95 b(Complexit)m(y)365
4374 y(Theorem)15 b(9.)41 b Fs(The)33 b(algorithm)h(that)e(builds)h
(the)g(CD)n(A)-8 b(WG)32 b(of)h(a)g(wor)l(d)g Fr(x)f
Fs(of)i Fr(\006)2950 4344 y Fp(\003)3020 4374 y Fs(c)l(an)e(b)l(e)365
4474 y(implemente)l(d)26 b(in)f(time)h Fq(O)r Fy(\()p
Fq(j)p Fr(x)p Fq(j)p Fy(\))g Fs(and)g(sp)l(ac)l(e)g Fq(O)r
Fy(\()p Fq(j)p Fr(x)p Fq(j)8 b(\002)g Fy(card\()p Fr(\006)d
Fy(\)\))26 b Fs(with)f(a)h(tr)l(ansition)f(matrix,)365
4574 y(or)30 b(in)g(time)g Fq(O)r Fy(\()p Fq(j)p Fr(x)p
Fq(j)20 b(\002)e Fy(log)44 b(card)o(\()p Fr(\006)5 b
Fy(\)\))30 b Fs(and)g(sp)l(ac)l(e)g Fq(O)r Fy(\()p Fq(j)p
Fr(x)p Fq(j)p Fy(\))i Fs(with)e(adjac)l(ency)i(lists.)365
4764 y(Pr)l(o)l(of.)43 b Fy(As)31 b(recalled)e(in)h(section)25
b(3.1,)k(the)i(size)f(of)g Fs(CD)n(A)-8 b(WG)o Fy(\()p
Fr(x)p Fy(\))32 b(is)e(linear)f(in)i(the)f(length)365
4863 y(of)35 b Fr(x)p Fy(,)g(b)r(oth)g(in)g(term)g(of)f(n)n(um)n(b)r
(er)h(of)g(states)f(and)g(n)n(um)n(b)r(er)h(of)f(edges.)g(T)-7
b(ables)34 b Fs(endp)l(os)3182 4884 y Fo(x)3224 4863
y Fy(,)p eop
%%Page: 18 18
18 17 bop 681 387 a Fs(length)895 408 y Fo(x)973 387
y Fy(and)35 b Fr(s)1181 399 y Fo(x)1259 387 y Fy(tak)n(e)g
Fq(O)r Fy(\()p Fr(S)5 b(tates)p Fy(\()p Fr(x)p Fy(\)\))36
b(space.)f(So,)h(an)f(implemen)n(tation)h(b)n(y)f(transition)681
487 y(matrix)27 b(tak)n(es)f Fq(O)r Fy(\()p Fq(j)p Fr(x)p
Fq(j)20 b(\002)e Fy(card)o(\()p Fr(\006)5 b Fy(\)\))28
b(space.)f(By)h(adjacency)e(lists,)i(it)g(tak)n(es)f
Fq(O)r Fy(\()p Fq(j)p Fr(x)p Fq(j)p Fy(\))i(space.)1412
1779 y Fi(I)p 3 setlinewidth np 1602 1943 57 0.00 360.00
arc st 1594 1976 a(I)p 0 setgray 3 setlinewidth np 1038
1279 9 9 0.00 360.00 ellipse fil 0 setgray np 1038 1279
9 9 0.00 360.00 ellipse st 3 setlinewidth np 1038 1279
9 9 0.00 360.00 ellipse st 0 setgray 3 setlinewidth np
1129 1279 9 9 0.00 360.00 ellipse fil 0 setgray np 1129
1279 9 9 0.00 360.00 ellipse st 3 setlinewidth np 1129
1279 9 9 0.00 360.00 ellipse st 0 setgray 3 setlinewidth
np 1221 1279 9 9 0.00 360.00 ellipse fil 0 setgray np
1221 1279 9 9 0.00 360.00 ellipse st 3 setlinewidth np
1221 1279 9 9 0.00 360.00 ellipse st 3 setlinewidth np
1865 1943 57 0.00 360.00 arc st 3 setlinewidth np 2524
1746 57 0.00 360.00 arc st 3 setlinewidth np 2145 1943
57 0.00 360.00 arc st 3 setlinewidth np 1865 1746 57
0.00 360.00 arc st 3 setlinewidth np 1595 1187 a 1595
1370 li st 3 setlinewidth np 1595 1187 a 1595 1370 li
st 3 setlinewidth np 1857 1086 a 1857 1366 li st 3 setlinewidth
np 2137 1187 a 2137 1370 li st 3 setlinewidth np 2137
1187 a 2137 1370 li st 3 setlinewidth np 956 1187 a 3330
1187 li 3330 1370 li 956 1370 li closepath st 3 setlinewidth
np 1412 1021 a 1430 1021 li st 3 setlinewidth np 1454
1021 a 1472 1021 li st 3 setlinewidth np 1496 1021 a
1514 1021 li st 3 setlinewidth np 1538 1021 a 1556 1021
li st 3 setlinewidth np 1579 1021 a 1597 1021 li st 3
setlinewidth np 1621 1021 a 1639 1021 li st 3 setlinewidth
np 1663 1021 a 1681 1021 li st 3 setlinewidth np 1705
1021 a 1723 1021 li st 3 setlinewidth np 1746 1021 a
1764 1021 li st 3 setlinewidth np 1788 1021 a 1806 1021
li st 3 setlinewidth np 1830 1021 a 1848 1021 li st 3
setlinewidth np 1871 1021 a 1889 1021 li st 3 setlinewidth
np 1913 1021 a 1931 1021 li st 3 setlinewidth np 1955
1021 a 1973 1021 li st 3 setlinewidth np 1997 1021 a
2015 1021 li st 3 setlinewidth np 2038 1021 a 2056 1021
li st 3 setlinewidth np 2080 1021 a 2098 1021 li st 3
setlinewidth np 2122 1021 a 2140 1021 li st 3 setlinewidth
np 2164 1021 a 2182 1021 li st 3 setlinewidth np 2205
1021 a 2223 1021 li st 3 setlinewidth np 2247 1021 a
2265 1021 li st 3 setlinewidth np 2289 1021 a 2307 1021
li st 3 setlinewidth np 2331 1021 a 2349 1021 li st 3
setlinewidth np 2372 1021 a 2390 1021 li st 3 setlinewidth
np 2414 1021 a 2432 1021 li st 3 setlinewidth np 2456
1021 a 2474 1021 li st 3 setlinewidth np 2497 1021 a
2515 1021 li st 0 setgray 3 setlinewidth np 1456 1009
a 1412 1021 li 1456 1031 li closepath fil 0 setgray np
1456 1009 a 1412 1021 li 1456 1031 li closepath st 0 setgray
3 setlinewidth np 2472 1031 a 2516 1021 li 2472 1009
li closepath fil 0 setgray np 2472 1031 a 2516 1021 li
2472 1009 li closepath st 3 setlinewidth np 2516 1021
a 2516 1366 li st 3 setlinewidth np 1412 889 a 1412 1366
li st 3 setlinewidth np 1857 1087 a 1875 1087 li st 3
setlinewidth np 1899 1087 a 1917 1087 li st 3 setlinewidth
np 1942 1087 a 1960 1087 li st 3 setlinewidth np 1984
1087 a 2002 1087 li st 3 setlinewidth np 2026 1087 a
2044 1087 li st 3 setlinewidth np 2068 1087 a 2086 1087
li st 3 setlinewidth np 2110 1087 a 2128 1087 li st 3
setlinewidth np 2152 1087 a 2170 1087 li st 3 setlinewidth
np 2194 1087 a 2212 1087 li st 3 setlinewidth np 2237
1087 a 2255 1087 li st 3 setlinewidth np 2279 1087 a
2297 1087 li st 3 setlinewidth np 2321 1087 a 2339 1087
li st 3 setlinewidth np 2363 1087 a 2381 1087 li st 3
setlinewidth np 2405 1087 a 2423 1087 li st 3 setlinewidth
np 2447 1087 a 2465 1087 li st 3 setlinewidth np 2490
1087 a 2508 1087 li st 0 setgray 3 setlinewidth np 1901
1075 a 1857 1086 li 1901 1097 li closepath fil 0 setgray
np 1901 1075 a 1857 1086 li 1901 1097 li closepath st
0 setgray 3 setlinewidth np 2464 1097 a 2508 1086 li
2464 1075 li closepath fil 0 setgray np 2464 1097 a 2508
1086 li 2464 1075 li closepath st 3 setlinewidth np 3324
889 a 3324 1185 li st 3 setlinewidth np 1413 889 a 1431
889 li st 3 setlinewidth np 1454 889 a 1472 889 li st
3 setlinewidth np 1495 889 a 1513 889 li st 3 setlinewidth
np 1536 889 a 1554 889 li st 3 setlinewidth np 1577 889
a 1595 889 li st 3 setlinewidth np 1618 889 a 1636 889
li st 3 setlinewidth np 1660 889 a 1678 889 li st 3 setlinewidth
np 1701 889 a 1719 889 li st 3 setlinewidth np 1742 889
a 1760 889 li st 3 setlinewidth np 1783 889 a 1801 889
li st 3 setlinewidth np 1824 889 a 1842 889 li st 3 setlinewidth
np 1865 889 a 1883 889 li st 3 setlinewidth np 1906 889
a 1924 889 li st 3 setlinewidth np 1947 889 a 1965 889
li st 3 setlinewidth np 1989 889 a 2007 889 li st 3 setlinewidth
np 2030 889 a 2048 889 li st 3 setlinewidth np 2071 889
a 2089 889 li st 3 setlinewidth np 2112 889 a 2130 889
li st 3 setlinewidth np 2153 889 a 2171 889 li st 3 setlinewidth
np 2194 889 a 2212 889 li st 3 setlinewidth np 2235 889
a 2253 889 li st 3 setlinewidth np 2276 889 a 2294 889
li st 3 setlinewidth np 2318 889 a 2336 889 li st 3 setlinewidth
np 2359 889 a 2377 889 li st 3 setlinewidth np 2400 889
a 2418 889 li st 3 setlinewidth np 2441 889 a 2459 889
li st 3 setlinewidth np 2482 889 a 2500 889 li st 3 setlinewidth
np 2523 889 a 2541 889 li st 3 setlinewidth np 2564 889
a 2582 889 li st 3 setlinewidth np 2606 889 a 2624 889
li st 3 setlinewidth np 2647 889 a 2665 889 li st 3 setlinewidth
np 2688 889 a 2706 889 li st 3 setlinewidth np 2729 889
a 2747 889 li st 3 setlinewidth np 2770 889 a 2788 889
li st 3 setlinewidth np 2811 889 a 2829 889 li st 3 setlinewidth
np 2852 889 a 2870 889 li st 3 setlinewidth np 2893 889
a 2911 889 li st 3 setlinewidth np 2935 889 a 2953 889
li st 3 setlinewidth np 2976 889 a 2994 889 li st 3 setlinewidth
np 3017 889 a 3035 889 li st 3 setlinewidth np 3058 889
a 3076 889 li st 3 setlinewidth np 3099 889 a 3117 889
li st 3 setlinewidth np 3140 889 a 3158 889 li st 3 setlinewidth
np 3181 889 a 3199 889 li st 3 setlinewidth np 3222 889
a 3240 889 li st 3 setlinewidth np 3264 889 a 3282 889
li st 3 setlinewidth np 3305 889 a 3323 889 li st 0 setgray
3 setlinewidth np 1457 878 a 1413 889 li 1457 899 li
closepath fil 0 setgray np 1457 878 a 1413 889 li 1457
899 li closepath st 0 setgray 3 setlinewidth np 3279
899 a 3324 889 li 3279 878 li closepath fil 0 setgray
np 3279 899 a 3324 889 li 3279 878 li closepath st 3
setlinewidth np 1412 1630 a 1412 1399 li st 0 setgray
3 setlinewidth np 1424 1443 a 1412 1399 li 1401 1443
li closepath fil 0 setgray np 1424 1443 a 1412 1399 li
1401 1443 li closepath st 3 setlinewidth np 1857 1630
a 1857 1399 li st 0 setgray 3 setlinewidth np 1868 1443
a 1857 1399 li 1846 1443 li closepath fil 0 setgray np
1868 1443 a 1857 1399 li 1846 1443 li closepath st 3
setlinewidth np 1420 1746 57 0.00 360.00 arc st 3 setlinewidth
np 2137 1861 a 2137 1399 li st 0 setgray 3 setlinewidth
np 2148 1443 a 2137 1399 li 2126 1443 li closepath fil
0 setgray np 2148 1443 a 2137 1399 li 2126 1443 li closepath
st 2500 1762 a Fb(v)p 3 setlinewidth np 2516 1630 a 2516
1399 li st 0 setgray 3 setlinewidth np 2527 1443 a 2516
1399 li 2505 1443 li closepath fil 0 setgray np 2527
1443 a 2516 1399 li 2505 1443 li closepath st 3 setlinewidth
np 1676 1943 a 1791 1943 li st 0 setgray 3 setlinewidth
np 1748 1954 a 1791 1943 li 1748 1932 li closepath fil
0 setgray np 1748 1954 a 1791 1943 li 1748 1932 li closepath
st 3 setlinewidth np 1940 1943 a 1940 1943 li 2072 1943
li st 0 setgray 3 setlinewidth np 2027 1954 a 2072 1943
li 2027 1932 li closepath fil 0 setgray np 2027 1954
a 2072 1943 li 2027 1932 li closepath st 3 setlinewidth
np 1940 1745 a 2434 1745 li st 0 setgray 3 setlinewidth
np 2390 1756 a 2434 1745 li 2390 1734 li closepath fil
0 setgray np 2390 1756 a 2434 1745 li 2390 1734 li closepath
st 3 setlinewidth np 1527 1745 a 1775 1745 li st 0 setgray
3 setlinewidth np 1731 1756 a 1775 1745 li 1731 1734
li closepath fil 0 setgray np 1731 1756 a 1775 1745 li
1731 1734 li closepath st 3 setlinewidth np 1593 1861
a 1593 1399 li st 0 setgray 3 setlinewidth np 1605 1443
a 1593 1399 li 1583 1443 li closepath fil 0 setgray np
1605 1443 a 1593 1399 li 1583 1443 li closepath st 902
1133 a Fa(x)1960 1297 y Fr(\016)-310 b(\014)2259 1285
y( )-827 b(\013)1206 b Fs(tail)2862 1297 y Fo(i)2133
1139 y Fr(\015)2280 845 y Fs(suf)2384 865 y Fo(i)1853
993 y Fs(he)l(ad)2014 1005 y Fo(i)1456 1462 y Fr(i)407
b(j)629 b(k)1841 1762 y Fb(q)1841 1960 y(s)234 b(r)681
2273 y Fm(Fig.)15 b(15.)26 b Fw(P)n(ositions)g(of)g(lab)r(els)h(when)e
Fl(suf)1933 2292 y Fd(i)1984 2273 y Fw(is)h(inserted.)g(States)f(I,)p
Fg(q)s Fw(,)p Fg(v)k Fw(represen)n(t)c(the)f(sc)n(heme)h(of)681
2373 y Fl(SlowFind)g Fw(and)h(states)g(I,)p Fg(s)p Fw(,)p
Fg(r)i Fw(represen)n(t)d(the)g(sc)n(heme)g(of)i(searc)n(hing)f(for)h
Fg(s)2855 2381 y Fd(x)2893 2373 y Fw(\()p Fg(q)s Fw(\),)f(as)g(in)g
(Figure)g(12.)805 2665 y Fy(The)19 b(complexit)n(y)f(of)g(the)h
(algorithm)f(essen)n(tially)f(dep)r(ends)i(on)f(the)h(n)n(um)n(b)r(er)g
(of)f(branc)n(h-)681 2765 y(ings)i(made)g(on)g(states)g(of)g(the)h
(automaton.)f(W)-7 b(e)21 b(pro)n(v)n(e)d(that)j(this)g(n)n(um)n(b)r
(er)f(is)g(linear,)g(whic)n(h)681 2865 y(implies)26 b(the)h(running)f
(times)h(of)f(the)h(statemen)n(t:)f Fq(O)r Fy(\()p Fq(j)p
Fr(x)p Fq(j)p Fy(\))i(with)f(a)f(transition)f(matrix)h(and)681
2964 y Fq(O)r Fy(\()p Fq(j)p Fr(x)p Fq(j)19 b(\002)g
Fy(log)41 b(card)o(\()p Fr(\006)5 b Fy(\)\))28 b(with)g(adjacency)f
(lists.)805 3067 y(Branc)n(hings)33 b(during)h(the)h(execution)f(of)g
(the)h(algorithm)e(are)g(done)h(during)g(calls)g(to)681
3166 y Fs(SlowFind)f Fy(and)e Fs(F)-6 b(astFind)p Fy(.)32
b(The)f(generic)g(situation)g(is)g(displa)n(y)n(ed)g(in)g(Figure)25
b(15.)30 b(When)681 3266 y Fs(SlowFind)38 b Fy(op)r(erates,)d(the)i
(curren)n(t)f(letter)g(of)h Fr(x)p Fy(,)g(p)r(oin)n(ted)g(b)n(y)f
Fr(k)s Fy(,)g(is)h(compared)e(with)i(a)681 3366 y(letter)24
b(of)g(the)g(lab)r(el)h(of)f(an)f(edge.)h(Doing)g(so,)f
Fr(k)k Fy(is)d(strictly)g(incremen)n(ted,)g(and)g(nev)n(er)f(after)681
3465 y(decremen)n(ted.)j(During)g(calls)f(to)h Fs(F)-6
b(astFind)q Fy(,)26 b(eac)n(h)g(letter)g(comparison)e(increases)h
(strictly)681 3565 y(the)g(v)-5 b(alue)25 b(of)g Fr(j)5
b Fy(,)25 b(v)-5 b(alue)25 b(that)g(nev)n(er)f(decreases)f(hereafter.)i
(This)g(sho)n(ws)e(that)j(the)f(n)n(um)n(b)r(er)681 3665
y(of)i(branc)n(hings)f(is)i(linear.)805 3767 y(This)g(ends)f(the)h(sk)n
(etc)n(h)f(of)h(the)g(pro)r(of.)681 4051 y Ft(5)112 b(Conclusion)681
4266 y Fy(W)-7 b(e)33 b(ha)n(v)n(e)f(considered)g(the)h(Compact)g
(Direct)g(Acyclic)g(W)-7 b(ord)33 b(Graph,)f(whic)n(h)h(is)g(an)g(ef-)
681 4365 y(\014cien)n(t)e(compact)f(data)g(structure)h(to)f(represen)n
(t)g(all)h(sub)n(w)n(ords,)e(or)h(factors,)g(of)g(a)h(w)n(ord.)681
4465 y(There)g(are)h(sev)n(eral)e(data)i(structures)f(used)h(to)g
(store)g(this)g(set.)g(The)h(presen)n(t)e(structure)681
4565 y(pro)n(vides)f(an)h(in)n(teresting)g(space)g(gain)g(compared)g
(to)g(the)h(standard)f(D)n(A)-9 b(W)n(G,)32 b(and)g(also)681
4664 y(when)c(compared)f(with)h(su\016x)g(trees.)g(F)-7
b(rom)27 b(the)i(theoretical)e(p)r(oin)n(t)h(of)g(view,)g(the)h(upp)r
(er)681 4764 y(b)r(ounds)j(are)f(of)h Fq(j)p Fr(x)p Fq(j)22
b Fy(+)f(1)32 b(states)g(and)g(2)p Fq(j)p Fr(x)p Fq(j)21
b(\000)g Fy(2)32 b(transitions.)f(This)h(sa)n(v)n(es)e
Fq(j)p Fr(x)p Fq(j)j Fy(states)f(and)681 4863 y Fq(j)p
Fr(x)p Fq(j)g Fy(transitions)e(of)h(the)h(D)n(A)-9 b(W)n(G)31
b(and)g(at)g(the)h(same)e(time)i(leads)f(to)g(a)g(faster)f(use.)h(F)-7
b(rom)p eop
%%Page: 19 19
19 18 bop 365 387 a Fy(the)24 b(practical)f(p)r(oin)n(t)h(of)f(view,)h
(exp)r(erimen)n(ts)f(on)g(genomic)g(DNA)i(sequences)e(and)g(on)g(ran-)
365 487 y(dom)34 b(strings)e(displa)n(y)h(a)g(memory)g(space)g(gain)g
(of)g(50\045)g(with)h(resp)r(ect)f(to)h(the)g(D)n(A)-9
b(W)n(G.)365 587 y(Moreo)n(v)n(er,)21 b(when)j(the)f(size)g(of)h(the)f
(alphab)r(et)h(is)f(small,)g(transition)g(matrices)g(do)g(not)g(tak)n
(e)365 686 y(more)30 b(space)h(than)g(adjacency)f(lists,)h(k)n(eeping)f
(direct)g(access)g(to)h(transitions.)f(Th)n(us,)h(w)n(e)365
786 y(can)h(construct)f(the)h(data)g(structure)f(of)h(t)n(wice)g
(larger)e(strings,)h(k)n(eeping)g(them)h(in)g(main)365
886 y(memory)-7 b(,)27 b(whic)n(h)h(is)f(actually)g(imp)r(ortan)n(t)g
(to)h(get)f(e\016cien)n(t)h(treatmen)n(ts.)490 977 y(This)18
b(w)n(ork)f(sho)n(ws)h(that)h(the)f(CD)n(A)-9 b(W)n(G)19
b(can)g(b)r(e)f(constructed)g(directly)-7 b(.)19 b(The)f(algorithm)365
1068 y(is)23 b(linear)f(in)h(the)h(length)f(of)g(the)g(text)g(\(on)g(a)
g(\014xed)g(alphab)r(et\).)g(Of)g(course,)f(it)h(is)g(simpler)f(to)365
1159 y(compute,)f(b)n(y)f(reduction,)g(the)h(CD)n(A)-9
b(W)n(G)21 b(from)f(the)h(D)n(A)-9 b(W)n(G.)21 b(But)g(the)g(presen)n
(t)e(algorithm)365 1251 y(sa)n(v)n(es)26 b(time)i(and)g(space)e(sim)n
(ultaneously)-7 b(.)365 1498 y Ft(References)404 1667
y Fw(1.)42 b(A.)25 b(Ap)r(ostolico.)37 b(The)27 b(m)n(yriad)e(virtues)h
(of)h(sub)n(w)n(ord)f(trees.)37 b(In)26 b(A.)e(Ap)r(ostolico)k(&)d(Z.)h
(Galil,)505 1758 y(editor,)g Fl(Combinatorial)i(A)n(lgorithms)g(on)g
(Wor)l(ds.)p Fw(,)e(pages)h(85{95.)h(Springer-V)-6 b(erlag,)26
b(1985.)404 1850 y(2.)42 b(A.)25 b(Blumer,)20 b(J.)26
b(Blumer,)20 b(A.)25 b(Ehrenfeuc)n(h)n(t,)20 b(D.)25
b(Haussler,)d(and)e(R.)25 b(McConnel.)33 b(Linear)21
b(size)505 1941 y(\014nite)28 b(automata)h(for)h(the)e(set)h(of)h(all)g
(sub)n(w)n(ords)f(of)h(a)f(w)n(ord:)g(an)g(outline)g(of)h(results.)44
b Fl(Bul)t(l.)505 2032 y(Eur)l(op)l(e)l(an)29 b(Asso)l(c.)f(The)l(or)l
(et.)h(Comput.)f(Sci.)p Fw(,)d(21:12{20,)k(1983.)404
2124 y(3.)42 b(A.)25 b(Blumer,)32 b(J.)26 b(Blumer,)32
b(D.)25 b(Haussler,)33 b(A.)25 b(Ehrenfeuc)n(h)n(t,)32
b(M.T.)i(Chen,)f(and)f(J.)25 b(Seiferas.)505 2215 y(The)34
b(smallest)h(automaton)f(recognizing)i(the)d(sub)n(w)n(ords)i(of)g(a)f
(text.)59 b Fl(The)l(or)l(et.)37 b(Comput.)505 2306 y(Sci.)p
Fw(,)25 b(40:31{55,)k(1985.)404 2398 y(4.)42 b(A.)25
b(Blumer,)35 b(J.)26 b(Blumer,)36 b(D.)24 b(Haussler,)37
b(and)f(R.)24 b(McConnell.)66 b(Complete)36 b(in)n(v)n(erted)f(\014les)
505 2489 y(for)27 b(e\016cien)n(t)g(text)f(retriev)l(al)i(and)e
(analysis.)39 b Fl(Journal)29 b(of)f(the)h(Asso)l(ciation)h(for)f
(Computing)505 2580 y(Machinery)p Fw(,)e(34\(3\):578{595,)j(July)25
b(1987.)404 2672 y(5.)42 b(A.)25 b(Blumer,)37 b(D.)24
b(Haussler,)39 b(and)d(A.)25 b(Ehrenfeuc)n(h)n(t.)68
b(Av)n(erage)37 b(sizes)h(of)g(su\016x)e(trees)h(and)505
2763 y(da)n(wgs.)e Fl(Discr)l(ete)29 b(Applie)l(d)f(Mathematics)p
Fw(,)f(24:37{45,)i(1989.)404 2854 y(6.)42 b(B.)26 b(Clift,)h(D.)e
(Haussler,)i(R.)e(McDonnell,)h(T.D.)h(Sc)n(hneider,)e(and)h(G.D.)g
(Stormo.)34 b(Sequence)505 2946 y(landscap)r(es.)h Fl(Nucleic)28
b(A)l(cids)g(R)l(ese)l(ar)l(ch)p Fw(,)g(4\(1\):141{158,)i(1986.)404
3037 y(7.)42 b(M.)26 b(Cro)r(c)n(hemore.)62 b(Rec)n(herc)n(he)35
b(lin)n(\023)-36 b(eaire)36 b(d'un)e(carr)n(\023)-36
b(e)36 b(dans)f(un)g(mot.)61 b Fl(C.)36 b(R.)f(A)l(c)l(ad.)i(Sci.)505
3128 y(Paris)28 b(S)n(\023)-37 b(er.)28 b(I)f(Math.)p
Fw(,)f(296:781{784,)k(1983.)404 3220 y(8.)42 b(M.)26
b(Cro)r(c)n(hemore.)54 b(Optimal)32 b(factor)h(tranducers.)55
b(In)31 b(A.)25 b(Ap)r(ostolico)34 b(and)e(Z.)25 b(Galil,)34
b(edi-)505 3311 y(tors,)28 b Fl(Combinatorial)g(A)n(lgorithms)i(on)f
(Wor)l(ds)p Fw(,)e(v)n(olume)d(12)k(of)g Fl(NA)-6 b(TO)28
b(A)l(dvanc)l(e)l(d)i(Scienc)l(e)505 3402 y(Institutes,)f(Series)f(F)p
Fw(,)e(pages)h(31{44.)h(Springer-V)-6 b(erlag,)26 b(Berlin,)g(1985.)404
3494 y(9.)42 b(M.)26 b(Cro)r(c)n(hemore.)33 b(T)-6 b(ransducers)22
b(and)f(rep)r(etitions.)34 b Fl(The)l(or)l(et.)25 b(Comput.)e(Sci.)p
Fw(,)f(45\(1\):63{86,)505 3585 y(1986.)365 3676 y(10.)43
b(M.)26 b(Cro)r(c)n(hemore.)38 b(Longest)27 b(common)f(factor)i(of)f(t)
n(w)n(o)h(w)n(ords.)38 b(In)26 b(H.)f(Ehrig,)j(R.)d(Ko)n(w)n(alski,)505
3768 y(G.)g(Levi,)30 b(and)g(U.)25 b(Mon)n(tanari,)31
b(editors,)f Fl(T)-6 b(APSOFT)p Fw(,)30 b(n)n(um)n(b)r(er)e(249)j(in)f
(Lecture)f(Notes)h(in)505 3859 y(Computer)25 b(Science,)h(pages)g
(26{36.)i(Springer-V)-6 b(erlag,)26 b(Berlin,)h(1987.)365
3950 y(11.)43 b(M.)26 b(Cro)r(c)n(hemore)62 b(and)g(C.)26
b(Hancart.)143 b(Automata)61 b(for)i(matc)n(hing)f(patterns.)143
b(In)505 4041 y(G.)25 b(Rozen)n(b)r(erg)i(and)e(A.)g(Salomaa,)i
(editors,)g Fl(Handb)l(o)l(ok)j(of)d(F)-6 b(ormal)28
b(L)l(anguages)p Fw(.)h(Springer-)505 4133 y(V)-6 b(erlag,)26
b(1997.)36 b(to)26 b(app)r(ear.)365 4224 y(12.)43 b(M.)26
b(Cro)r(c)n(hemore)h(and)g(W.)e(Rytter.)38 b Fl(T)-6
b(ext)30 b(A)n(lgorithms)p Fw(,)e(c)n(hapter)f(5-6,)g(pages)h(73{130.)
41 b(Ox-)505 4315 y(ford)26 b(Univ)n(ersit)n(y)f(Press,)i(New)f(Y)-6
b(ork,)25 b(1994.)365 4407 y(13.)43 b(M.)26 b(F)-6 b(arac)n(h.)61
b(Optimal)34 b(su\016x)h(tree)g(construction)g(with)g(large)h(alphab)r
(ets.)62 b(man)n(uscript,)505 4498 y(Octob)r(er)26 b(1996.)365
4589 y(14.)43 b(R.)25 b(W.)i(Irving.)37 b(Su\016x)26
b(binary)g(searc)n(h)h(trees.)38 b Fl(T)-6 b(e)l(chnic)l(al)29
b(r)l(ep)l(ort)i(TR-1995-7,)f(Computing)505 4681 y(Scienc)l(e)e(Dep)l
(artment,)h(University)g(of)e(Glasgow)p Fw(,)g(April)f(1995.)365
4772 y(15.)43 b(J.)26 b(Karkk)l(ainen.)33 b(Su\016x)24
b(cactus)h(:)h(a)f(cross)h(b)r(et)n(w)n(een)f(su\016x)g(tree)g(and)g
(su\016x)f(arra)n(y)-6 b(.)34 b Fl(Combi-)505 4863 y(natorial)28
b(Pattern)h(Matching)p Fw(,)e(937:191{204,)k(July)25
b(1995.)p eop
%%Page: 20 20
20 19 bop 681 387 a Fw(16.)42 b(C.)26 b(Lefevre)e(and)f(J-E.)h(Ik)n
(eda.)33 b(The)24 b(p)r(osition)g(end-set)f(tree:)h(A)f(small)h
(automaton)f(for)h(w)n(ord)820 479 y(recognition)j(in)f(biological)i
(sequences.)35 b Fl(CABIOS)p Fw(,)25 b(9\(3\):343{348,)30
b(1993.)681 570 y(17.)42 b(U.)25 b(Man)n(b)r(er)e(and)g(G.)i(My)n(ers.)
34 b(Su\016x)22 b(arra)n(ys:)h(A)g(new)g(metho)r(d)e(for)j(on-line)f
(string)g(searc)n(hes.)820 661 y Fl(SIAM)k(J.)h(Comput.)p
Fw(,)e(22\(5\):935{948,)k(Oct.)25 b(1993.)681 753 y(18.)42
b(E.)26 b(McCreigh)n(t.)43 b(A)28 b(space-economical)i(su\016x)d(tree)i
(construction)g(algorithm.)42 b Fl(Journal)31 b(of)820
844 y(the)e(A)n(CM)p Fw(,)c(23\(2\):262{272,)30 b(Apr.)c(1976.)681
935 y(19.)42 b(G.)26 b(A.)f(Stephen.)34 b Fl(String)28
b(se)l(ar)l(ching)h(algorithms)p Fw(.)36 b(W)-6 b(orld)25
b(Scien)n(ti\014c)g(Press,)i(1994.)681 1027 y(20.)42
b(E.)26 b(Ukk)n(onen.)33 b(On-line)25 b(construction)h(of)g(su\016x)f
(trees.)35 b Fl(A)n(lgorithmic)l(a)p Fw(,)27 b(14:249{260,)j(1995.)681
1118 y(21.)42 b(E.)26 b(Ukk)n(onen)32 b(and)i(D.)25 b(W)-6
b(o)r(o)r(d.)59 b(Appro)n(ximate)32 b(string)j(matc)n(hing)e(with)h
(su\016x)f(automata.)820 1209 y Fl(A)n(lgorithmic)l(a)p
Fw(,)27 b(10\(5\):353{364,)j(1993.)681 1301 y(22.)42
b(P)-6 b(.)26 b(W)-6 b(einer.)35 b(Linear)27 b(pattern)f(matc)n(hing)f
(algorithm.)37 b(In)25 b Fl(14th)k(A)n(nnual)g(IEEE)e(Symp)l(osium)820
1392 y(on)h(Switching)g(and)g(A)n(utomata)h(The)l(ory)p
Fw(,)e(pages)g(1{11,)g(W)-6 b(ashington,)26 b(DC,)g(1973.)681
4847 y(This)g(article)h(w)n(as)g(pro)r(cessed)f(using)g(the)f(L)1936
4830 y Fe(A)1969 4847 y Fw(T)2011 4863 y(E)2055 4847
y(X)g(macro)h(pac)n(k)l(age)g(with)g(LLNCS)f(st)n(yle)p
eop
%%Trailer
end
userdict /end-hook known{end-hook}if
%%EOF
