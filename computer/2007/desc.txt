p1 - na praktika nula ozna4ava delimost na p. Sledovatelno trqbva samo da prebroim kolko puti p se sururja kato mnojitel v rezultata. Za celta, poneje 4islata sa mnogo golemi, faktorizirame p i kato teku6t rezultat pazim za vseki ot prostite deliteli na p kolko puti se sre6ta v rezultata. Taka za otgovor vzemame minimalnata ot stoinostite, polu4eni kato za vseki prosto delitel na p vzemem broq puti, koito se sre6ta v rezultata, i go razdelim na broq puti, koito se sre6ta v p. 

p2 - puskame binary search po maximalnoto razstoqnie. Za vsqko razstoqnie R pravim se4enie na "priemlivite" intervali na vsi4kite to4ki, kato pod premliv interval za dadena to4ka i dadeno R s4itame vsi4ki to4ki ot osta Ox, koito ne sa na razstoqnie po-golqmo ot R ot dadenata. Na praktika tova e intervala zaklu4en mejdu 2te to4ki na presi4ane na okrajnostta s centar dadenata to4ka i radius R sys osta Ox. Taka za vsqko R kazvame koi sa to4kite ot osta Ox, koito sa na razstoqnie po-malko ili ravno na R ot vsi4ki dadeni to4ki. Ako takiva to4ki nqma, tursim po-golqmo R, ako sa nqkolko (bezbroi), tursim po-malko R. Nakraq izvejdame. 

p3 - izpolzvame greedy algorithm: na vsqka stupka vzemame dvete nai-malki 4isla, mahame gi i zapisvame sbora im (koito e minimalen). Za celta izpolzvame prioritetna opa6ka. Za6to raboti - ne znam, no imam dobro pred4uvstvie :)

p4 - pravim 3 suobrajeniq. Za qsnota, kogato govorim 4e dadena oblast ot grid-a kodira triugulnik, 6te ozna4ava 4e nqma red ili stulb ot tazi oblast, prez koito da ne minava strana na triugulnika. Parvo, vijda se 4e vseki kvadrat ot NxN kvadrat4eta kodira 4 ot tursenite triugulnici (s kateti s duljina N). Vtoro, vseki pravougulnik Nx2N kodira 2 triugulnika (s kateti sqrt(N*N*2)). Treto, vseki pravougulnik NxM sus M = N+1..N*2-1 (vklu4itelno) kodira 4 triugulnika (s kateti sqrt(sqr(N)+sqr(M-N)) ). Pri tova nqma pripokrivane - vsqka oblast kodira unikalni triagalnici. Parvite 2 slu4aq se prebroqvat lesno, a 3tiqt iziskva 2 vlojeni cikula, vutre6niq ot koito oba4e moje da se izbegne s formulata za suma na posledovatelni integer-i.

p5 - sortirame pravougulnicite po golemina i im slagame suotvetnite indeksi (nai-malkiq e 1). Taka trqbva da namerim za vsqka permutaciq na 1,2..N dali to4no K 4isla ot neq otgovarqt na uslovieto da nqma po-golqmo 4islo predi tqh. Otgovorat e broqt tezi permutacii. Za da gi namerim izpolzvame dinami4no s maska, kato za vsqka poziciq ot permutaciqta, za duljinata na dotuk namerenata "redica" (ot 4isla koito otgovarqt na uslovieto) i za bitmaskata s vsi4kite izpolzvani 4isla pazim kolko permutacii ima. Ot daden state na dp-to otivame vuv vsi4ki state-ove sus neizpolzvano ot nego 4islo. Pod "otivame" se ima prevdid 4e uveli4avame stoinostta na noviq state sus stoinostta na stariq. Nakraq otgovorat 6te sumata ot vsi4ki pozicii ot dp-to za koito bitmaskata e samo edinici (vsi4ki 4isla sa izpolzvani) i duljinata na teku6tata redika=K. Tui kato tozi algoritam vupreki vsi4ko otnema pove4e vreme i pamet ot neobhodimoto, precompute-vam otgovora za vseki N i K. V source code-a ima i implementaciq na opisaniq algoritam (za protokola, generiraneto otne okolo 21 sekundi).
 
p6 - grafa se pravi oilerov, kato se dobavqt "fiktivni" rebra mejdu dvoiki varhove ot ne4etna stepen, sus tegla ravni na duljinata na nqkoi put m/u tqh. Na praktika vsi4ki na4alni rebra 6te se obhodqt pone po vednuj i ostava da minimizirame duljinite na novodobavenite rebra. Qsno e, 4e za vsqka dvoika ne4etni vurhove 6te vzemame minimalniq put mejdu tqh pri svarzvaneto im (zatova se puksa algoritama na dijkstra ot vseki takuv vruh). Ostavq da namerim takova okomplektovane na ne4etnite varhove po dvoiki, 4e sbora ot duljinite na nai-kusite puti6ta m/y tqh da e minimalen. Taka zada4ata se svejda do namirane na cenata na perfect minimum weight matching v pulniq graph, sustaven samo ot varhovete s ne4etna stepen, kato ot vseki do vseki tegloto na rebroto = minimalniq put m/y tqh v originalniq graph. Zada4ata e NP-pulna, kato pulnoto iz4erpvane raboti efektivno pri broi na ne4etnite varhove N<=20. Razraboteni sa algoritmi (bazirani na Edmonds Blossim-shrinking algorithm ot 1974, koito re6ava zada4ata za planaren graph za polynomialno vreme) koito q re6avat dosta efektivno, kato nai-dobriq ot tqh moje bi e t.nar. Blossom IV, razraboten ot William Cook and Andre Rohe prez 1998, 4iqto realizaciq e pusnata za svobodno razprostranenie v internet (su6testuva algoritam ot 2001 na Kurt Mehlhorn and Guido Schafer, koito tvurdqt 4e e po-burz, no e 4ast ot komersialniq paket LEDA i e s platen licenz, poradi koeto ne sum izpolzval nego). Za sujalenie oba4e ne uspqh da q adaptiram da raboti svobodno kum moq kod taka 4e si ostavqm sus brute force-a puk kvoto stane :)